#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_K31_Drone_SW00

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "TheK31_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_K31_Drone_SW00.AB_K31_Drone_SW00_C
// 0x0810 (0x0B80 - 0x0370)
class UAB_K31_Drone_SW00_C final : public UK31DroneAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x03A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x03D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x03F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0420(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0448(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0470(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0498(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x04C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x04E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0510(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0538(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0560(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0588(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x05B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x05D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0600(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0628(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0650(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0698(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x06B8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0700(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0720(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0768(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0788(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x07D0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x07F0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0838(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0858(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x08A0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x08C0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0908(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0928(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0970(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0990(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x09D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x09F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0A40(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0A60(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0B28(0x0050)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_1165791C4728D35F9929D5A94DC42FA6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_20DFB751402AC8571068C686F3801BDF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_32CFE95D49F5416722CFF680EA49A230();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_4BFE553B42F42C9097E843B0529AB1D5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_5E09C99C4A7E608D0ED899873F1E7093();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_6FA5AD214342AE2F2FCA298BB8B0E8E8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_705D2D3949AAD85E4074D0914BA9F216();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_7D627FE941E27477A045B8B20A283523();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_8507F89C4EA9EB6B3E3A4C85AA5CD8DA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_876FD404465408A92338A48C40A44D93();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_90B5ED4C40B4A31418674A9F74279CEE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_93C0EB0A4E7158E365EA3380454D4128();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_9CEB5D274D8EA01ACAC5D5ACBD0E7374();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_AC2DDE8B436224248903E6A59C1C8592();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_D10437C947BB1DE16EBEF694A7703161();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_F9DEEE334283F85D5C3957A5C74774A2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K31_Drone_SW00_AnimGraphNode_TransitionResult_FE86B32142BD91799B0455A684E68DE0();
	void ExecuteUbergraph_AB_K31_Drone_SW00(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_K31_Drone_SW00_C">();
	}
	static class UAB_K31_Drone_SW00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_K31_Drone_SW00_C>();
	}
};
static_assert(alignof(UAB_K31_Drone_SW00_C) == 0x000010, "Wrong alignment on UAB_K31_Drone_SW00_C");
static_assert(sizeof(UAB_K31_Drone_SW00_C) == 0x000B80, "Wrong size on UAB_K31_Drone_SW00_C");
static_assert(offsetof(UAB_K31_Drone_SW00_C, UberGraphFrame) == 0x000370, "Member 'UAB_K31_Drone_SW00_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UAB_K31_Drone_SW00_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UAB_K31_Drone_SW00_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_Root) == 0x000388, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_16) == 0x0003A8, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_15) == 0x0003D0, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_14) == 0x0003F8, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_13) == 0x000420, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_12) == 0x000448, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_11) == 0x000470, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_10) == 0x000498, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_9) == 0x0004C0, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_8) == 0x0004E8, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_7) == 0x000510, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_6) == 0x000538, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_5) == 0x000560, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_4) == 0x000588, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_3) == 0x0005B0, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_2) == 0x0005D8, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult_1) == 0x000600, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_TransitionResult) == 0x000628, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_SequencePlayer_9) == 0x000650, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_StateResult_9) == 0x000698, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_SequencePlayer_8) == 0x0006B8, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_StateResult_8) == 0x000700, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_SequencePlayer_7) == 0x000720, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_StateResult_7) == 0x000768, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_SequencePlayer_6) == 0x000788, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_StateResult_6) == 0x0007D0, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_SequencePlayer_5) == 0x0007F0, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_StateResult_5) == 0x000838, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_SequencePlayer_4) == 0x000858, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_StateResult_4) == 0x0008A0, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_SequencePlayer_3) == 0x0008C0, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_StateResult_3) == 0x000908, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_SequencePlayer_2) == 0x000928, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_StateResult_2) == 0x000970, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_SequencePlayer_1) == 0x000990, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_StateResult_1) == 0x0009D8, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_SequencePlayer) == 0x0009F8, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_StateResult) == 0x000A40, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_StateMachine) == 0x000A60, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAB_K31_Drone_SW00_C, AnimGraphNode_Slot) == 0x000B28, "Member 'UAB_K31_Drone_SW00_C::AnimGraphNode_Slot' has a wrong offset!");

}

