#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_VFX_Niagara_Handler

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "DBDSharedTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_VFX_Niagara_Handler.BPC_VFX_Niagara_Handler_C
// 0x00B8 (0x0170 - 0x00B8)
class UBPC_VFX_Niagara_Handler_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<struct FGameplayTag, class UNiagaraComponent*> NS_Active_Systems;                           // 0x00C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class USceneComponent*                        NS_Actor_Comp_Ref;                                 // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NS_Specific_Location;                              // 0x0118(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPDA_NiagaraHandler_C*                  DA_Active_Data_Asset;                              // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DA_Active_Tag;                                     // 0x0138(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OwnerName;                                         // 0x0148(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FRotator                               NS_Specific_Rotation;                              // 0x0158(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ReceiveBeginPlay();
	void NS_Update_Vector3_Parameters(const struct FGameplayTag& SystemInstanceTag, class FName ParameterName, const struct FVector& Vector3);
	void NS_Update_Linear_Color_Parameters(const struct FGameplayTag& SystemInstanceTag, class FName ParameterName, const struct FLinearColor& LinearColor);
	void NS_Update_Boolean_Parameters(const struct FGameplayTag& SystemInstanceTag, class FName ParameterName, bool Boolean);
	void NS_Update_Float_Parameters(const struct FGameplayTag& SystemInstanceTag, class FName ParameterName, double float_0);
	void NS_Spawn_VFX_At_Location();
	void NS_Unspawn_VFX(const struct FGameplayTag& SystemInstanceTag);
	void NS_Spawn_VFX(const struct FGameplayTag& SystemInstanceTag, class UPDA_NiagaraHandler_C* Spawn_Parameters, class USceneComponent* Owner_Reference, const struct FVector& SpecificLocation, const struct FRotator& SpecificRotation);
	void NS_Spawn_VFX_Attached();
	void NS_Set_Rotation_World(const struct FGameplayTag& SystemInstanceTag, const struct FRotator& NewRotation);
	void NS_IsValid_VFX(const struct FGameplayTag& SystemInstanceTag, bool* IsValid);
	void NS_Matches_Player_Role(bool* Result);
	void NS_Destroy_VFX(const struct FGameplayTag& SystemInstanceTag);
	void NS_Initialize_Params(const struct FGameplayTag& System_To_Spawn, class UPDA_NiagaraHandler_C* Data_Asset, class USceneComponent* Actor_Component_Reference, const struct FVector& Specific_Location, const struct FRotator& Specific_Rotation);
	void ExecuteUbergraph_BPC_VFX_Niagara_Handler(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_VFX_Niagara_Handler_C">();
	}
	static class UBPC_VFX_Niagara_Handler_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_VFX_Niagara_Handler_C>();
	}
};
static_assert(alignof(UBPC_VFX_Niagara_Handler_C) == 0x000008, "Wrong alignment on UBPC_VFX_Niagara_Handler_C");
static_assert(sizeof(UBPC_VFX_Niagara_Handler_C) == 0x000170, "Wrong size on UBPC_VFX_Niagara_Handler_C");
static_assert(offsetof(UBPC_VFX_Niagara_Handler_C, UberGraphFrame) == 0x0000B8, "Member 'UBPC_VFX_Niagara_Handler_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_Niagara_Handler_C, NS_Active_Systems) == 0x0000C0, "Member 'UBPC_VFX_Niagara_Handler_C::NS_Active_Systems' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_Niagara_Handler_C, NS_Actor_Comp_Ref) == 0x000110, "Member 'UBPC_VFX_Niagara_Handler_C::NS_Actor_Comp_Ref' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_Niagara_Handler_C, NS_Specific_Location) == 0x000118, "Member 'UBPC_VFX_Niagara_Handler_C::NS_Specific_Location' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_Niagara_Handler_C, DA_Active_Data_Asset) == 0x000130, "Member 'UBPC_VFX_Niagara_Handler_C::DA_Active_Data_Asset' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_Niagara_Handler_C, DA_Active_Tag) == 0x000138, "Member 'UBPC_VFX_Niagara_Handler_C::DA_Active_Tag' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_Niagara_Handler_C, OwnerName) == 0x000148, "Member 'UBPC_VFX_Niagara_Handler_C::OwnerName' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_Niagara_Handler_C, NS_Specific_Rotation) == 0x000158, "Member 'UBPC_VFX_Niagara_Handler_C::NS_Specific_Rotation' has a wrong offset!");

}

