#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_K37_VFX

#include "Basic.hpp"

#include "BPI_K37_VFX_classes.hpp"
#include "BPI_K37_VFX_parameters.hpp"


namespace SDK
{

// Function BPI_K37_VFX.BPI_K37_VFX_C.FX_K37_BatFormStunPanicMode
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_K37_VFX_C::FX_K37_BatFormStunPanicMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "FX_K37_BatFormStunPanicMode");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_K37_VFX.BPI_K37_VFX_C.FX_K37_Mori_Appear
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_K37_VFX_C::FX_K37_Mori_Appear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "FX_K37_Mori_Appear");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_K37_VFX.BPI_K37_VFX_C.FX_K37_Mori_AttackSwing
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_K37_VFX_C::FX_K37_Mori_AttackSwing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "FX_K37_Mori_AttackSwing");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_K37_VFX.BPI_K37_VFX_C.FX_K37_Mori_Disappear
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_K37_VFX_C::FX_K37_Mori_Disappear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "FX_K37_Mori_Disappear");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_K37_VFX.BPI_K37_VFX_C.GetK37FormsMaterialHelpers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialHelper**                 Vampire                                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UMaterialHelper**                 Wolf                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UMaterialHelper**                 Bat                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_K37_VFX_C::GetK37FormsMaterialHelpers(class UMaterialHelper** Vampire, class UMaterialHelper** Wolf, class UMaterialHelper** Bat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "GetK37FormsMaterialHelpers");

	Params::BPI_K37_VFX_C_GetK37FormsMaterialHelpers Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Vampire != nullptr)
		*Vampire = Parms.Vampire;

	if (Wolf != nullptr)
		*Wolf = Parms.Wolf;

	if (Bat != nullptr)
		*Bat = Parms.Bat;
}


// Function BPI_K37_VFX.BPI_K37_VFX_C.GetK37FormTransitionTimelines
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTimelineComponent**              Vampire                                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UTimelineComponent**              Bat                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UTimelineComponent**              Wolf                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_K37_VFX_C::GetK37FormTransitionTimelines(class UTimelineComponent** Vampire, class UTimelineComponent** Bat, class UTimelineComponent** Wolf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "GetK37FormTransitionTimelines");

	Params::BPI_K37_VFX_C_GetK37FormTransitionTimelines Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Vampire != nullptr)
		*Vampire = Parms.Vampire;

	if (Bat != nullptr)
		*Bat = Parms.Bat;

	if (Wolf != nullptr)
		*Wolf = Parms.Wolf;
}


// Function BPI_K37_VFX.BPI_K37_VFX_C.GetVFXBatsNS
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent**               BatsNiagaraSystem                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_K37_VFX_C::GetVFXBatsNS(class UNiagaraComponent** BatsNiagaraSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "GetVFXBatsNS");

	Params::BPI_K37_VFX_C_GetVFXBatsNS Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (BatsNiagaraSystem != nullptr)
		*BatsNiagaraSystem = Parms.BatsNiagaraSystem;
}


// Function BPI_K37_VFX.BPI_K37_VFX_C.K37CancellableMistFormEnd_NotifyCallback
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_K37_VFX_C::K37CancellableMistFormEnd_NotifyCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "K37CancellableMistFormEnd_NotifyCallback");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_K37_VFX.BPI_K37_VFX_C.K37FormTransitionVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EK37Forms                               FormToTransitionInOrOutFrom                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldTransformIntoForm                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldMeshSwap                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HideGlowingEyesInVampireForm                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_K37_VFX_C::K37FormTransitionVFX(EK37Forms FormToTransitionInOrOutFrom, bool ShouldTransformIntoForm, bool ShouldMeshSwap, double PlayRate, bool HideGlowingEyesInVampireForm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "K37FormTransitionVFX");

	Params::BPI_K37_VFX_C_K37FormTransitionVFX Parms{};

	Parms.FormToTransitionInOrOutFrom = FormToTransitionInOrOutFrom;
	Parms.ShouldTransformIntoForm = ShouldTransformIntoForm;
	Parms.ShouldMeshSwap = ShouldMeshSwap;
	Parms.PlayRate = PlayRate;
	Parms.HideGlowingEyesInVampireForm = HideGlowingEyesInVampireForm;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_K37_VFX.BPI_K37_VFX_C.K37OnEnterForm
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EK37Forms                               Form                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isStartingForm                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_K37_VFX_C::K37OnEnterForm(EK37Forms Form, double PlayRate, bool isStartingForm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "K37OnEnterForm");

	Params::BPI_K37_VFX_C_K37OnEnterForm Parms{};

	Parms.Form = Form;
	Parms.PlayRate = PlayRate;
	Parms.isStartingForm = isStartingForm;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_K37_VFX.BPI_K37_VFX_C.K37OnExitForm
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EK37Forms                               Form                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_K37_VFX_C::K37OnExitForm(EK37Forms Form, double PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "K37OnExitForm");

	Params::BPI_K37_VFX_C_K37OnExitForm Parms{};

	Parms.Form = Form;
	Parms.PlayRate = PlayRate;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_K37_VFX.BPI_K37_VFX_C.K37SetBatTeleportState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_K37_VFX_C::K37SetBatTeleportState(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "K37SetBatTeleportState");

	Params::BPI_K37_VFX_C_K37SetBatTeleportState Parms{};

	Parms.Enabled = Enabled;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_K37_VFX.BPI_K37_VFX_C.K37SetMistShapeState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceMistEvenIfAlreadyVampire                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseDissolve                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_K37_VFX_C::K37SetMistShapeState(bool Enabled, bool ForceMistEvenIfAlreadyVampire, bool UseDissolve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_K37_VFX_C", "K37SetMistShapeState");

	Params::BPI_K37_VFX_C_K37SetMistShapeState Parms{};

	Parms.Enabled = Enabled;
	Parms.ForceMistEvenIfAlreadyVampire = ForceMistEvenIfAlreadyVampire;
	Parms.UseDissolve = UseDissolve;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

