#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QRCodeGenerator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum QRCodeGenerator.EQRCodeErrorCorrectionLevel
// NumValues: 0x0005
enum class EQRCodeErrorCorrectionLevel : uint32
{
	Low                                      = 0,
	Medium                                   = 1,
	Quartile                                 = 2,
	High                                     = 3,
	EQRCodeErrorCorrectionLevel_MAX          = 4,
};

// Enum QRCodeGenerator.EQRCodeMask
// NumValues: 0x000A
enum class EQRCodeMask : uint8
{
	Mask0                                    = 0,
	Mask1                                    = 1,
	Mask2                                    = 2,
	Mask3                                    = 3,
	Mask4                                    = 4,
	Mask5                                    = 5,
	Mask6                                    = 6,
	Mask7                                    = 7,
	Auto                                     = 255,
	EQRCodeMask_MAX                          = 256,
};

// ScriptStruct QRCodeGenerator.QRCodeGenerationParams
// 0x001C (0x001C - 0x0000)
struct FQRCodeGenerationParams final
{
public:
	struct FColor                                 LightColor;                                        // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 DarkColor;                                         // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 BorderColor;                                       // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BorderSize;                                        // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PixelsPerCell;                                     // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQRCodeErrorCorrectionLevel                   ErrorCorrectionLevel;                              // 0x0014(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQRCodeMask                                   Mask;                                              // 0x0018(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          BoostErrorCorrectionLevel;                         // 0x0019(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FQRCodeGenerationParams) == 0x000004, "Wrong alignment on FQRCodeGenerationParams");
static_assert(sizeof(FQRCodeGenerationParams) == 0x00001C, "Wrong size on FQRCodeGenerationParams");
static_assert(offsetof(FQRCodeGenerationParams, LightColor) == 0x000000, "Member 'FQRCodeGenerationParams::LightColor' has a wrong offset!");
static_assert(offsetof(FQRCodeGenerationParams, DarkColor) == 0x000004, "Member 'FQRCodeGenerationParams::DarkColor' has a wrong offset!");
static_assert(offsetof(FQRCodeGenerationParams, BorderColor) == 0x000008, "Member 'FQRCodeGenerationParams::BorderColor' has a wrong offset!");
static_assert(offsetof(FQRCodeGenerationParams, BorderSize) == 0x00000C, "Member 'FQRCodeGenerationParams::BorderSize' has a wrong offset!");
static_assert(offsetof(FQRCodeGenerationParams, PixelsPerCell) == 0x000010, "Member 'FQRCodeGenerationParams::PixelsPerCell' has a wrong offset!");
static_assert(offsetof(FQRCodeGenerationParams, ErrorCorrectionLevel) == 0x000014, "Member 'FQRCodeGenerationParams::ErrorCorrectionLevel' has a wrong offset!");
static_assert(offsetof(FQRCodeGenerationParams, Mask) == 0x000018, "Member 'FQRCodeGenerationParams::Mask' has a wrong offset!");
static_assert(offsetof(FQRCodeGenerationParams, BoostErrorCorrectionLevel) == 0x000019, "Member 'FQRCodeGenerationParams::BoostErrorCorrectionLevel' has a wrong offset!");

}

