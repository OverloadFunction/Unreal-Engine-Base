#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ChallengesMenuRoot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ChallengesMenuRoot.WBP_ChallengesMenuRoot_C
// 0x00A0 (0x04A8 - 0x0408)
class UWBP_ChallengesMenuRoot_C final : public UCoreChallengesMenuWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDBDImage*                              BackgroundFog;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              BackgroundFog_1;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              BlackBgEventDate;                                  // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              BlackBgTitle;                                      // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              BlackOverlay;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              BottomSmokeFX_1;                                   // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              LeftSideTexture;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Quest_LeftNav_Keyart;                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              RightSideTexture;                                  // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Separator;                                         // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              SmokeBackground;                                   // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               TakeoverContainer;                                 // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   EventDecorationWidget;                             // 0x0470(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	static void Set_Brush_From_Texture_Or_Material(class UImage* Image, class UObject* ImageResource, class UObject* __WorldContext);

	void ExecuteUbergraph_WBP_ChallengesMenuRoot(int32 EntryPoint);
	void OnLoaded_5BFD9A8F4798C9F95BFEE280C3B35061(TSubclassOf<class UObject> Loaded);
	void PreConstruct(bool IsDesignTime);
	void SetUiTakeoverVisuals(bool IsActive);
	void UpdateChallengeMenuVisuals(const struct FChallengeSkinUIData& challengeSkinData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ChallengesMenuRoot_C">();
	}
	static class UWBP_ChallengesMenuRoot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ChallengesMenuRoot_C>();
	}
};
static_assert(alignof(UWBP_ChallengesMenuRoot_C) == 0x000008, "Wrong alignment on UWBP_ChallengesMenuRoot_C");
static_assert(sizeof(UWBP_ChallengesMenuRoot_C) == 0x0004A8, "Wrong size on UWBP_ChallengesMenuRoot_C");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, UberGraphFrame) == 0x000408, "Member 'UWBP_ChallengesMenuRoot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, BackgroundFog) == 0x000410, "Member 'UWBP_ChallengesMenuRoot_C::BackgroundFog' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, BackgroundFog_1) == 0x000418, "Member 'UWBP_ChallengesMenuRoot_C::BackgroundFog_1' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, BlackBgEventDate) == 0x000420, "Member 'UWBP_ChallengesMenuRoot_C::BlackBgEventDate' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, BlackBgTitle) == 0x000428, "Member 'UWBP_ChallengesMenuRoot_C::BlackBgTitle' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, BlackOverlay) == 0x000430, "Member 'UWBP_ChallengesMenuRoot_C::BlackOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, BottomSmokeFX_1) == 0x000438, "Member 'UWBP_ChallengesMenuRoot_C::BottomSmokeFX_1' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, LeftSideTexture) == 0x000440, "Member 'UWBP_ChallengesMenuRoot_C::LeftSideTexture' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, Quest_LeftNav_Keyart) == 0x000448, "Member 'UWBP_ChallengesMenuRoot_C::Quest_LeftNav_Keyart' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, RightSideTexture) == 0x000450, "Member 'UWBP_ChallengesMenuRoot_C::RightSideTexture' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, Separator) == 0x000458, "Member 'UWBP_ChallengesMenuRoot_C::Separator' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, SmokeBackground) == 0x000460, "Member 'UWBP_ChallengesMenuRoot_C::SmokeBackground' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, TakeoverContainer) == 0x000468, "Member 'UWBP_ChallengesMenuRoot_C::TakeoverContainer' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuRoot_C, EventDecorationWidget) == 0x000470, "Member 'UWBP_ChallengesMenuRoot_C::EventDecorationWidget' has a wrong offset!");

}

