#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_K38AnimationSignalComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_K38AnimationSignalComponent.BP_K38AnimationSignalComponent_C.ExecuteUbergraph_BP_K38AnimationSignalComponent
// 0x000C (0x000C - 0x0000)
struct BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Menu;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Mori;                           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IdleGameStart;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IdleMenuIntro;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IdleMenu;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_MenuInterrupt01;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_MenuInterrupt02;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WalkEndGame;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent) == 0x000004, "Wrong alignment on BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent");
static_assert(sizeof(BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent) == 0x00000C, "Wrong size on BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent, EntryPoint) == 0x000000, "Member 'BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent, K2Node_CustomEvent_Menu) == 0x000004, "Member 'BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent::K2Node_CustomEvent_Menu' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent, K2Node_CustomEvent_Mori) == 0x000005, "Member 'BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent::K2Node_CustomEvent_Mori' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent, K2Node_CustomEvent_IdleGameStart) == 0x000006, "Member 'BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent::K2Node_CustomEvent_IdleGameStart' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent, K2Node_CustomEvent_IdleMenuIntro) == 0x000007, "Member 'BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent::K2Node_CustomEvent_IdleMenuIntro' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent, K2Node_CustomEvent_IdleMenu) == 0x000008, "Member 'BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent::K2Node_CustomEvent_IdleMenu' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent, K2Node_CustomEvent_MenuInterrupt01) == 0x000009, "Member 'BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent::K2Node_CustomEvent_MenuInterrupt01' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent, K2Node_CustomEvent_MenuInterrupt02) == 0x00000A, "Member 'BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent::K2Node_CustomEvent_MenuInterrupt02' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent, K2Node_CustomEvent_WalkEndGame) == 0x00000B, "Member 'BP_K38AnimationSignalComponent_C_ExecuteUbergraph_BP_K38AnimationSignalComponent::K2Node_CustomEvent_WalkEndGame' has a wrong offset!");

// Function BP_K38AnimationSignalComponent.BP_K38AnimationSignalComponent_C.NotifyFromK38
// 0x0008 (0x0008 - 0x0000)
struct BP_K38AnimationSignalComponent_C_NotifyFromK38 final
{
public:
	bool                                          Menu;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Mori;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IdleGameStart;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IdleMenuIntro;                                     // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IdleMenu;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MenuInterrupt01;                                   // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MenuInterrupt02;                                   // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WalkEndGame;                                       // 0x0007(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_K38AnimationSignalComponent_C_NotifyFromK38) == 0x000001, "Wrong alignment on BP_K38AnimationSignalComponent_C_NotifyFromK38");
static_assert(sizeof(BP_K38AnimationSignalComponent_C_NotifyFromK38) == 0x000008, "Wrong size on BP_K38AnimationSignalComponent_C_NotifyFromK38");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_NotifyFromK38, Menu) == 0x000000, "Member 'BP_K38AnimationSignalComponent_C_NotifyFromK38::Menu' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_NotifyFromK38, Mori) == 0x000001, "Member 'BP_K38AnimationSignalComponent_C_NotifyFromK38::Mori' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_NotifyFromK38, IdleGameStart) == 0x000002, "Member 'BP_K38AnimationSignalComponent_C_NotifyFromK38::IdleGameStart' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_NotifyFromK38, IdleMenuIntro) == 0x000003, "Member 'BP_K38AnimationSignalComponent_C_NotifyFromK38::IdleMenuIntro' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_NotifyFromK38, IdleMenu) == 0x000004, "Member 'BP_K38AnimationSignalComponent_C_NotifyFromK38::IdleMenu' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_NotifyFromK38, MenuInterrupt01) == 0x000005, "Member 'BP_K38AnimationSignalComponent_C_NotifyFromK38::MenuInterrupt01' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_NotifyFromK38, MenuInterrupt02) == 0x000006, "Member 'BP_K38AnimationSignalComponent_C_NotifyFromK38::MenuInterrupt02' has a wrong offset!");
static_assert(offsetof(BP_K38AnimationSignalComponent_C_NotifyFromK38, WalkEndGame) == 0x000007, "Member 'BP_K38AnimationSignalComponent_C_NotifyFromK38::WalkEndGame' has a wrong offset!");

}

