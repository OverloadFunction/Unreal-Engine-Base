#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotify_AkEventWithSubtitles

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function AnimNotify_AkEventWithSubtitles.AnimNotify_AkEventWithSubtitles_C.isPlayerLocallyObserved
// 0x0030 (0x0030 - 0x0000)
struct AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved final
{
public:
	class ADBDBasePlayer*                         OwningPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          isPlayerLocallyObserved_0;                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             K2Node_DynamicCast_AsDBDPlayer;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDMenuPlayer*                         K2Node_DynamicCast_AsDBDMenu_Player;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Audio_Player_LocallyObserved_IsLocallyObserved; // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsLocalPlayerCharacter_ReturnValue;    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved) == 0x000008, "Wrong alignment on AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved");
static_assert(sizeof(AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved) == 0x000030, "Wrong size on AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved, OwningPlayer) == 0x000000, "Member 'AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved::OwningPlayer' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved, isPlayerLocallyObserved_0) == 0x000008, "Member 'AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved::isPlayerLocallyObserved_0' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved, K2Node_DynamicCast_AsDBDPlayer) == 0x000010, "Member 'AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved::K2Node_DynamicCast_AsDBDPlayer' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved, K2Node_DynamicCast_AsDBDMenu_Player) == 0x000020, "Member 'AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved::K2Node_DynamicCast_AsDBDMenu_Player' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved, CallFunc_Audio_Player_LocallyObserved_IsLocallyObserved) == 0x000029, "Member 'AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved::CallFunc_Audio_Player_LocallyObserved_IsLocallyObserved' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved, CallFunc_GetIsLocalPlayerCharacter_ReturnValue) == 0x00002A, "Member 'AnimNotify_AkEventWithSubtitles_C_isPlayerLocallyObserved::CallFunc_GetIsLocalPlayerCharacter_ReturnValue' has a wrong offset!");

// Function AnimNotify_AkEventWithSubtitles.AnimNotify_AkEventWithSubtitles_C.Received_Notify
// 0x0108 (0x0108 - 0x0000)
struct AnimNotify_AkEventWithSubtitles_C_Received_Notify final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAnimNotifyEventReference              EventReference;                                    // 0x0010(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDBasePlayer*                         CallFunc_GetOwningDBDBasePlayer_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Should_Execute_Notify_ShouldExecute;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x00C0(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAkComponent_ComponentCreated;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_GetAKComponent_ReturnValue;               // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CallFunc_PostAkEventWithSubtitles_akEventPlayed;   // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEventWithSubtitles_ReturnValue;     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PostAkEventWithSubtitles_maxSubtitleDistance_ImplicitCast; // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimNotify_AkEventWithSubtitles_C_Received_Notify) == 0x000008, "Wrong alignment on AnimNotify_AkEventWithSubtitles_C_Received_Notify");
static_assert(sizeof(AnimNotify_AkEventWithSubtitles_C_Received_Notify) == 0x000108, "Wrong size on AnimNotify_AkEventWithSubtitles_C_Received_Notify");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, MeshComp) == 0x000000, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::MeshComp' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, Animation) == 0x000008, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::Animation' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, EventReference) == 0x000010, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::EventReference' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, ReturnValue) == 0x000038, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_GetAnimInstance_ReturnValue) == 0x000040, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_GetOwningDBDBasePlayer_ReturnValue) == 0x000048, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_GetOwningDBDBasePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_Should_Execute_Notify_ShouldExecute) == 0x000050, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_Should_Execute_Notify_ShouldExecute' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_GetDisplayName_ReturnValue) == 0x000060, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_GetDisplayName_ReturnValue_1) == 0x000070, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, Temp_delegate_Variable) == 0x0000C0, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_Conv_StringToName_ReturnValue) == 0x0000D4, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_GetAkComponent_ComponentCreated) == 0x0000E0, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_GetAkComponent_ComponentCreated' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_GetAKComponent_ReturnValue) == 0x0000E8, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_GetAKComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_PostAkEventWithSubtitles_akEventPlayed) == 0x0000F0, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_PostAkEventWithSubtitles_akEventPlayed' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_PostAkEventWithSubtitles_ReturnValue) == 0x0000F8, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_PostAkEventWithSubtitles_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_IsValid_ReturnValue) == 0x0000FC, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Received_Notify, CallFunc_PostAkEventWithSubtitles_maxSubtitleDistance_ImplicitCast) == 0x000100, "Member 'AnimNotify_AkEventWithSubtitles_C_Received_Notify::CallFunc_PostAkEventWithSubtitles_maxSubtitleDistance_ImplicitCast' has a wrong offset!");

// Function AnimNotify_AkEventWithSubtitles.AnimNotify_AkEventWithSubtitles_C.Should Execute Notify
// 0x00B8 (0x00B8 - 0x0000)
struct AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify final
{
public:
	class ADBDBasePlayer*                         OwningPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldExecute;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MatchesForbiddenAudioSwitch;                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MatchesRequiredAudioSwitch;                        // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerLocallyObserved_IsPlayerLocallyObserved; // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomizedAudioComponent*              CallFunc_GetCustomizedAudio_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomizedAudioComponent*              CallFunc_GetCustomizedAudio_ReturnValue_1;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnimNotifyPlayedForThisMatch_ReturnValue; // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomSoundFXData                     CallFunc_Array_Get_Item;                           // 0x0040(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAudioSwitchState_ReturnValue;          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomSoundFXData                     CallFunc_Array_Get_Item_1;                         // 0x0080(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetAudioSwitchState_ReturnValue_1;        // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify) == 0x000008, "Wrong alignment on AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify");
static_assert(sizeof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify) == 0x0000B8, "Wrong size on AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, OwningPlayer) == 0x000000, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::OwningPlayer' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, ShouldExecute) == 0x000008, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::ShouldExecute' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, MatchesForbiddenAudioSwitch) == 0x000009, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::MatchesForbiddenAudioSwitch' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, MatchesRequiredAudioSwitch) == 0x00000A, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::MatchesRequiredAudioSwitch' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_IsPlayerLocallyObserved_IsPlayerLocallyObserved) == 0x00000B, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_IsPlayerLocallyObserved_IsPlayerLocallyObserved' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_GetCustomizedAudio_ReturnValue) == 0x000010, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_GetCustomizedAudio_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_GetCustomizedAudio_ReturnValue_1) == 0x000020, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_GetCustomizedAudio_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, Temp_int_Array_Index_Variable) == 0x000028, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_Not_PreBool_ReturnValue_1) == 0x000039, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_BooleanAND_ReturnValue_1) == 0x00003A, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_HasAnimNotifyPlayedForThisMatch_ReturnValue) == 0x00003B, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_HasAnimNotifyPlayedForThisMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_BooleanAND_ReturnValue_2) == 0x00003C, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_Array_Get_Item) == 0x000040, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_GetAudioSwitchState_ReturnValue) == 0x000060, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_GetAudioSwitchState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000070, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_BooleanOR_ReturnValue) == 0x000072, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000098, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_GetAudioSwitchState_ReturnValue_1) == 0x0000A0, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_GetAudioSwitchState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_Array_Length_ReturnValue_2) == 0x0000B0, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x0000B4, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B5, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify, CallFunc_BooleanOR_ReturnValue_1) == 0x0000B6, "Member 'AnimNotify_AkEventWithSubtitles_C_Should_Execute_Notify::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

}

