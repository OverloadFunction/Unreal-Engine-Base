#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotify_AkEventWithSubtitles

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AnimNotify_AkEventWithSubtitles.AnimNotify_AkEventWithSubtitles_C
// 0x0060 (0x00A0 - 0x0040)
class UAnimNotify_AkEventWithSubtitles_C final : public UAnimNotify
{
public:
	class FString                                 Attach_Name;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FAkEventWithSubtitle>           EventRandomizer;                                   // 0x0050(0x0010)(Edit, BlueprintVisible)
	double                                        maxSubtitleDistance;                               // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCustomSoundFXData>             RequiredAudioSwitch;                               // 0x0068(0x0010)(Edit, BlueprintVisible)
	TArray<struct FCustomSoundFXData>             ForbiddenAudioSwitch;                              // 0x0078(0x0010)(Edit, BlueprintVisible)
	class FString                                 AnimNotifyName;                                    // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsOnlyPlayingOnce;                                 // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyPlayIfLocallyObserved;                         // 0x0099(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void isPlayerLocallyObserved(class ADBDBasePlayer* OwningPlayer, bool* isPlayerLocallyObserved_0) const;
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const;
	void Should_Execute_Notify(class ADBDBasePlayer*& OwningPlayer, bool* ShouldExecute) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimNotify_AkEventWithSubtitles_C">();
	}
	static class UAnimNotify_AkEventWithSubtitles_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_AkEventWithSubtitles_C>();
	}
};
static_assert(alignof(UAnimNotify_AkEventWithSubtitles_C) == 0x000008, "Wrong alignment on UAnimNotify_AkEventWithSubtitles_C");
static_assert(sizeof(UAnimNotify_AkEventWithSubtitles_C) == 0x0000A0, "Wrong size on UAnimNotify_AkEventWithSubtitles_C");
static_assert(offsetof(UAnimNotify_AkEventWithSubtitles_C, Attach_Name) == 0x000040, "Member 'UAnimNotify_AkEventWithSubtitles_C::Attach_Name' has a wrong offset!");
static_assert(offsetof(UAnimNotify_AkEventWithSubtitles_C, EventRandomizer) == 0x000050, "Member 'UAnimNotify_AkEventWithSubtitles_C::EventRandomizer' has a wrong offset!");
static_assert(offsetof(UAnimNotify_AkEventWithSubtitles_C, maxSubtitleDistance) == 0x000060, "Member 'UAnimNotify_AkEventWithSubtitles_C::maxSubtitleDistance' has a wrong offset!");
static_assert(offsetof(UAnimNotify_AkEventWithSubtitles_C, RequiredAudioSwitch) == 0x000068, "Member 'UAnimNotify_AkEventWithSubtitles_C::RequiredAudioSwitch' has a wrong offset!");
static_assert(offsetof(UAnimNotify_AkEventWithSubtitles_C, ForbiddenAudioSwitch) == 0x000078, "Member 'UAnimNotify_AkEventWithSubtitles_C::ForbiddenAudioSwitch' has a wrong offset!");
static_assert(offsetof(UAnimNotify_AkEventWithSubtitles_C, AnimNotifyName) == 0x000088, "Member 'UAnimNotify_AkEventWithSubtitles_C::AnimNotifyName' has a wrong offset!");
static_assert(offsetof(UAnimNotify_AkEventWithSubtitles_C, IsOnlyPlayingOnce) == 0x000098, "Member 'UAnimNotify_AkEventWithSubtitles_C::IsOnlyPlayingOnce' has a wrong offset!");
static_assert(offsetof(UAnimNotify_AkEventWithSubtitles_C, OnlyPlayIfLocallyObserved) == 0x000099, "Member 'UAnimNotify_AkEventWithSubtitles_C::OnlyPlayIfLocallyObserved' has a wrong offset!");

}

