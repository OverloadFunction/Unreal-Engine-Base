#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Audio_KLR_15

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Audio_KLR_15.BP_Audio_KLR_15_C.ExecuteUbergraph_BP_Audio_KLR_15
// 0x0008 (0x0008 - 0x0000)
struct BP_Audio_KLR_15_C_ExecuteUbergraph_BP_Audio_KLR_15 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_KLR_15_C_ExecuteUbergraph_BP_Audio_KLR_15) == 0x000004, "Wrong alignment on BP_Audio_KLR_15_C_ExecuteUbergraph_BP_Audio_KLR_15");
static_assert(sizeof(BP_Audio_KLR_15_C_ExecuteUbergraph_BP_Audio_KLR_15) == 0x000008, "Wrong size on BP_Audio_KLR_15_C_ExecuteUbergraph_BP_Audio_KLR_15");
static_assert(offsetof(BP_Audio_KLR_15_C_ExecuteUbergraph_BP_Audio_KLR_15, EntryPoint) == 0x000000, "Member 'BP_Audio_KLR_15_C_ExecuteUbergraph_BP_Audio_KLR_15::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_15_C_ExecuteUbergraph_BP_Audio_KLR_15, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BP_Audio_KLR_15_C_ExecuteUbergraph_BP_Audio_KLR_15::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_Audio_KLR_15.BP_Audio_KLR_15_C.OnKillerSoundbankLoaded
// 0x001C (0x001C - 0x0000)
struct BP_Audio_KLR_15_C_OnKillerSoundbankLoaded final
{
public:
	EAkResult                                     Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_KLR_15_C_OnKillerSoundbankLoaded) == 0x000004, "Wrong alignment on BP_Audio_KLR_15_C_OnKillerSoundbankLoaded");
static_assert(sizeof(BP_Audio_KLR_15_C_OnKillerSoundbankLoaded) == 0x00001C, "Wrong size on BP_Audio_KLR_15_C_OnKillerSoundbankLoaded");
static_assert(offsetof(BP_Audio_KLR_15_C_OnKillerSoundbankLoaded, Result) == 0x000000, "Member 'BP_Audio_KLR_15_C_OnKillerSoundbankLoaded::Result' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_15_C_OnKillerSoundbankLoaded, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_Audio_KLR_15_C_OnKillerSoundbankLoaded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_15_C_OnKillerSoundbankLoaded, Temp_delegate_Variable) == 0x000004, "Member 'BP_Audio_KLR_15_C_OnKillerSoundbankLoaded::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_15_C_OnKillerSoundbankLoaded, CallFunc_PostAkEvent_ReturnValue) == 0x000018, "Member 'BP_Audio_KLR_15_C_OnKillerSoundbankLoaded::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function BP_Audio_KLR_15.BP_Audio_KLR_15_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_Audio_KLR_15_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_KLR_15_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_Audio_KLR_15_C_ReceiveEndPlay");
static_assert(sizeof(BP_Audio_KLR_15_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_Audio_KLR_15_C_ReceiveEndPlay");
static_assert(offsetof(BP_Audio_KLR_15_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_Audio_KLR_15_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

}

