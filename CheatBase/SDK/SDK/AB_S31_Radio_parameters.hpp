#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_S31_Radio

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_CamperMenuAnimationState_structs.hpp"


namespace SDK::Params
{

// Function AB_S31_Radio.AB_S31_Radio_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_S31_Radio_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_S31_Radio_C_AnimGraph) == 0x000008, "Wrong alignment on AB_S31_Radio_C_AnimGraph");
static_assert(sizeof(AB_S31_Radio_C_AnimGraph) == 0x000010, "Wrong size on AB_S31_Radio_C_AnimGraph");
static_assert(offsetof(AB_S31_Radio_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_S31_Radio_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function AB_S31_Radio.AB_S31_Radio_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_S31_Radio_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_S31_Radio_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_S31_Radio_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_S31_Radio_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_S31_Radio_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_S31_Radio_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_S31_Radio_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_S31_Radio.AB_S31_Radio_C.ExecuteUbergraph_AB_S31_Radio
// 0x0060 (0x0060 - 0x0000)
struct AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_CamperMenuAnimationState                 K2Node_CustomEvent_State;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningSkeletalMesh_Skeletal_Mesh_Component; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAB_Menu_S31_C*                         K2Node_DynamicCast_AsAB_Menu_S31;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(Enum_CamperMenuAnimationState State)> K2Node_CreateDelegate_OutputDelegate;       // 0x002C(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Menu_CamperFemale16_C*              K2Node_DynamicCast_AsBP_Menu_Camper_Female_16;     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio) == 0x000008, "Wrong alignment on AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio");
static_assert(sizeof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio) == 0x000060, "Wrong size on AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio");
static_assert(offsetof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio, EntryPoint) == 0x000000, "Member 'AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio, K2Node_CustomEvent_State) == 0x000004, "Member 'AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio, K2Node_Event_DeltaTimeX) == 0x000008, "Member 'AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio, CallFunc_GetOwningSkeletalMesh_Skeletal_Mesh_Component) == 0x000010, "Member 'AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio::CallFunc_GetOwningSkeletalMesh_Skeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio, K2Node_DynamicCast_AsAB_Menu_S31) == 0x000020, "Member 'AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio::K2Node_DynamicCast_AsAB_Menu_S31' has a wrong offset!");
static_assert(offsetof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000048, "Member 'AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio, K2Node_DynamicCast_AsBP_Menu_Camper_Female_16) == 0x000050, "Member 'AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio::K2Node_DynamicCast_AsBP_Menu_Camper_Female_16' has a wrong offset!");
static_assert(offsetof(AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'AB_S31_Radio_C_ExecuteUbergraph_AB_S31_Radio::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function AB_S31_Radio.AB_S31_Radio_C.OnMenuAnimationStateChange_Event
// 0x0001 (0x0001 - 0x0000)
struct AB_S31_Radio_C_OnMenuAnimationStateChange_Event final
{
public:
	Enum_CamperMenuAnimationState                 State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_S31_Radio_C_OnMenuAnimationStateChange_Event) == 0x000001, "Wrong alignment on AB_S31_Radio_C_OnMenuAnimationStateChange_Event");
static_assert(sizeof(AB_S31_Radio_C_OnMenuAnimationStateChange_Event) == 0x000001, "Wrong size on AB_S31_Radio_C_OnMenuAnimationStateChange_Event");
static_assert(offsetof(AB_S31_Radio_C_OnMenuAnimationStateChange_Event, State) == 0x000000, "Member 'AB_S31_Radio_C_OnMenuAnimationStateChange_Event::State' has a wrong offset!");

}

