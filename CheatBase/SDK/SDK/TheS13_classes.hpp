#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS13

#include "Basic.hpp"

#include "DBDCompetence_structs.hpp"
#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// Class TheS13.BoilOverPerk
// 0x0080 (0x04E0 - 0x0460)
class UBoilOverPerk final : public UPerk
{
public:
	TArray<struct FStatusEffectSpawnData>         _effectsToSpawn;                                   // 0x0460(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FPlayerStatusEffectSpawnerHelper       _spawnerHelper;                                    // 0x0470(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                         _additionalWigglingProgressWhenFalling[0x3];       // 0x04C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4CC[0x14];                                     // 0x04CC(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnPlayerPickedUpEnd(class ADBDPlayer* picker);
	void Authority_OnWiggleEnd();

	float GetAdditionalWigglingProgressAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BoilOverPerk">();
	}
	static class UBoilOverPerk* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBoilOverPerk>();
	}
};
static_assert(alignof(UBoilOverPerk) == 0x000008, "Wrong alignment on UBoilOverPerk");
static_assert(sizeof(UBoilOverPerk) == 0x0004E0, "Wrong size on UBoilOverPerk");
static_assert(offsetof(UBoilOverPerk, _effectsToSpawn) == 0x000460, "Member 'UBoilOverPerk::_effectsToSpawn' has a wrong offset!");
static_assert(offsetof(UBoilOverPerk, _spawnerHelper) == 0x000470, "Member 'UBoilOverPerk::_spawnerHelper' has a wrong offset!");
static_assert(offsetof(UBoilOverPerk, _additionalWigglingProgressWhenFalling) == 0x0004C0, "Member 'UBoilOverPerk::_additionalWigglingProgressWhenFalling' has a wrong offset!");

}

