#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChatHistory

#include "Basic.hpp"


namespace SDK
{

// Enum ChatHistory.EChatMessageType
// NumValues: 0x0008
enum class EChatMessageType : uint32
{
	None                                     = 0,
	ChatMessage                              = 1,
	SystemPenaltyWarning                     = 2,
	SystemPlayerJoinedParty                  = 3,
	SystemPlayerLeftParty                    = 4,
	SystemPlayerJoinedOnlineLobby            = 5,
	SystemPlayerLeftOnlineLobby              = 6,
	EChatMessageType_MAX                     = 7,
};

// ScriptStruct ChatHistory.ChatHistoryEntry
// 0x0028 (0x0028 - 0x0000)
struct FChatHistoryEntry final
{
public:
	EChatMessageType                              Type;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerMirrorsId;                                   // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FChatHistoryEntry) == 0x000008, "Wrong alignment on FChatHistoryEntry");
static_assert(sizeof(FChatHistoryEntry) == 0x000028, "Wrong size on FChatHistoryEntry");
static_assert(offsetof(FChatHistoryEntry, Type) == 0x000000, "Member 'FChatHistoryEntry::Type' has a wrong offset!");
static_assert(offsetof(FChatHistoryEntry, PlayerMirrorsId) == 0x000008, "Member 'FChatHistoryEntry::PlayerMirrorsId' has a wrong offset!");
static_assert(offsetof(FChatHistoryEntry, Message) == 0x000018, "Member 'FChatHistoryEntry::Message' has a wrong offset!");

// ScriptStruct ChatHistory.ChatPlayerInfo
// 0x0038 (0x0038 - 0x0000)
struct FChatPlayerInfo final
{
public:
	class FString                                 PlayerMirrorsId;                                   // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlayerName;                                        // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AnonymousPlayerName;                               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerRole;                                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FChatPlayerInfo) == 0x000008, "Wrong alignment on FChatPlayerInfo");
static_assert(sizeof(FChatPlayerInfo) == 0x000038, "Wrong size on FChatPlayerInfo");
static_assert(offsetof(FChatPlayerInfo, PlayerMirrorsId) == 0x000000, "Member 'FChatPlayerInfo::PlayerMirrorsId' has a wrong offset!");
static_assert(offsetof(FChatPlayerInfo, PlayerName) == 0x000010, "Member 'FChatPlayerInfo::PlayerName' has a wrong offset!");
static_assert(offsetof(FChatPlayerInfo, AnonymousPlayerName) == 0x000020, "Member 'FChatPlayerInfo::AnonymousPlayerName' has a wrong offset!");
static_assert(offsetof(FChatPlayerInfo, PlayerRole) == 0x000030, "Member 'FChatPlayerInfo::PlayerRole' has a wrong offset!");

// ScriptStruct ChatHistory.ChatHistory
// 0x0020 (0x0020 - 0x0000)
struct FChatHistory final
{
public:
	TArray<struct FChatHistoryEntry>              _chatMessageHistory;                               // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FChatPlayerInfo>                _chatPlayerRoles;                                  // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FChatHistory) == 0x000008, "Wrong alignment on FChatHistory");
static_assert(sizeof(FChatHistory) == 0x000020, "Wrong size on FChatHistory");
static_assert(offsetof(FChatHistory, _chatMessageHistory) == 0x000000, "Member 'FChatHistory::_chatMessageHistory' has a wrong offset!");
static_assert(offsetof(FChatHistory, _chatPlayerRoles) == 0x000010, "Member 'FChatHistory::_chatPlayerRoles' has a wrong offset!");

}

