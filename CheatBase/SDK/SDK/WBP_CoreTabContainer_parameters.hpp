#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreTabContainer

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"
#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreTabContainer.WBP_CoreTabContainer_C.CreateInputSwitcher
// 0x0030 (0x0030 - 0x0000)
struct WBP_CoreTabContainer_C_CreateInputSwitcher final
{
public:
	class UClass*                                 InputSwitcherClass_0;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCoreInputSwitcherWidget*               OutInputSwitcher;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           InputSwitcherContainer;                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Alignment;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCoreInputSwitcherWidget*               CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreTabContainer_C_CreateInputSwitcher) == 0x000008, "Wrong alignment on WBP_CoreTabContainer_C_CreateInputSwitcher");
static_assert(sizeof(WBP_CoreTabContainer_C_CreateInputSwitcher) == 0x000030, "Wrong size on WBP_CoreTabContainer_C_CreateInputSwitcher");
static_assert(offsetof(WBP_CoreTabContainer_C_CreateInputSwitcher, InputSwitcherClass_0) == 0x000000, "Member 'WBP_CoreTabContainer_C_CreateInputSwitcher::InputSwitcherClass_0' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_CreateInputSwitcher, OutInputSwitcher) == 0x000008, "Member 'WBP_CoreTabContainer_C_CreateInputSwitcher::OutInputSwitcher' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_CreateInputSwitcher, InputSwitcherContainer) == 0x000010, "Member 'WBP_CoreTabContainer_C_CreateInputSwitcher::InputSwitcherContainer' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_CreateInputSwitcher, Alignment) == 0x000018, "Member 'WBP_CoreTabContainer_C_CreateInputSwitcher::Alignment' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_CreateInputSwitcher, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_CoreTabContainer_C_CreateInputSwitcher::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_CreateInputSwitcher, CallFunc_AddChild_ReturnValue) == 0x000028, "Member 'WBP_CoreTabContainer_C_CreateInputSwitcher::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_CoreTabContainer.WBP_CoreTabContainer_C.ExecuteUbergraph_WBP_CoreTabContainer
// 0x0058 (0x0058 - 0x0000)
struct WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControlMode                                  K2Node_Event_controlMode;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCoreTabWidget*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer) == 0x000008, "Wrong alignment on WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer");
static_assert(sizeof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer) == 0x000058, "Wrong size on WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, EntryPoint) == 0x000000, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, K2Node_Event_IsDesignTime) == 0x000018, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, K2Node_Event_controlMode) == 0x000019, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::K2Node_Event_controlMode' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, Temp_int_Variable) == 0x000044, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, CallFunc_AddChildToGrid_ReturnValue) == 0x000048, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, CallFunc_IsValid_ReturnValue_3) == 0x000050, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000051, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'WBP_CoreTabContainer_C_ExecuteUbergraph_WBP_CoreTabContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_CoreTabContainer.WBP_CoreTabContainer_C.OnControlModeChangedBP
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreTabContainer_C_OnControlModeChangedBP final
{
public:
	EControlMode                                  controlMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreTabContainer_C_OnControlModeChangedBP) == 0x000001, "Wrong alignment on WBP_CoreTabContainer_C_OnControlModeChangedBP");
static_assert(sizeof(WBP_CoreTabContainer_C_OnControlModeChangedBP) == 0x000001, "Wrong size on WBP_CoreTabContainer_C_OnControlModeChangedBP");
static_assert(offsetof(WBP_CoreTabContainer_C_OnControlModeChangedBP, controlMode) == 0x000000, "Member 'WBP_CoreTabContainer_C_OnControlModeChangedBP::controlMode' has a wrong offset!");

// Function WBP_CoreTabContainer.WBP_CoreTabContainer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreTabContainer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreTabContainer_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CoreTabContainer_C_PreConstruct");
static_assert(sizeof(WBP_CoreTabContainer_C_PreConstruct) == 0x000001, "Wrong size on WBP_CoreTabContainer_C_PreConstruct");
static_assert(offsetof(WBP_CoreTabContainer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CoreTabContainer_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CoreTabContainer.WBP_CoreTabContainer_C.SetInputSwitcherAlignment
// 0x0010 (0x0010 - 0x0000)
struct WBP_CoreTabContainer_C_SetInputSwitcherAlignment final
{
public:
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_1;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreTabContainer_C_SetInputSwitcherAlignment) == 0x000008, "Wrong alignment on WBP_CoreTabContainer_C_SetInputSwitcherAlignment");
static_assert(sizeof(WBP_CoreTabContainer_C_SetInputSwitcherAlignment) == 0x000010, "Wrong size on WBP_CoreTabContainer_C_SetInputSwitcherAlignment");
static_assert(offsetof(WBP_CoreTabContainer_C_SetInputSwitcherAlignment, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000000, "Member 'WBP_CoreTabContainer_C_SetInputSwitcherAlignment::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_SetInputSwitcherAlignment, CallFunc_SlotAsGridSlot_ReturnValue_1) == 0x000008, "Member 'WBP_CoreTabContainer_C_SetInputSwitcherAlignment::CallFunc_SlotAsGridSlot_ReturnValue_1' has a wrong offset!");

// Function WBP_CoreTabContainer.WBP_CoreTabContainer_C.UpdateAlignments
// 0x0128 (0x0128 - 0x0000)
struct WBP_CoreTabContainer_C_UpdateAlignments final
{
public:
	double                                        CallFunc_BreakVector2D_X;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_1;             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_2;             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_3;             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot_1;                  // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot_2;                  // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot_3;                  // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot_4;                  // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot_5;                  // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast;       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast_1;     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreTabContainer_C_UpdateAlignments) == 0x000008, "Wrong alignment on WBP_CoreTabContainer_C_UpdateAlignments");
static_assert(sizeof(WBP_CoreTabContainer_C_UpdateAlignments) == 0x000128, "Wrong size on WBP_CoreTabContainer_C_UpdateAlignments");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_BreakVector2D_X) == 0x000000, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_BreakVector2D_X_1) == 0x000010, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_BreakVector2D_Y_1) == 0x000018, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_MakeVector2D_ReturnValue_1) == 0x000038, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000048, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_SlotAsGridSlot_ReturnValue_1) == 0x000050, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_SlotAsGridSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_BreakVector2D_X_2) == 0x000058, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_BreakVector2D_Y_2) == 0x000060, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_BreakVector2D_X_3) == 0x000068, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_BreakVector2D_Y_3) == 0x000070, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_MakeVector2D_ReturnValue_2) == 0x000078, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000088, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_MakeVector2D_ReturnValue_3) == 0x000090, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_SlotAsGridSlot_ReturnValue_2) == 0x0000A0, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_SlotAsGridSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_SlotAsGridSlot_ReturnValue_3) == 0x0000A8, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_SlotAsGridSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, K2Node_DynamicCast_AsGrid_Slot) == 0x0000B0, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, K2Node_DynamicCast_AsGrid_Slot_1) == 0x0000C0, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::K2Node_DynamicCast_AsGrid_Slot_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, K2Node_DynamicCast_AsGrid_Slot_2) == 0x0000D0, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::K2Node_DynamicCast_AsGrid_Slot_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, K2Node_DynamicCast_AsGrid_Slot_3) == 0x0000E0, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::K2Node_DynamicCast_AsGrid_Slot_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, K2Node_DynamicCast_bSuccess_3) == 0x0000E8, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, K2Node_DynamicCast_AsGrid_Slot_4) == 0x0000F0, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::K2Node_DynamicCast_AsGrid_Slot_4' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, K2Node_DynamicCast_bSuccess_4) == 0x0000F8, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, K2Node_DynamicCast_AsGrid_Slot_5) == 0x000100, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::K2Node_DynamicCast_AsGrid_Slot_5' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, K2Node_DynamicCast_bSuccess_5) == 0x000108, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_Multiply_FloatFloat_A_ImplicitCast) == 0x00010C, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_Multiply_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x000110, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_Multiply_FloatFloat_A_ImplicitCast_1) == 0x000118, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_Multiply_FloatFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreTabContainer_C_UpdateAlignments, CallFunc_MakeVector2D_X_ImplicitCast) == 0x000120, "Member 'WBP_CoreTabContainer_C_UpdateAlignments::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");

}

