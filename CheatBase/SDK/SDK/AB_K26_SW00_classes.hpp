#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_K26_SW00

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "TheK26_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_K26_SW00.AB_K26_SW00_C
// 0x0580 (0x0900 - 0x0380)
class UAB_K26_SW00_C final : public UK26CrowProjectileAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0388(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0390(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0398(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x03B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x03E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0408(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0430(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0458(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0480(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x04A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x04D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x04F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0548(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0570(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x05B8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x05D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0620(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0640(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0688(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x06A8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x06F0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0710(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0758(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0778(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x07C0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x07E0(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x08A8(0x0050)()
	bool                                          NewVar_0;                                          // 0x08F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K26_SW00_AnimGraphNode_TransitionResult_03F75F724242E7E4CD3D01B5FE41FDC7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K26_SW00_AnimGraphNode_TransitionResult_152D3DD248E381360CB442A2993CD1C5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K26_SW00_AnimGraphNode_TransitionResult_323A1E894655514AE74AB8B93F660B5E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K26_SW00_AnimGraphNode_TransitionResult_3C31BC1A49FE35C59787F1B21F8A48BC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K26_SW00_AnimGraphNode_TransitionResult_41D79DBF4A12D24C4C01BA9BF508754F();
	void ExecuteUbergraph_AB_K26_SW00(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_K26_SW00_C">();
	}
	static class UAB_K26_SW00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_K26_SW00_C>();
	}
};
static_assert(alignof(UAB_K26_SW00_C) == 0x000010, "Wrong alignment on UAB_K26_SW00_C");
static_assert(sizeof(UAB_K26_SW00_C) == 0x000900, "Wrong size on UAB_K26_SW00_C");
static_assert(offsetof(UAB_K26_SW00_C, UberGraphFrame) == 0x000380, "Member 'UAB_K26_SW00_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimBlueprintExtension_PropertyAccess) == 0x000388, "Member 'UAB_K26_SW00_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimBlueprintExtension_Base) == 0x000390, "Member 'UAB_K26_SW00_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_Root) == 0x000398, "Member 'UAB_K26_SW00_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_TransitionResult_10) == 0x0003B8, "Member 'UAB_K26_SW00_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_TransitionResult_9) == 0x0003E0, "Member 'UAB_K26_SW00_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_TransitionResult_8) == 0x000408, "Member 'UAB_K26_SW00_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_TransitionResult_7) == 0x000430, "Member 'UAB_K26_SW00_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_TransitionResult_6) == 0x000458, "Member 'UAB_K26_SW00_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_TransitionResult_5) == 0x000480, "Member 'UAB_K26_SW00_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_TransitionResult_4) == 0x0004A8, "Member 'UAB_K26_SW00_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_TransitionResult_3) == 0x0004D0, "Member 'UAB_K26_SW00_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_TransitionResult_2) == 0x0004F8, "Member 'UAB_K26_SW00_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_TransitionResult_1) == 0x000520, "Member 'UAB_K26_SW00_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_TransitionResult) == 0x000548, "Member 'UAB_K26_SW00_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_SequencePlayer_5) == 0x000570, "Member 'UAB_K26_SW00_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_StateResult_5) == 0x0005B8, "Member 'UAB_K26_SW00_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_SequencePlayer_4) == 0x0005D8, "Member 'UAB_K26_SW00_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_StateResult_4) == 0x000620, "Member 'UAB_K26_SW00_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_SequencePlayer_3) == 0x000640, "Member 'UAB_K26_SW00_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_StateResult_3) == 0x000688, "Member 'UAB_K26_SW00_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_SequencePlayer_2) == 0x0006A8, "Member 'UAB_K26_SW00_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_StateResult_2) == 0x0006F0, "Member 'UAB_K26_SW00_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_SequencePlayer_1) == 0x000710, "Member 'UAB_K26_SW00_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_StateResult_1) == 0x000758, "Member 'UAB_K26_SW00_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_SequencePlayer) == 0x000778, "Member 'UAB_K26_SW00_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_StateResult) == 0x0007C0, "Member 'UAB_K26_SW00_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_StateMachine) == 0x0007E0, "Member 'UAB_K26_SW00_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, AnimGraphNode_Slot) == 0x0008A8, "Member 'UAB_K26_SW00_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAB_K26_SW00_C, NewVar_0) == 0x0008F8, "Member 'UAB_K26_SW00_C::NewVar_0' has a wrong offset!");

}

