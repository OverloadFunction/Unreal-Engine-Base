#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExposerCrow

#include "Basic.hpp"

#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_ExposerCrow.BP_ExposerCrow_C.ExecuteUbergraph_BP_ExposerCrow
// 0x0058 (0x0058 - 0x0000)
struct BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_withRandomDelay_1;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_withRandomDelay;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_interior;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast_1;     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow) == 0x000008, "Wrong alignment on BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow");
static_assert(sizeof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow) == 0x000058, "Wrong size on BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, EntryPoint) == 0x000000, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, Temp_delegate_Variable) == 0x000004, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, Temp_delegate_Variable_1) == 0x000018, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, K2Node_Event_withRandomDelay_1) == 0x00002C, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::K2Node_Event_withRandomDelay_1' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, CallFunc_PostAkEvent_ReturnValue) == 0x000030, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, K2Node_Event_withRandomDelay) == 0x000034, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::K2Node_Event_withRandomDelay' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, CallFunc_RandomFloat_ReturnValue) == 0x000038, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, K2Node_Event_interior) == 0x000048, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::K2Node_Event_interior' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, CallFunc_PostAkEvent_ReturnValue_1) == 0x00004C, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, CallFunc_Multiply_FloatFloat_A_ImplicitCast) == 0x000050, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::CallFunc_Multiply_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow, CallFunc_Multiply_FloatFloat_A_ImplicitCast_1) == 0x000054, "Member 'BP_ExposerCrow_C_ExecuteUbergraph_BP_ExposerCrow::CallFunc_Multiply_FloatFloat_A_ImplicitCast_1' has a wrong offset!");

// Function BP_ExposerCrow.BP_ExposerCrow_C.SetIsInteriorBP
// 0x0001 (0x0001 - 0x0000)
struct BP_ExposerCrow_C_SetIsInteriorBP final
{
public:
	bool                                          interior;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExposerCrow_C_SetIsInteriorBP) == 0x000001, "Wrong alignment on BP_ExposerCrow_C_SetIsInteriorBP");
static_assert(sizeof(BP_ExposerCrow_C_SetIsInteriorBP) == 0x000001, "Wrong size on BP_ExposerCrow_C_SetIsInteriorBP");
static_assert(offsetof(BP_ExposerCrow_C_SetIsInteriorBP, interior) == 0x000000, "Member 'BP_ExposerCrow_C_SetIsInteriorBP::interior' has a wrong offset!");

// Function BP_ExposerCrow.BP_ExposerCrow_C.SetTunableValues
// 0x0048 (0x0048 - 0x0000)
struct BP_ExposerCrow_C_SetTunableValues final
{
public:
	class UDBDDesignTunables*                     CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTunableValue_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTunableValue_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTunableValue_ReturnValue_2;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTunableValue_ReturnValue_3;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTunableValue_ReturnValue_4;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTunableValue_ReturnValue_5;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_Max_ImplicitCast;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_Min_ImplicitCast;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CirclingSpeed_ImplicitCast;     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExposerCrow_C_SetTunableValues) == 0x000008, "Wrong alignment on BP_ExposerCrow_C_SetTunableValues");
static_assert(sizeof(BP_ExposerCrow_C_SetTunableValues) == 0x000048, "Wrong size on BP_ExposerCrow_C_SetTunableValues");
static_assert(offsetof(BP_ExposerCrow_C_SetTunableValues, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000000, "Member 'BP_ExposerCrow_C_SetTunableValues::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_SetTunableValues, CallFunc_GetTunableValue_ReturnValue) == 0x000008, "Member 'BP_ExposerCrow_C_SetTunableValues::CallFunc_GetTunableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_SetTunableValues, CallFunc_GetTunableValue_ReturnValue_1) == 0x00000C, "Member 'BP_ExposerCrow_C_SetTunableValues::CallFunc_GetTunableValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_SetTunableValues, CallFunc_GetTunableValue_ReturnValue_2) == 0x000010, "Member 'BP_ExposerCrow_C_SetTunableValues::CallFunc_GetTunableValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_SetTunableValues, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'BP_ExposerCrow_C_SetTunableValues::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_SetTunableValues, CallFunc_GetTunableValue_ReturnValue_3) == 0x000020, "Member 'BP_ExposerCrow_C_SetTunableValues::CallFunc_GetTunableValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_SetTunableValues, CallFunc_GetTunableValue_ReturnValue_4) == 0x000024, "Member 'BP_ExposerCrow_C_SetTunableValues::CallFunc_GetTunableValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_SetTunableValues, CallFunc_GetTunableValue_ReturnValue_5) == 0x000028, "Member 'BP_ExposerCrow_C_SetTunableValues::CallFunc_GetTunableValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_SetTunableValues, CallFunc_RandomFloatInRange_Max_ImplicitCast) == 0x000030, "Member 'BP_ExposerCrow_C_SetTunableValues::CallFunc_RandomFloatInRange_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_SetTunableValues, CallFunc_RandomFloatInRange_Min_ImplicitCast) == 0x000038, "Member 'BP_ExposerCrow_C_SetTunableValues::CallFunc_RandomFloatInRange_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExposerCrow_C_SetTunableValues, K2Node_VariableSet_CirclingSpeed_ImplicitCast) == 0x000040, "Member 'BP_ExposerCrow_C_SetTunableValues::K2Node_VariableSet_CirclingSpeed_ImplicitCast' has a wrong offset!");

// Function BP_ExposerCrow.BP_ExposerCrow_C.StartExitSequence
// 0x0001 (0x0001 - 0x0000)
struct BP_ExposerCrow_C_StartExitSequence final
{
public:
	bool                                          withRandomDelay;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExposerCrow_C_StartExitSequence) == 0x000001, "Wrong alignment on BP_ExposerCrow_C_StartExitSequence");
static_assert(sizeof(BP_ExposerCrow_C_StartExitSequence) == 0x000001, "Wrong size on BP_ExposerCrow_C_StartExitSequence");
static_assert(offsetof(BP_ExposerCrow_C_StartExitSequence, withRandomDelay) == 0x000000, "Member 'BP_ExposerCrow_C_StartExitSequence::withRandomDelay' has a wrong offset!");

// Function BP_ExposerCrow.BP_ExposerCrow_C.StartSpawnSequence
// 0x0001 (0x0001 - 0x0000)
struct BP_ExposerCrow_C_StartSpawnSequence final
{
public:
	bool                                          withRandomDelay;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExposerCrow_C_StartSpawnSequence) == 0x000001, "Wrong alignment on BP_ExposerCrow_C_StartSpawnSequence");
static_assert(sizeof(BP_ExposerCrow_C_StartSpawnSequence) == 0x000001, "Wrong size on BP_ExposerCrow_C_StartSpawnSequence");
static_assert(offsetof(BP_ExposerCrow_C_StartSpawnSequence, withRandomDelay) == 0x000000, "Member 'BP_ExposerCrow_C_StartSpawnSequence::withRandomDelay' has a wrong offset!");

}

