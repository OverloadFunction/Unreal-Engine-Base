#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Splash

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"


namespace SDK::Params
{

// Function WBP_Splash.WBP_Splash_C.ExecuteUbergraph_WBP_Splash
// 0x0098 (0x0098 - 0x0000)
struct WBP_Splash_C_ExecuteUbergraph_WBP_Splash final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUITweenInstance*                       K2Node_CustomEvent_tween_1;                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isVisible_1;                          // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUITweenInstance*                       CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUITweenInstance*                       K2Node_CustomEvent_tween;                          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUITweenInstance*                       CallFunc_ToOpacity_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUITweenInstance*                       CallFunc_Create_ReturnValue_1;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUITweenInstance*                       CallFunc_ToOpacity_ReturnValue_1;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUITweenInstance* tween)> K2Node_CreateDelegate_OutputDelegate;             // 0x0040(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isVisible;                            // 0x0060(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UUITweenInstance* tween)> K2Node_CreateDelegate_OutputDelegate_1;           // 0x0064(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EControlMode                                  K2Node_Event_controlMode;                          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Create_duration_ImplicitCast;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Create_duration_ImplicitCast_1;           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Create_delay_ImplicitCast;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash) == 0x000008, "Wrong alignment on WBP_Splash_C_ExecuteUbergraph_WBP_Splash");
static_assert(sizeof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash) == 0x000098, "Wrong size on WBP_Splash_C_ExecuteUbergraph_WBP_Splash");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, EntryPoint) == 0x000000, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, K2Node_CustomEvent_tween_1) == 0x000008, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::K2Node_CustomEvent_tween_1' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, K2Node_Event_isVisible_1) == 0x000010, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::K2Node_Event_isVisible_1' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, Temp_bool_Variable) == 0x000011, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, K2Node_CustomEvent_tween) == 0x000020, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::K2Node_CustomEvent_tween' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, CallFunc_ToOpacity_ReturnValue) == 0x000028, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::CallFunc_ToOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, CallFunc_Create_ReturnValue_1) == 0x000030, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, CallFunc_ToOpacity_ReturnValue_1) == 0x000038, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::CallFunc_ToOpacity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, K2Node_Event_isVisible) == 0x000060, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::K2Node_Event_isVisible' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, K2Node_Event_IsDesignTime) == 0x000061, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, K2Node_CreateDelegate_OutputDelegate_1) == 0x000064, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, K2Node_Event_controlMode) == 0x000078, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::K2Node_Event_controlMode' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, K2Node_Select_Default) == 0x000080, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, CallFunc_Create_duration_ImplicitCast) == 0x000088, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::CallFunc_Create_duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, CallFunc_Create_duration_ImplicitCast_1) == 0x00008C, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::CallFunc_Create_duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Splash_C_ExecuteUbergraph_WBP_Splash, CallFunc_Create_delay_ImplicitCast) == 0x000090, "Member 'WBP_Splash_C_ExecuteUbergraph_WBP_Splash::CallFunc_Create_delay_ImplicitCast' has a wrong offset!");

// Function WBP_Splash.WBP_Splash_C.OnControlModeChangedBP
// 0x0001 (0x0001 - 0x0000)
struct WBP_Splash_C_OnControlModeChangedBP final
{
public:
	EControlMode                                  controlMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Splash_C_OnControlModeChangedBP) == 0x000001, "Wrong alignment on WBP_Splash_C_OnControlModeChangedBP");
static_assert(sizeof(WBP_Splash_C_OnControlModeChangedBP) == 0x000001, "Wrong size on WBP_Splash_C_OnControlModeChangedBP");
static_assert(offsetof(WBP_Splash_C_OnControlModeChangedBP, controlMode) == 0x000000, "Member 'WBP_Splash_C_OnControlModeChangedBP::controlMode' has a wrong offset!");

// Function WBP_Splash.WBP_Splash_C.OnSaveGameFadeInCompleted
// 0x0008 (0x0008 - 0x0000)
struct WBP_Splash_C_OnSaveGameFadeInCompleted final
{
public:
	class UUITweenInstance*                       tween;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Splash_C_OnSaveGameFadeInCompleted) == 0x000008, "Wrong alignment on WBP_Splash_C_OnSaveGameFadeInCompleted");
static_assert(sizeof(WBP_Splash_C_OnSaveGameFadeInCompleted) == 0x000008, "Wrong size on WBP_Splash_C_OnSaveGameFadeInCompleted");
static_assert(offsetof(WBP_Splash_C_OnSaveGameFadeInCompleted, tween) == 0x000000, "Member 'WBP_Splash_C_OnSaveGameFadeInCompleted::tween' has a wrong offset!");

// Function WBP_Splash.WBP_Splash_C.OnSaveGameFadeOutCompleted
// 0x0008 (0x0008 - 0x0000)
struct WBP_Splash_C_OnSaveGameFadeOutCompleted final
{
public:
	class UUITweenInstance*                       tween;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Splash_C_OnSaveGameFadeOutCompleted) == 0x000008, "Wrong alignment on WBP_Splash_C_OnSaveGameFadeOutCompleted");
static_assert(sizeof(WBP_Splash_C_OnSaveGameFadeOutCompleted) == 0x000008, "Wrong size on WBP_Splash_C_OnSaveGameFadeOutCompleted");
static_assert(offsetof(WBP_Splash_C_OnSaveGameFadeOutCompleted, tween) == 0x000000, "Member 'WBP_Splash_C_OnSaveGameFadeOutCompleted::tween' has a wrong offset!");

// Function WBP_Splash.WBP_Splash_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Splash_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Splash_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Splash_C_PreConstruct");
static_assert(sizeof(WBP_Splash_C_PreConstruct) == 0x000001, "Wrong size on WBP_Splash_C_PreConstruct");
static_assert(offsetof(WBP_Splash_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Splash_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Splash.WBP_Splash_C.SetLoadingTextVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_Splash_C_SetLoadingTextVisibility final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Splash_C_SetLoadingTextVisibility) == 0x000001, "Wrong alignment on WBP_Splash_C_SetLoadingTextVisibility");
static_assert(sizeof(WBP_Splash_C_SetLoadingTextVisibility) == 0x000001, "Wrong size on WBP_Splash_C_SetLoadingTextVisibility");
static_assert(offsetof(WBP_Splash_C_SetLoadingTextVisibility, IsVisible_0) == 0x000000, "Member 'WBP_Splash_C_SetLoadingTextVisibility::IsVisible_0' has a wrong offset!");

// Function WBP_Splash.WBP_Splash_C.SetPressKeyTextVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_Splash_C_SetPressKeyTextVisibility final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Splash_C_SetPressKeyTextVisibility) == 0x000001, "Wrong alignment on WBP_Splash_C_SetPressKeyTextVisibility");
static_assert(sizeof(WBP_Splash_C_SetPressKeyTextVisibility) == 0x000001, "Wrong size on WBP_Splash_C_SetPressKeyTextVisibility");
static_assert(offsetof(WBP_Splash_C_SetPressKeyTextVisibility, IsVisible_0) == 0x000000, "Member 'WBP_Splash_C_SetPressKeyTextVisibility::IsVisible_0' has a wrong offset!");

}

