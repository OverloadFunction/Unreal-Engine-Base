#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Menu_Slasher18

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TheClown_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Menu_BaseSlasher_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Menu_Slasher18.BP_Menu_Slasher18_C
// 0x00F0 (0x0A60 - 0x0970)
class ABP_Menu_Slasher18_C final : public ABP_Menu_BaseSlasher_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Menu_Slasher18_C;                // 0x0968(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_Audio_KLR_18_C*                     BP_Audio_KLR_18;                                   // 0x0970(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 rings;                                             // 0x0978(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDemonModeMenuComponent*                DemonModeMenu;                                     // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SKWS01_REF;                                        // 0x0988(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TML_DemonModeCusto_Color_4A028AF64D8C75B37ACB968AFFF999A6; // 0x0990(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_DemonModeCusto_Demon_Custo_Dissolve_4A028AF64D8C75B37ACB968AFFF999A6; // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_DemonModeCusto_Normal_Custo_Dissolve_4A028AF64D8C75B37ACB968AFFF999A6; // 0x09A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_DemonModeCusto__Direction_4A028AF64D8C75B37ACB968AFFF999A6; // 0x09A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A9[0x7];                                      // 0x09A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_DemonModeCusto;                                // 0x09B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_KatanaDissolve_Dissolve_E350E1F74AF3386DE5C9E7A92E1CFCA4; // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_KatanaDissolve__Direction_E350E1F74AF3386DE5C9E7A92E1CFCA4; // 0x09BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BD[0x3];                                      // 0x09BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_KatanaDissolve;                                // 0x09C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKatanaVisible;                                   // 0x09C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C9[0x7];                                      // 0x09C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         NormalModeCustoParts;                              // 0x09D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       DemonModeVFX;                                      // 0x09E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         DemonModeCustoParts;                               // 0x09F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FLinearColor>                   SKOniEmissiveDefault;                              // 0x0A00(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsInDemonMode;                                     // 0x0A10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A11[0x7];                                      // 0x0A11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   SM_OniEmissiveDefault;                             // 0x0A18(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        MaxSwordDissolveValue;                             // 0x0A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDissolvevalue;                                  // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystemComponent*>       NormalModeVFX;                                     // 0x0A38(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         SK_OniEmissiveIndex;                               // 0x0A48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SK_IsOniEmissiveIndex0;                            // 0x0A4C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4D[0x3];                                      // 0x0A4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OniSMEmissiveIndex;                                // 0x0A50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOniSMEmissiveIndex0;                             // 0x0A54(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateAttemptEscapeVFX();
	void ActivateEndGameVignette(bool IsActive);
	void ActivateKnockoutVFX();
	void ActivateLocalPlayerExposedVFX();
	void ActivatePlayerExposedVFX();
	void ActivatePlayerGlitchVFX(const class UMaterialInstanceDynamic*& GlitchFX, const bool Face, bool Madness, bool Killer);
	void ActivatePlayerLightningVFX(const class UMaterialInstanceDynamic*& LightningFX, bool intense);
	void ActivatePounceStateVFX();
	void ActivateSacrificeCamBlood();
	void ActivateVignetteOnWallCollision();
	void AddBloodDrippingGKMoriMale();
	void AnimateLiquidSyringe();
	void Boon_Unbound();
	void Camper_AntidoteBoostVignette_End();
	void Camper_AntidoteBoostVignette_Start();
	void DeactivateKnockoutVFX();
	void Destroy_Blood_Orb();
	void DisableDemonMode();
	void ExecuteUbergraph_BP_Menu_Slasher18(int32 EntryPoint);
	void GetDemonModeCusto();
	void Hide_Oni_Katana();
	void Hide_Oni_Katana_TPV();
	void HideDemonCosmetic();
	void HideGunBullet();
	void HideSyringe();
	void HideSyringeOnStun();
	void K04_InvisibleOff();
	void K04_InvisibleOn();
	void K04_TelekinesisOff();
	void K04_TelekinesisOn();
	void K05_BloodDrops();
	void K05_SetTrap();
	void K05_TrapImpact();
	void K05_TrapImpactOff();
	void K12_GetAntidoteVignette();
	void K12_GetToxinVignette(EBombType Bomb_Type);
	void K12_Killer_AntidoteBegin();
	void K12_Killer_AntidoteEnd();
	void K12_Killer_BombSmokeColor();
	void K12_Killer_PlaceVignette();
	void K12_Killer_RemoveVignette();
	void K22_AttachedToSurvivor_VFX();
	void K22_BabyBloodDissolve();
	void K22_BabyRespawn();
	void K22_BrotherDissolveLocker();
	void K22_DetachedFromSurvivor_VFX();
	void K22_DormantAttachedSlasher();
	void K22_HighlightDormant(bool IsDormant_);
	void K22_HighlightDormantMain(bool IsDormantMain_);
	void K22_HighlightMissJump();
	void K22_HighlightMissJump_Stop();
	void K22_HighlightSuccessfulAttack();
	void K22_HighlightSuccessfulAttackStop();
	void K22_IsAttachedLocker(bool IsAttachedLocker);
	void K22_Jump_Active();
	void K22_Jump_Inactive();
	void K22_JumpTrail_Activate();
	void K22_JumpTrail_Deactivate();
	void K22_MembraneDelete();
	void K22_MembraneRecovery();
	void K22_QuickDissolveBrother();
	void K22_ReleaseBrother();
	void K22_SpawnWipeVFX();
	void K22_WrongLanding(bool Wrong_Landing);
	void K22_WrongLandingVignette(bool WrongLanding);
	void Killer_LungeAttack_End();
	void Killer_LungeAttack_Start();
	void On_Customisation_Updated();
	void On_Execution();
	void ReceiveBeginPlay();
	void ResetOniEmissiveParameterSK();
	void ResetOniEmissiveParameterSM();
	void ReturnOniToNormal();
	void ReturnToDemonMode();
	void SaveOniEmissiveParameter();
	void SetHighlightedVFX();
	void SetPlayerExposedVFX();
	void Show_Oni_Katana();
	void ShowDemonCosmetic();
	void ShowDemonModeCusto(bool IsInDemonMode_0, bool IsInNormalMode);
	void ShowGunBullet();
	void ShowSyringe();
	void SK_SetOniEmissiveParameter(const struct FLinearColor& emissive);
	void SM_SetOniEmissiveParameter(const struct FLinearColor& emissive);
	void SpawnFakeBullet();
	void SpawnFullScreenBlood();
	void Start_Pounce_VFX();
	void Start_Saliva_VFX();
	void Start_Travelling_Dissolve();
	void Start_Travelling_PP();
	void StartDeathBedDissolve();
	void StartDeathBedRelocateVignette();
	void Stop_Pounce_VFX();
	void Stop_Saliva_VFX();
	void Stop_Travelling_Dissolve();
	void Stop_Travelling_PP();
	void StopTransformation();
	void Survivor_BoonRadius_Enter();
	void Survivor_BoonRadius_Exit();
	void Switch_Kanobo_To_Demon_Mode();
	void Switch_Kanobo_to_Normal_Mode();
	void Switch_Oni_Weapons_To_Normal();
	void TML_DemonModeCusto__FinishedFunc();
	void TML_DemonModeCusto__Switch_Demon__EventFunc();
	void TML_DemonModeCusto__Switch_Normal__EventFunc();
	void TML_DemonModeCusto__UpdateFunc();
	void TML_KatanaDissolve__FinishedFunc();
	void TML_KatanaDissolve__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Menu_Slasher18_C">();
	}
	static class ABP_Menu_Slasher18_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Menu_Slasher18_C>();
	}
};
static_assert(alignof(ABP_Menu_Slasher18_C) == 0x000010, "Wrong alignment on ABP_Menu_Slasher18_C");
static_assert(sizeof(ABP_Menu_Slasher18_C) == 0x000A60, "Wrong size on ABP_Menu_Slasher18_C");
static_assert(offsetof(ABP_Menu_Slasher18_C, UberGraphFrame_BP_Menu_Slasher18_C) == 0x000968, "Member 'ABP_Menu_Slasher18_C::UberGraphFrame_BP_Menu_Slasher18_C' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, BP_Audio_KLR_18) == 0x000970, "Member 'ABP_Menu_Slasher18_C::BP_Audio_KLR_18' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, rings) == 0x000978, "Member 'ABP_Menu_Slasher18_C::rings' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, DemonModeMenu) == 0x000980, "Member 'ABP_Menu_Slasher18_C::DemonModeMenu' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, SKWS01_REF) == 0x000988, "Member 'ABP_Menu_Slasher18_C::SKWS01_REF' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, TML_DemonModeCusto_Color_4A028AF64D8C75B37ACB968AFFF999A6) == 0x000990, "Member 'ABP_Menu_Slasher18_C::TML_DemonModeCusto_Color_4A028AF64D8C75B37ACB968AFFF999A6' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, TML_DemonModeCusto_Demon_Custo_Dissolve_4A028AF64D8C75B37ACB968AFFF999A6) == 0x0009A0, "Member 'ABP_Menu_Slasher18_C::TML_DemonModeCusto_Demon_Custo_Dissolve_4A028AF64D8C75B37ACB968AFFF999A6' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, TML_DemonModeCusto_Normal_Custo_Dissolve_4A028AF64D8C75B37ACB968AFFF999A6) == 0x0009A4, "Member 'ABP_Menu_Slasher18_C::TML_DemonModeCusto_Normal_Custo_Dissolve_4A028AF64D8C75B37ACB968AFFF999A6' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, TML_DemonModeCusto__Direction_4A028AF64D8C75B37ACB968AFFF999A6) == 0x0009A8, "Member 'ABP_Menu_Slasher18_C::TML_DemonModeCusto__Direction_4A028AF64D8C75B37ACB968AFFF999A6' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, TML_DemonModeCusto) == 0x0009B0, "Member 'ABP_Menu_Slasher18_C::TML_DemonModeCusto' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, TML_KatanaDissolve_Dissolve_E350E1F74AF3386DE5C9E7A92E1CFCA4) == 0x0009B8, "Member 'ABP_Menu_Slasher18_C::TML_KatanaDissolve_Dissolve_E350E1F74AF3386DE5C9E7A92E1CFCA4' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, TML_KatanaDissolve__Direction_E350E1F74AF3386DE5C9E7A92E1CFCA4) == 0x0009BC, "Member 'ABP_Menu_Slasher18_C::TML_KatanaDissolve__Direction_E350E1F74AF3386DE5C9E7A92E1CFCA4' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, TML_KatanaDissolve) == 0x0009C0, "Member 'ABP_Menu_Slasher18_C::TML_KatanaDissolve' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, IsKatanaVisible) == 0x0009C8, "Member 'ABP_Menu_Slasher18_C::IsKatanaVisible' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, NormalModeCustoParts) == 0x0009D0, "Member 'ABP_Menu_Slasher18_C::NormalModeCustoParts' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, DemonModeVFX) == 0x0009E0, "Member 'ABP_Menu_Slasher18_C::DemonModeVFX' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, DemonModeCustoParts) == 0x0009F0, "Member 'ABP_Menu_Slasher18_C::DemonModeCustoParts' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, SKOniEmissiveDefault) == 0x000A00, "Member 'ABP_Menu_Slasher18_C::SKOniEmissiveDefault' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, IsInDemonMode) == 0x000A10, "Member 'ABP_Menu_Slasher18_C::IsInDemonMode' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, SM_OniEmissiveDefault) == 0x000A18, "Member 'ABP_Menu_Slasher18_C::SM_OniEmissiveDefault' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, MaxSwordDissolveValue) == 0x000A28, "Member 'ABP_Menu_Slasher18_C::MaxSwordDissolveValue' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, MinDissolvevalue) == 0x000A30, "Member 'ABP_Menu_Slasher18_C::MinDissolvevalue' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, NormalModeVFX) == 0x000A38, "Member 'ABP_Menu_Slasher18_C::NormalModeVFX' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, SK_OniEmissiveIndex) == 0x000A48, "Member 'ABP_Menu_Slasher18_C::SK_OniEmissiveIndex' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, SK_IsOniEmissiveIndex0) == 0x000A4C, "Member 'ABP_Menu_Slasher18_C::SK_IsOniEmissiveIndex0' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, OniSMEmissiveIndex) == 0x000A50, "Member 'ABP_Menu_Slasher18_C::OniSMEmissiveIndex' has a wrong offset!");
static_assert(offsetof(ABP_Menu_Slasher18_C, IsOniSMEmissiveIndex0) == 0x000A54, "Member 'ABP_Menu_Slasher18_C::IsOniSMEmissiveIndex0' has a wrong offset!");

}

