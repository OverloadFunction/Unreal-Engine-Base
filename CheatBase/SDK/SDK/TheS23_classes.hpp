#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS23

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// Class TheS23.BuiltToLast
// 0x0028 (0x0488 - 0x0460)
class UBuiltToLast final : public UPerk
{
public:
	float                                         _refillPercentage[0x3];                            // 0x0460(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _hideDuration[0x3];                                // 0x046C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         _numberOfTimesPerkTriggered;                       // 0x0478(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_479[0xF];                                      // 0x0479(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBuiltToLastTrigger_Cosmetic();

	float GetHideDurationByLevel() const;
	float GetRefillPercentageByLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BuiltToLast">();
	}
	static class UBuiltToLast* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBuiltToLast>();
	}
};
static_assert(alignof(UBuiltToLast) == 0x000008, "Wrong alignment on UBuiltToLast");
static_assert(sizeof(UBuiltToLast) == 0x000488, "Wrong size on UBuiltToLast");
static_assert(offsetof(UBuiltToLast, _refillPercentage) == 0x000460, "Member 'UBuiltToLast::_refillPercentage' has a wrong offset!");
static_assert(offsetof(UBuiltToLast, _hideDuration) == 0x00046C, "Member 'UBuiltToLast::_hideDuration' has a wrong offset!");
static_assert(offsetof(UBuiltToLast, _numberOfTimesPerkTriggered) == 0x000478, "Member 'UBuiltToLast::_numberOfTimesPerkTriggered' has a wrong offset!");

// Class TheS23.DesperateMeasures
// 0x0010 (0x0470 - 0x0460)
class UDesperateMeasures final : public UPerk
{
public:
	float                                         _healAndUnhookMultiplier[0x3];                     // 0x0460(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _nbInjuredHookedOrDyingSurvivors;                  // 0x046C(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DesperateMeasures">();
	}
	static class UDesperateMeasures* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDesperateMeasures>();
	}
};
static_assert(alignof(UDesperateMeasures) == 0x000008, "Wrong alignment on UDesperateMeasures");
static_assert(sizeof(UDesperateMeasures) == 0x000470, "Wrong size on UDesperateMeasures");
static_assert(offsetof(UDesperateMeasures, _healAndUnhookMultiplier) == 0x000460, "Member 'UDesperateMeasures::_healAndUnhookMultiplier' has a wrong offset!");
static_assert(offsetof(UDesperateMeasures, _nbInjuredHookedOrDyingSurvivors) == 0x00046C, "Member 'UDesperateMeasures::_nbInjuredHookedOrDyingSurvivors' has a wrong offset!");

// Class TheS23.Visionary
// 0x0018 (0x0478 - 0x0460)
class UVisionary final : public UPerk
{
public:
	float                                         _auraVisibilityRange[0x3];                         // 0x0460(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _cooldownDuration[0x3];                            // 0x046C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_OnIntroComplete();

	float GetCooldownAtLevel() const;
	float GetRangeAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Visionary">();
	}
	static class UVisionary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVisionary>();
	}
};
static_assert(alignof(UVisionary) == 0x000008, "Wrong alignment on UVisionary");
static_assert(sizeof(UVisionary) == 0x000478, "Wrong size on UVisionary");
static_assert(offsetof(UVisionary, _auraVisibilityRange) == 0x000460, "Member 'UVisionary::_auraVisibilityRange' has a wrong offset!");
static_assert(offsetof(UVisionary, _cooldownDuration) == 0x00046C, "Member 'UVisionary::_cooldownDuration' has a wrong offset!");

}

