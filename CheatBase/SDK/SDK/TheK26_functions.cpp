#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK26

#include "Basic.hpp"

#include "TheK26_classes.hpp"
#include "TheK26_parameters.hpp"


namespace SDK
{

// Function TheK26.K26AttachedCrow.Authority_ActivateInfection
// (Final, Native, Private)

void AK26AttachedCrow::Authority_ActivateInfection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_ActivateInfection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Authority_DeactivateInfection
// (Final, Native, Private)

void AK26AttachedCrow::Authority_DeactivateInfection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_DeactivateInfection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Authority_OnIsWithinOtherSurvivorRangeChanged
// (Final, Native, Private)
// Parameters:
// class AActor*                           survivorActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              IsInRange                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26AttachedCrow::Authority_OnIsWithinOtherSurvivorRangeChanged(class AActor* survivorActor, const bool IsInRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_OnIsWithinOtherSurvivorRangeChanged");

	Params::K26AttachedCrow_Authority_OnIsWithinOtherSurvivorRangeChanged Parms{};

	Parms.survivorActor = survivorActor;
	Parms.IsInRange = IsInRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Authority_OnOtherAttachedCrowRemoved
// (Final, Native, Private)

void AK26AttachedCrow::Authority_OnOtherAttachedCrowRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_OnOtherAttachedCrowRemoved");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Authority_OnOtherSurvivorDamageStateChanged
// (Final, Native, Private)
// Parameters:
// EHealthState                            before                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHealthState                            after                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26AttachedCrow::Authority_OnOtherSurvivorDamageStateChanged(EHealthState before, EHealthState after)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_OnOtherSurvivorDamageStateChanged");

	Params::K26AttachedCrow_Authority_OnOtherSurvivorDamageStateChanged Parms{};

	Parms.before = before;
	Parms.after = after;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Authority_OnOtherSurvivorGuidedActionChanged
// (Final, Native, Private)

void AK26AttachedCrow::Authority_OnOtherSurvivorGuidedActionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_OnOtherSurvivorGuidedActionChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Authority_OnOtherSurvivorPerkFlagsChanged
// (Final, Native, Private)
// Parameters:
// const struct FGameplayTag&              GameplayTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isAdded                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26AttachedCrow::Authority_OnOtherSurvivorPerkFlagsChanged(const struct FGameplayTag& GameplayTag, bool isAdded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_OnOtherSurvivorPerkFlagsChanged");

	Params::K26AttachedCrow_Authority_OnOtherSurvivorPerkFlagsChanged Parms{};

	Parms.GameplayTag = std::move(GameplayTag);
	Parms.isAdded = isAdded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Authority_OnPlayerLeftGame
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AK26AttachedCrow::Authority_OnPlayerLeftGame(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_OnPlayerLeftGame");

	Params::K26AttachedCrow_Authority_OnPlayerLeftGame Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Authority_OnSurvivorAdded
// (Final, Native, Private)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26AttachedCrow::Authority_OnSurvivorAdded(class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_OnSurvivorAdded");

	Params::K26AttachedCrow_Authority_OnSurvivorAdded Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Authority_OnSurvivorDroppedEnd
// (Final, Native, Private)

void AK26AttachedCrow::Authority_OnSurvivorDroppedEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_OnSurvivorDroppedEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Authority_OnSurvivorExitLocker
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AK26AttachedCrow::Authority_OnSurvivorExitLocker(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_OnSurvivorExitLocker");

	Params::K26AttachedCrow_Authority_OnSurvivorExitLocker Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Authority_OnSurvivorStatusIndicatorSet
// (Final, Native, Private)
// Parameters:
// const class ASurvivor*                  Survivor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK26AttachedCrow*                 attachedCrow                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26AttachedCrow::Authority_OnSurvivorStatusIndicatorSet(const class ASurvivor* Survivor, class AK26AttachedCrow* attachedCrow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_OnSurvivorStatusIndicatorSet");

	Params::K26AttachedCrow_Authority_OnSurvivorStatusIndicatorSet Parms{};

	Parms.Survivor = Survivor;
	Parms.attachedCrow = attachedCrow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Authority_OnSurvivorWasUnhooked
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AK26AttachedCrow::Authority_OnSurvivorWasUnhooked(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Authority_OnSurvivorWasUnhooked");

	Params::K26AttachedCrow_Authority_OnSurvivorWasUnhooked Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Cosmetic_OnAttachedCrowRemoved
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// EFK26AttachedCrowRemovalReason          removalReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26AttachedCrow::Cosmetic_OnAttachedCrowRemoved(EFK26AttachedCrowRemovalReason removalReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Cosmetic_OnAttachedCrowRemoved");

	Params::K26AttachedCrow_Cosmetic_OnAttachedCrowRemoved Parms{};

	Parms.removalReason = removalReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK26.K26AttachedCrow.Cosmetic_OnAuraHidden
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK26AttachedCrow::Cosmetic_OnAuraHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Cosmetic_OnAuraHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK26.K26AttachedCrow.Cosmetic_OnAuraShown
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK26AttachedCrow::Cosmetic_OnAuraShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Cosmetic_OnAuraShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK26.K26AttachedCrow.Cosmetic_OnCrowAttached
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK26AttachedCrow::Cosmetic_OnCrowAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Cosmetic_OnCrowAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK26.K26AttachedCrow.Cosmetic_OnStartDetaching
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK26AttachedCrow::Cosmetic_OnStartDetaching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Cosmetic_OnStartDetaching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK26.K26AttachedCrow.Cosmetic_OnStopDetaching
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK26AttachedCrow::Cosmetic_OnStopDetaching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Cosmetic_OnStopDetaching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK26.K26AttachedCrow.HideOutline
// (Final, Native, Private)

void AK26AttachedCrow::HideOutline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "HideOutline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Multicast_OnStartDetaching
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void AK26AttachedCrow::Multicast_OnStartDetaching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Multicast_OnStartDetaching");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.Multicast_OnStopDetaching
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void AK26AttachedCrow::Multicast_OnStopDetaching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "Multicast_OnStopDetaching");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AttachedCrow.OnRep_AttachmentStatus
// (Final, Native, Private)

void AK26AttachedCrow::OnRep_AttachmentStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AttachedCrow", "OnRep_AttachmentStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.HinderOnCrowAttachStatusEffect.OnKillerSet
// (Final, Native, Public)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHinderOnCrowAttachStatusEffect::OnKillerSet(class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HinderOnCrowAttachStatusEffect", "OnKillerSet");

	Params::HinderOnCrowAttachStatusEffect_OnKillerSet Parms{};

	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AbilitySubAnimInstance.ConsumeHasProjectileBeenSummoned
// (Final, Native, Public, BlueprintCallable)

void UK26AbilitySubAnimInstance::ConsumeHasProjectileBeenSummoned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AbilitySubAnimInstance", "ConsumeHasProjectileBeenSummoned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AbilitySubAnimInstance.ConsumeHasProjectileFired
// (Final, Native, Public, BlueprintCallable)

void UK26AbilitySubAnimInstance::ConsumeHasProjectileFired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AbilitySubAnimInstance", "ConsumeHasProjectileFired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AbilitySubAnimInstance.OnHasProjectileBeenSummoned
// (Final, Native, Public)
// Parameters:
// const int32                             remainingAmmo                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             maxAmmo                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26AbilitySubAnimInstance::OnHasProjectileBeenSummoned(const int32 remainingAmmo, const int32 maxAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AbilitySubAnimInstance", "OnHasProjectileBeenSummoned");

	Params::K26AbilitySubAnimInstance_OnHasProjectileBeenSummoned Parms{};

	Parms.remainingAmmo = remainingAmmo;
	Parms.maxAmmo = maxAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AbilitySubAnimInstance.OnHasProjectileFired
// (Final, Native, Public)

void UK26AbilitySubAnimInstance::OnHasProjectileFired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AbilitySubAnimInstance", "OnHasProjectileFired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.Authority_InitializePoolComponent
// (Final, Native, Private)
// Parameters:
// const int32                             maxAmmo                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26AmmoHandlerComponent::Authority_InitializePoolComponent(const int32 maxAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "Authority_InitializePoolComponent");

	Params::K26AmmoHandlerComponent_Authority_InitializePoolComponent Parms{};

	Parms.maxAmmo = maxAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.Authority_OnAmmoInit
// (Final, Native, Private)
// Parameters:
// class AActor*                           initAmmo                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26AmmoHandlerComponent::Authority_OnAmmoInit(class AActor* initAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "Authority_OnAmmoInit");

	Params::K26AmmoHandlerComponent_Authority_OnAmmoInit Parms{};

	Parms.initAmmo = initAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.Authority_OnZoneChange
// (Final, Native, Private)

void UK26AmmoHandlerComponent::Authority_OnZoneChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "Authority_OnZoneChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.CallOnMaxAmmoSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const int32 maxAmmo)>    Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26AmmoHandlerComponent::CallOnMaxAmmoSet(TDelegate<void(const int32 maxAmmo)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "CallOnMaxAmmoSet");

	Params::K26AmmoHandlerComponent_CallOnMaxAmmoSet Parms{};

	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.Cosmetic_OnAmmoExpired
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK26AmmoHandlerComponent::Cosmetic_OnAmmoExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "Cosmetic_OnAmmoExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK26.K26AmmoHandlerComponent.Cosmetic_OnAmmoHasBeenFired
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK26AmmoHandlerComponent::Cosmetic_OnAmmoHasBeenFired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "Cosmetic_OnAmmoHasBeenFired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK26.K26AmmoHandlerComponent.Cosmetic_OnExpiringWarning
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK26AmmoHandlerComponent::Cosmetic_OnExpiringWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "Cosmetic_OnExpiringWarning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK26.K26AmmoHandlerComponent.Multicast_ForceExpireAmmo
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UK26AmmoHandlerComponent::Multicast_ForceExpireAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "Multicast_ForceExpireAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.Multicast_OnAmmoExpired
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UK26AmmoHandlerComponent::Multicast_OnAmmoExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "Multicast_OnAmmoExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.Multicast_OnAmmoHasBeenFired
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UK26AmmoHandlerComponent::Multicast_OnAmmoHasBeenFired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "Multicast_OnAmmoHasBeenFired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.Multicast_OnCurrentAmmoStateChanged
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const EK26AmmoState                     newState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             currentAmmo                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             maxAmmo                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26AmmoHandlerComponent::Multicast_OnCurrentAmmoStateChanged(const EK26AmmoState newState, const int32 currentAmmo, const int32 maxAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "Multicast_OnCurrentAmmoStateChanged");

	Params::K26AmmoHandlerComponent_Multicast_OnCurrentAmmoStateChanged Parms{};

	Parms.newState = newState;
	Parms.currentAmmo = currentAmmo;
	Parms.maxAmmo = maxAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.Multicast_StartExpiring
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UK26AmmoHandlerComponent::Multicast_StartExpiring()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "Multicast_StartExpiring");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.Multicast_StartRecharging
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const EK26AmmoCooldownReason            lastCooldownReason                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26AmmoHandlerComponent::Multicast_StartRecharging(const EK26AmmoCooldownReason lastCooldownReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "Multicast_StartRecharging");

	Params::K26AmmoHandlerComponent_Multicast_StartRecharging Parms{};

	Parms.lastCooldownReason = lastCooldownReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.OnLevelReadyToPlay
// (Final, Native, Public)

void UK26AmmoHandlerComponent::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.SetDependencies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UK26PathHandlerComponent*         pathHandler                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UK26PowerStatusHandlerComponent*  statusHandler                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAuthoritativeActorPoolComponent* AuthoritativeActorPoolComponent                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26AmmoHandlerComponent::SetDependencies(class UK26PathHandlerComponent* pathHandler, class UK26PowerStatusHandlerComponent* statusHandler, class UAuthoritativeActorPoolComponent* AuthoritativeActorPoolComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "SetDependencies");

	Params::K26AmmoHandlerComponent_SetDependencies Parms{};

	Parms.pathHandler = pathHandler;
	Parms.statusHandler = statusHandler;
	Parms.AuthoritativeActorPoolComponent = AuthoritativeActorPoolComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26AmmoHandlerComponent.GetCurrentAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UK26AmmoHandlerComponent::GetCurrentAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "GetCurrentAmmo");

	Params::K26AmmoHandlerComponent_GetCurrentAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK26.K26AmmoHandlerComponent.GetCurrentAmmoState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EK26AmmoState                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EK26AmmoState UK26AmmoHandlerComponent::GetCurrentAmmoState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "GetCurrentAmmoState");

	Params::K26AmmoHandlerComponent_GetCurrentAmmoState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK26.K26AmmoHandlerComponent.GetCurrentCooldownReason
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EK26AmmoCooldownReason                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EK26AmmoCooldownReason UK26AmmoHandlerComponent::GetCurrentCooldownReason() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "GetCurrentCooldownReason");

	Params::K26AmmoHandlerComponent_GetCurrentCooldownReason Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK26.K26AmmoHandlerComponent.GetMaxAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UK26AmmoHandlerComponent::GetMaxAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "GetMaxAmmo");

	Params::K26AmmoHandlerComponent_GetMaxAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK26.K26AmmoHandlerComponent.SendHasExpiredDelegate
// (Final, Native, Private, Const)

void UK26AmmoHandlerComponent::SendHasExpiredDelegate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26AmmoHandlerComponent", "SendHasExpiredDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CooldownInteractionDefinition.OnKillerSet
// (Final, Native, Protected)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26CooldownInteractionDefinition::OnKillerSet(class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CooldownInteractionDefinition", "OnKillerSet");

	Params::K26CooldownInteractionDefinition_OnKillerSet Parms{};

	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Authority_OnCollisionOverlapBegin
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    fromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AK26CrowProjectile::Authority_OnCollisionOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool fromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Authority_OnCollisionOverlapBegin");

	Params::K26CrowProjectile_Authority_OnCollisionOverlapBegin Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.fromSweep = fromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Authority_OnCollisionOverlapEnd
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26CrowProjectile::Authority_OnCollisionOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Authority_OnCollisionOverlapEnd");

	Params::K26CrowProjectile_Authority_OnCollisionOverlapEnd Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Authority_OnDestroyAttempt
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class AActor*>&            instigatorsForCompletion                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AK26CrowProjectile::Authority_OnDestroyAttempt(const TArray<class AActor*>& instigatorsForCompletion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Authority_OnDestroyAttempt");

	Params::K26CrowProjectile_Authority_OnDestroyAttempt Parms{};

	Parms.instigatorsForCompletion = std::move(instigatorsForCompletion);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Authority_OnDestroyTimerExpired
// (Final, Native, Private)

void AK26CrowProjectile::Authority_OnDestroyTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Authority_OnDestroyTimerExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Authority_OnScoutingOverlapBegin
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    fromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AK26CrowProjectile::Authority_OnScoutingOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool fromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Authority_OnScoutingOverlapBegin");

	Params::K26CrowProjectile_Authority_OnScoutingOverlapBegin Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.fromSweep = fromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Authority_OnScoutingOverlapEnd
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26CrowProjectile::Authority_OnScoutingOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Authority_OnScoutingOverlapEnd");

	Params::K26CrowProjectile_Authority_OnScoutingOverlapEnd Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Authority_OnSummonComplete
// (Final, Native, Private)

void AK26CrowProjectile::Authority_OnSummonComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Authority_OnSummonComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Client_LocalKillerStartSummonTimer
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// const float                             killerLocalSummonTime                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26CrowProjectile::Client_LocalKillerStartSummonTimer(const float killerLocalSummonTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Client_LocalKillerStartSummonTimer");

	Params::K26CrowProjectile_Client_LocalKillerStartSummonTimer Parms{};

	Parms.killerLocalSummonTime = killerLocalSummonTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Cosmetic_OnEnteredNearAudioRangeOfSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26CrowProjectile::Cosmetic_OnEnteredNearAudioRangeOfSurvivor(class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Cosmetic_OnEnteredNearAudioRangeOfSurvivor");

	Params::K26CrowProjectile_Cosmetic_OnEnteredNearAudioRangeOfSurvivor Parms{};

	Parms.Survivor = Survivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK26.K26CrowProjectile.Cosmetic_OnExpiration
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK26CrowProjectile::Cosmetic_OnExpiration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Cosmetic_OnExpiration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK26.K26CrowProjectile.HideOutlineFromSurvivor
// (Final, Native, Private)

void AK26CrowProjectile::HideOutlineFromSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "HideOutlineFromSurvivor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Local_OnCollisionOverlapBegin
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    fromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AK26CrowProjectile::Local_OnCollisionOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool fromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Local_OnCollisionOverlapBegin");

	Params::K26CrowProjectile_Local_OnCollisionOverlapBegin Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.fromSweep = fromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Local_OnSummonComplete
// (Final, Native, Private)

void AK26CrowProjectile::Local_OnSummonComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Local_OnSummonComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Multicast_OnExpiration
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void AK26CrowProjectile::Multicast_OnExpiration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Multicast_OnExpiration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Multicast_SetStartingPosition
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FVector&                   Position                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Angle                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AK26CrowProjectile::Multicast_SetStartingPosition(const struct FVector& Position, const struct FRotator& Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Multicast_SetStartingPosition");

	Params::K26CrowProjectile_Multicast_SetStartingPosition Parms{};

	Parms.Position = std::move(Position);
	Parms.Angle = std::move(Angle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Multicast_SetState
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const EK26ProjectileState               newState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             pooledPathIndex                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26CrowProjectile::Multicast_SetState(const EK26ProjectileState newState, const int32 pooledPathIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Multicast_SetState");

	Params::K26CrowProjectile_Multicast_SetState Parms{};

	Parms.newState = newState;
	Parms.pooledPathIndex = pooledPathIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.OnIntroCompleted
// (Final, Native, Protected)

void AK26CrowProjectile::OnIntroCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "OnIntroCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.OnIsWithinSurvivorRangeChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           survivorActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              IsInRange                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26CrowProjectile::OnIsWithinSurvivorRangeChanged(class AActor* survivorActor, const bool IsInRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "OnIsWithinSurvivorRangeChanged");

	Params::K26CrowProjectile_OnIsWithinSurvivorRangeChanged Parms{};

	Parms.survivorActor = survivorActor;
	Parms.IsInRange = IsInRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.OnLevelReadyToPlay
// (Final, Native, Protected)

void AK26CrowProjectile::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.OnRep_Path
// (Final, Native, Private)

void AK26CrowProjectile::OnRep_Path()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "OnRep_Path");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.OnSurvivorAdded
// (Final, Native, Protected)
// Parameters:
// class ASurvivor*                        survivorAdded                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26CrowProjectile::OnSurvivorAdded(class ASurvivor* survivorAdded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "OnSurvivorAdded");

	Params::K26CrowProjectile_OnSurvivorAdded Parms{};

	Parms.survivorAdded = survivorAdded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.ProjectileWentOutOfBoundsEvent
// (Native, Event, Protected, BlueprintEvent)

void AK26CrowProjectile::ProjectileWentOutOfBoundsEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "ProjectileWentOutOfBoundsEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.Server_OnSurvivorHit
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const EK26ProjectileState               stateOnHit                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASurvivor*                        hitSurvivor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK26CrowProjectile::Server_OnSurvivorHit(const EK26ProjectileState stateOnHit, class ASurvivor* hitSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "Server_OnSurvivorHit");

	Params::K26CrowProjectile_Server_OnSurvivorHit Parms{};

	Parms.stateOnHit = stateOnHit;
	Parms.hitSurvivor = hitSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26CrowProjectile.GetDistanceFromFirePosition
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AK26CrowProjectile::GetDistanceFromFirePosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "GetDistanceFromFirePosition");

	Params::K26CrowProjectile_GetDistanceFromFirePosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK26.K26CrowProjectile.IsHitboxBeingShown
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AK26CrowProjectile::IsHitboxBeingShown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26CrowProjectile", "IsHitboxBeingShown");

	Params::K26CrowProjectile_IsHitboxBeingShown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK26.K26DismissCrowChargeableInteractionDefinition.OnDamageStateChanged
// (Final, Native, Protected)
// Parameters:
// EHealthState                            oldDamageState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHealthState                            currentDamageState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26DismissCrowChargeableInteractionDefinition::OnDamageStateChanged(EHealthState oldDamageState, EHealthState currentDamageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26DismissCrowChargeableInteractionDefinition", "OnDamageStateChanged");

	Params::K26DismissCrowChargeableInteractionDefinition_OnDamageStateChanged Parms{};

	Parms.oldDamageState = oldDamageState;
	Parms.currentDamageState = currentDamageState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26DismissCrowChargeableInteractionDefinition.OnKillerSet
// (Final, Native, Private)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UChargeableComponent*             ChargeableComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26DismissCrowChargeableInteractionDefinition::OnKillerSet(class AKiller* Killer, class UChargeableComponent* ChargeableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26DismissCrowChargeableInteractionDefinition", "OnKillerSet");

	Params::K26DismissCrowChargeableInteractionDefinition_OnKillerSet Parms{};

	Parms.Killer = Killer;
	Parms.ChargeableComponent = ChargeableComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26DismissCrowChargeableInteractionDefinition.OnLevelReadyToPlay
// (Final, Native, Protected)

void UK26DismissCrowChargeableInteractionDefinition::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26DismissCrowChargeableInteractionDefinition", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26FireCrowProjectileInteractionDefinition.Multicast_OnProjectileFired
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const class AKiller*                    Killer                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26FireCrowProjectileInteractionDefinition::Multicast_OnProjectileFired(const class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26FireCrowProjectileInteractionDefinition", "Multicast_OnProjectileFired");

	Params::K26FireCrowProjectileInteractionDefinition_Multicast_OnProjectileFired Parms{};

	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26FireCrowProjectileInteractionDefinition.Server_RequestFireOnAmmo
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26FireCrowProjectileInteractionDefinition::Server_RequestFireOnAmmo(class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26FireCrowProjectileInteractionDefinition", "Server_RequestFireOnAmmo");

	Params::K26FireCrowProjectileInteractionDefinition_Server_RequestFireOnAmmo Parms{};

	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26FireCrowProjectileInteractionDefinition.SetDependencies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UK26AmmoHandlerComponent*         ammoHandler                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UK26PathHandlerComponent*         pathHandler                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UK26CooldownInteractionDefinition*cooldownInteraction                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26FireCrowProjectileInteractionDefinition::SetDependencies(class UK26AmmoHandlerComponent* ammoHandler, class UK26PathHandlerComponent* pathHandler, class UK26CooldownInteractionDefinition* cooldownInteraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26FireCrowProjectileInteractionDefinition", "SetDependencies");

	Params::K26FireCrowProjectileInteractionDefinition_SetDependencies Parms{};

	Parms.ammoHandler = ammoHandler;
	Parms.pathHandler = pathHandler;
	Parms.cooldownInteraction = cooldownInteraction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26IsLastCrowRemovalReasonDueToInteraction.Authority_OnKillerSet
// (Final, Native, Private)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26IsLastCrowRemovalReasonDueToInteraction::Authority_OnKillerSet(class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26IsLastCrowRemovalReasonDueToInteraction", "Authority_OnKillerSet");

	Params::K26IsLastCrowRemovalReasonDueToInteraction_Authority_OnKillerSet Parms{};

	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26IsLastCrowRemovalReasonDueToInteraction.Authority_OnSurvivorStatusIndicatorSet
// (Final, Native, Private)
// Parameters:
// const class ASurvivor*                  Survivor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK26AttachedCrow*                 attachedCrow                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26IsLastCrowRemovalReasonDueToInteraction::Authority_OnSurvivorStatusIndicatorSet(const class ASurvivor* Survivor, class AK26AttachedCrow* attachedCrow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26IsLastCrowRemovalReasonDueToInteraction", "Authority_OnSurvivorStatusIndicatorSet");

	Params::K26IsLastCrowRemovalReasonDueToInteraction_Authority_OnSurvivorStatusIndicatorSet Parms{};

	Parms.Survivor = Survivor;
	Parms.attachedCrow = attachedCrow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26IsLastCrowRemovalReasonDueToInteraction.OnLastRemovalReasonSet
// (Final, Native, Private)
// Parameters:
// EFK26AttachedCrowRemovalReason          lastCrowRemovalReason                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26IsLastCrowRemovalReasonDueToInteraction::OnLastRemovalReasonSet(EFK26AttachedCrowRemovalReason lastCrowRemovalReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26IsLastCrowRemovalReasonDueToInteraction", "OnLastRemovalReasonSet");

	Params::K26IsLastCrowRemovalReasonDueToInteraction_OnLastRemovalReasonSet Parms{};

	Parms.lastCrowRemovalReason = lastCrowRemovalReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26IsLastCrowRemovalReasonDueToInteraction.OnRep_OwningAttachedCrow
// (Final, Native, Private)

void UK26IsLastCrowRemovalReasonDueToInteraction::OnRep_OwningAttachedCrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26IsLastCrowRemovalReasonDueToInteraction", "OnRep_OwningAttachedCrow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26IsLastCrowRemovalReasonDueToInteraction.OnSurvivorStatusIndicatorSet
// (Final, Native, Private)
// Parameters:
// class AK26AttachedCrow*                 attachedCrow                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26IsLastCrowRemovalReasonDueToInteraction::OnSurvivorStatusIndicatorSet(class AK26AttachedCrow* attachedCrow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26IsLastCrowRemovalReasonDueToInteraction", "OnSurvivorStatusIndicatorSet");

	Params::K26IsLastCrowRemovalReasonDueToInteraction_OnSurvivorStatusIndicatorSet Parms{};

	Parms.attachedCrow = attachedCrow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26IsSurvivorInRangeOfAnyIdleCrow.Authority_OnCrowAddedToPool
// (Final, Native, Private)
// Parameters:
// class AActor*                           crowProjectileActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26IsSurvivorInRangeOfAnyIdleCrow::Authority_OnCrowAddedToPool(class AActor* crowProjectileActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26IsSurvivorInRangeOfAnyIdleCrow", "Authority_OnCrowAddedToPool");

	Params::K26IsSurvivorInRangeOfAnyIdleCrow_Authority_OnCrowAddedToPool Parms{};

	Parms.crowProjectileActor = crowProjectileActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26IsSurvivorInRangeOfAnyIdleCrow.Authority_OnCrowProjectileStateChanged
// (Final, Native, Private)
// Parameters:
// class AK26CrowProjectile*               crowProjectile                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26IsSurvivorInRangeOfAnyIdleCrow::Authority_OnCrowProjectileStateChanged(class AK26CrowProjectile* crowProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26IsSurvivorInRangeOfAnyIdleCrow", "Authority_OnCrowProjectileStateChanged");

	Params::K26IsSurvivorInRangeOfAnyIdleCrow_Authority_OnCrowProjectileStateChanged Parms{};

	Parms.crowProjectile = crowProjectile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26IsSurvivorInRangeOfAnyIdleCrow.Authority_OnInRangeChanged
// (Final, Native, Private)
// Parameters:
// const bool                              inRange                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26IsSurvivorInRangeOfAnyIdleCrow::Authority_OnInRangeChanged(const bool inRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26IsSurvivorInRangeOfAnyIdleCrow", "Authority_OnInRangeChanged");

	Params::K26IsSurvivorInRangeOfAnyIdleCrow_Authority_OnInRangeChanged Parms{};

	Parms.inRange = inRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26IsSurvivorInRangeOfAnyIdleCrow.Authority_SetVariables
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASurvivor*                        trackedSurvivor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAuthoritativeActorPoolComponent* AuthoritativeActorPoolComponent                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Range                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26IsSurvivorInRangeOfAnyIdleCrow::Authority_SetVariables(class ASurvivor* trackedSurvivor, class UAuthoritativeActorPoolComponent* AuthoritativeActorPoolComponent, const float Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26IsSurvivorInRangeOfAnyIdleCrow", "Authority_SetVariables");

	Params::K26IsSurvivorInRangeOfAnyIdleCrow_Authority_SetVariables Parms{};

	Parms.trackedSurvivor = trackedSurvivor;
	Parms.AuthoritativeActorPoolComponent = AuthoritativeActorPoolComponent;
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26IsSurvivorInRangeOfAnyIdleCrow.Multicast_SetIsTrue
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const bool                              IsTrue                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26IsSurvivorInRangeOfAnyIdleCrow::Multicast_SetIsTrue(const bool IsTrue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26IsSurvivorInRangeOfAnyIdleCrow", "Multicast_SetIsTrue");

	Params::K26IsSurvivorInRangeOfAnyIdleCrow_Multicast_SetIsTrue Parms{};

	Parms.IsTrue = IsTrue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26OnCrowAttachLingeringStatusEffectBase.GetLingerTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK26OnCrowAttachLingeringStatusEffectBase::GetLingerTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26OnCrowAttachLingeringStatusEffectBase", "GetLingerTime");

	Params::K26OnCrowAttachLingeringStatusEffectBase_GetLingerTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK26.K26P01.Authority_OnInRangeChanged
// (Final, Native, Private)
// Parameters:
// const bool                              inRange                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26P01::Authority_OnInRangeChanged(const bool inRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26P01", "Authority_OnInRangeChanged");

	Params::K26P01_Authority_OnInRangeChanged Parms{};

	Parms.inRange = inRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26P01.OnRep_BlockedGenerators
// (Final, Native, Private)

void UK26P01::OnRep_BlockedGenerators()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26P01", "OnRep_BlockedGenerators");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26P02.Authority_OnSurvivorHookedOnScourgeHook
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK26P02::Authority_OnSurvivorHookedOnScourgeHook(const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26P02", "Authority_OnSurvivorHookedOnScourgeHook");

	Params::K26P02_Authority_OnSurvivorHookedOnScourgeHook Parms{};

	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26P02.GetGeneratorRegressPercentageAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK26P02::GetGeneratorRegressPercentageAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26P02", "GetGeneratorRegressPercentageAtLevel");

	Params::K26P02_GetGeneratorRegressPercentageAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK26.K26PathHandlerComponent.Authority_OnMaxAmmoSet
// (Final, Native, Private)
// Parameters:
// const int32                             maxAmmo                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PathHandlerComponent::Authority_OnMaxAmmoSet(const int32 maxAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PathHandlerComponent", "Authority_OnMaxAmmoSet");

	Params::K26PathHandlerComponent_Authority_OnMaxAmmoSet Parms{};

	Parms.maxAmmo = maxAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PathHandlerComponent.Multicast_FillAvailablePathArray
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const int32                             maxAmmo                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PathHandlerComponent::Multicast_FillAvailablePathArray(const int32 maxAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PathHandlerComponent", "Multicast_FillAvailablePathArray");

	Params::K26PathHandlerComponent_Multicast_FillAvailablePathArray Parms{};

	Parms.maxAmmo = maxAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PathHandlerComponent.OnIterativeAvailablePathUpdate
// (Final, Native, Private)

void UK26PathHandlerComponent::OnIterativeAvailablePathUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PathHandlerComponent", "OnIterativeAvailablePathUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PathHandlerComponent.OnRep_AvailablePathData
// (Final, Native, Private)

void UK26PathHandlerComponent::OnRep_AvailablePathData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PathHandlerComponent", "OnRep_AvailablePathData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PathHandlerComponent.SetDependencies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UK26AmmoHandlerComponent*         ammoHandler                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UK26CrowPlacementValidatorComponent*placementValidator                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PathHandlerComponent::SetDependencies(class UK26AmmoHandlerComponent* ammoHandler, class UK26CrowPlacementValidatorComponent* placementValidator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PathHandlerComponent", "SetDependencies");

	Params::K26PathHandlerComponent_SetDependencies Parms{};

	Parms.ammoHandler = ammoHandler;
	Parms.placementValidator = placementValidator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerChargePresentationItemProgressComponent.SetDependencies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UK26AmmoHandlerComponent*         ammoHandler                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerChargePresentationItemProgressComponent::SetDependencies(class UK26AmmoHandlerComponent* ammoHandler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerChargePresentationItemProgressComponent", "SetDependencies");

	Params::K26PowerChargePresentationItemProgressComponent_SetDependencies Parms{};

	Parms.ammoHandler = ammoHandler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerChargePresentationPowerFadeComponent.SetDependencies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UK26AmmoHandlerComponent*         ammoHandler                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerChargePresentationPowerFadeComponent::SetDependencies(class UK26AmmoHandlerComponent* ammoHandler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerChargePresentationPowerFadeComponent", "SetDependencies");

	Params::K26PowerChargePresentationPowerFadeComponent_SetDependencies Parms{};

	Parms.ammoHandler = ammoHandler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerOutlineUpdateStrategy.SetOutlineVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsActive_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerOutlineUpdateStrategy::SetOutlineVisibility(bool IsActive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerOutlineUpdateStrategy", "SetOutlineVisibility");

	Params::K26PowerOutlineUpdateStrategy_SetOutlineVisibility Parms{};

	Parms.IsActive_0 = IsActive_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerOutlineUpdateStrategy.IsOutlineVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK26PowerOutlineUpdateStrategy::IsOutlineVisible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerOutlineUpdateStrategy", "IsOutlineVisible");

	Params::K26PowerOutlineUpdateStrategy_IsOutlineVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK26.K26PowerStatusHandlerComponent.Authority_OnIntroCompleted
// (Final, Native, Private)

void UK26PowerStatusHandlerComponent::Authority_OnIntroCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerStatusHandlerComponent", "Authority_OnIntroCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerStatusHandlerComponent.Authority_OnKillerInstinctTimePassed
// (Final, Native, Private)
// Parameters:
// const class ASurvivor*                  Survivor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerStatusHandlerComponent::Authority_OnKillerInstinctTimePassed(const class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerStatusHandlerComponent", "Authority_OnKillerInstinctTimePassed");

	Params::K26PowerStatusHandlerComponent_Authority_OnKillerInstinctTimePassed Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerStatusHandlerComponent.Authority_OnSurvivorAdded
// (Final, Native, Private)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerStatusHandlerComponent::Authority_OnSurvivorAdded(class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerStatusHandlerComponent", "Authority_OnSurvivorAdded");

	Params::K26PowerStatusHandlerComponent_Authority_OnSurvivorAdded Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerStatusHandlerComponent.Authority_OnSurvivorRemoved
// (Final, Native, Private)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerStatusHandlerComponent::Authority_OnSurvivorRemoved(class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerStatusHandlerComponent", "Authority_OnSurvivorRemoved");

	Params::K26PowerStatusHandlerComponent_Authority_OnSurvivorRemoved Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerStatusHandlerComponent.Cosmetic_OnCrowDamagedSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerStatusHandlerComponent::Cosmetic_OnCrowDamagedSurvivor(class AKiller* Killer, class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerStatusHandlerComponent", "Cosmetic_OnCrowDamagedSurvivor");

	Params::K26PowerStatusHandlerComponent_Cosmetic_OnCrowDamagedSurvivor Parms{};

	Parms.Killer = Killer;
	Parms.Survivor = Survivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK26.K26PowerStatusHandlerComponent.Cosmetic_OnCrowIdleInterrupt
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerStatusHandlerComponent::Cosmetic_OnCrowIdleInterrupt(class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerStatusHandlerComponent", "Cosmetic_OnCrowIdleInterrupt");

	Params::K26PowerStatusHandlerComponent_Cosmetic_OnCrowIdleInterrupt Parms{};

	Parms.Survivor = Survivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK26.K26PowerStatusHandlerComponent.Multicast_OnCrowAttached
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerStatusHandlerComponent::Multicast_OnCrowAttached(class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerStatusHandlerComponent", "Multicast_OnCrowAttached");

	Params::K26PowerStatusHandlerComponent_Multicast_OnCrowAttached Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerStatusHandlerComponent.Multicast_OnCrowDamagedSurvivor
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerStatusHandlerComponent::Multicast_OnCrowDamagedSurvivor(class AKiller* Killer, class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerStatusHandlerComponent", "Multicast_OnCrowDamagedSurvivor");

	Params::K26PowerStatusHandlerComponent_Multicast_OnCrowDamagedSurvivor Parms{};

	Parms.Killer = Killer;
	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerStatusHandlerComponent.Multicast_OnCrowDetached
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const class ASurvivor*                  Survivor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerStatusHandlerComponent::Multicast_OnCrowDetached(const class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerStatusHandlerComponent", "Multicast_OnCrowDetached");

	Params::K26PowerStatusHandlerComponent_Multicast_OnCrowDetached Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerStatusHandlerComponent.Multicast_OnIdleCrowInterrupt
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerStatusHandlerComponent::Multicast_OnIdleCrowInterrupt(class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerStatusHandlerComponent", "Multicast_OnIdleCrowInterrupt");

	Params::K26PowerStatusHandlerComponent_Multicast_OnIdleCrowInterrupt Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerStatusHandlerComponent.Multicast_OnStartRemovingCrow
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const class ASurvivor*                  Survivor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerStatusHandlerComponent::Multicast_OnStartRemovingCrow(const class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerStatusHandlerComponent", "Multicast_OnStartRemovingCrow");

	Params::K26PowerStatusHandlerComponent_Multicast_OnStartRemovingCrow Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26PowerStatusHandlerComponent.Multicast_OnStopRemovingCrow
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const class ASurvivor*                  Survivor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26PowerStatusHandlerComponent::Multicast_OnStopRemovingCrow(const class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26PowerStatusHandlerComponent", "Multicast_OnStopRemovingCrow");

	Params::K26PowerStatusHandlerComponent_Multicast_OnStopRemovingCrow Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.CanSummonCrow
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK26SpawnCrowProjectileChargeableInteractionDefinition::CanSummonCrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "CanSummonCrow");

	Params::K26SpawnCrowProjectileChargeableInteractionDefinition_CanSummonCrow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.CanSummonCrowOnceFullyCharged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK26SpawnCrowProjectileChargeableInteractionDefinition::CanSummonCrowOnceFullyCharged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "CanSummonCrowOnceFullyCharged");

	Params::K26SpawnCrowProjectileChargeableInteractionDefinition_CanSummonCrowOnceFullyCharged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.Cosmetic_LocalOnSummonCooldownComplete
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const int32                             amountOfAmmoLeft                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              isInteractionActive                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26SpawnCrowProjectileChargeableInteractionDefinition::Cosmetic_LocalOnSummonCooldownComplete(const int32 amountOfAmmoLeft, const bool isInteractionActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "Cosmetic_LocalOnSummonCooldownComplete");

	Params::K26SpawnCrowProjectileChargeableInteractionDefinition_Cosmetic_LocalOnSummonCooldownComplete Parms{};

	Parms.amountOfAmmoLeft = amountOfAmmoLeft;
	Parms.isInteractionActive = isInteractionActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.Cosmetic_OnFullyCharged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26SpawnCrowProjectileChargeableInteractionDefinition::Cosmetic_OnFullyCharged(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "Cosmetic_OnFullyCharged");

	Params::K26SpawnCrowProjectileChargeableInteractionDefinition_Cosmetic_OnFullyCharged Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.Cosmetic_OnSummonButtonUsedWhenCrowSummonIsNotPossible
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26SpawnCrowProjectileChargeableInteractionDefinition::Cosmetic_OnSummonButtonUsedWhenCrowSummonIsNotPossible(class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "Cosmetic_OnSummonButtonUsedWhenCrowSummonIsNotPossible");

	Params::K26SpawnCrowProjectileChargeableInteractionDefinition_Cosmetic_OnSummonButtonUsedWhenCrowSummonIsNotPossible Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.Local_OnGlobalCooldownDone
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26SpawnCrowProjectileChargeableInteractionDefinition::Local_OnGlobalCooldownDone(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "Local_OnGlobalCooldownDone");

	Params::K26SpawnCrowProjectileChargeableInteractionDefinition_Local_OnGlobalCooldownDone Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.Multicast_OnK26CrowSummonAttemptAcknowledged
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void UK26SpawnCrowProjectileChargeableInteractionDefinition::Multicast_OnK26CrowSummonAttemptAcknowledged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "Multicast_OnK26CrowSummonAttemptAcknowledged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.Multicast_OnK26CrowSummoned
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// const class AKiller*                    Killer                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             remainingAmmo                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             maxAmmo                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26SpawnCrowProjectileChargeableInteractionDefinition::Multicast_OnK26CrowSummoned(const class AKiller* Killer, const int32 remainingAmmo, const int32 maxAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "Multicast_OnK26CrowSummoned");

	Params::K26SpawnCrowProjectileChargeableInteractionDefinition_Multicast_OnK26CrowSummoned Parms{};

	Parms.Killer = Killer;
	Parms.remainingAmmo = remainingAmmo;
	Parms.maxAmmo = maxAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.OnConfirmButtonPressed
// (Final, Native, Private)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26SpawnCrowProjectileChargeableInteractionDefinition::OnConfirmButtonPressed(class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "OnConfirmButtonPressed");

	Params::K26SpawnCrowProjectileChargeableInteractionDefinition_OnConfirmButtonPressed Parms{};

	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.OnSummonCooldownComplete
// (Final, Native, Private)

void UK26SpawnCrowProjectileChargeableInteractionDefinition::OnSummonCooldownComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "OnSummonCooldownComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.Server_PlaceProjectileWithPath
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   projectileSpawnPoint                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             killerLocalTime                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26SpawnCrowProjectileChargeableInteractionDefinition::Server_PlaceProjectileWithPath(class AKiller* Killer, const struct FVector& projectileSpawnPoint, const float killerLocalTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "Server_PlaceProjectileWithPath");

	Params::K26SpawnCrowProjectileChargeableInteractionDefinition_Server_PlaceProjectileWithPath Parms{};

	Parms.Killer = Killer;
	Parms.projectileSpawnPoint = std::move(projectileSpawnPoint);
	Parms.killerLocalTime = killerLocalTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.SetDependencies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UK26AmmoHandlerComponent*         ammoHandler                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UK26PathHandlerComponent*         pathHandler                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UK26PowerStatusHandlerComponent*  statusHandler                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK26SpawnCrowProjectileChargeableInteractionDefinition::SetDependencies(class UK26AmmoHandlerComponent* ammoHandler, class UK26PathHandlerComponent* pathHandler, class UK26PowerStatusHandlerComponent* statusHandler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "SetDependencies");

	Params::K26SpawnCrowProjectileChargeableInteractionDefinition_SetDependencies Parms{};

	Parms.ammoHandler = ammoHandler;
	Parms.pathHandler = pathHandler;
	Parms.statusHandler = statusHandler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.SetSummonCooldown
// (Final, Native, Protected, BlueprintCallable)

void UK26SpawnCrowProjectileChargeableInteractionDefinition::SetSummonCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "SetSummonCooldown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.K26SpawnCrowProjectileChargeableInteractionDefinition.IsSummonOnCooldown
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK26SpawnCrowProjectileChargeableInteractionDefinition::IsSummonOnCooldown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K26SpawnCrowProjectileChargeableInteractionDefinition", "IsSummonOnCooldown");

	Params::K26SpawnCrowProjectileChargeableInteractionDefinition_IsSummonOnCooldown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK26.RekindledTotem.CleanseTotem
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ATotem*                           Totem                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETotemState                       oldTotemState                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARekindledTotem::CleanseTotem(class ATotem* Totem, const ETotemState oldTotemState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RekindledTotem", "CleanseTotem");

	Params::RekindledTotem_CleanseTotem Parms{};

	Parms.Totem = Totem;
	Parms.oldTotemState = oldTotemState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK26.RekindledTotem.Cosmetic_HideShadowTotem
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    instant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARekindledTotem::Cosmetic_HideShadowTotem(bool instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RekindledTotem", "Cosmetic_HideShadowTotem");

	Params::RekindledTotem_Cosmetic_HideShadowTotem Parms{};

	Parms.instant = instant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK26.RekindledTotem.Cosmetic_ShowShadowTotem
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    instant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARekindledTotem::Cosmetic_ShowShadowTotem(bool instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RekindledTotem", "Cosmetic_ShowShadowTotem");

	Params::RekindledTotem_Cosmetic_ShowShadowTotem Parms{};

	Parms.instant = instant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK26.RekindledTotem.OnParentTotemEndPlay
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARekindledTotem::OnParentTotemEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RekindledTotem", "OnParentTotemEndPlay");

	Params::RekindledTotem_OnParentTotemEndPlay Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK26.RekindledTotem.RebuildTotem
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ATotem*                           Totem                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARekindledTotem::RebuildTotem(class ATotem* Totem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RekindledTotem", "RebuildTotem");

	Params::RekindledTotem_RebuildTotem Parms{};

	Parms.Totem = Totem;

	UObject::ProcessEvent(Func, &Parms);
}

}

