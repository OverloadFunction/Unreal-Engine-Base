#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK30

#include "Basic.hpp"

#include "TheK30_classes.hpp"
#include "TheK30_parameters.hpp"


namespace SDK
{

// Function TheK30.K30Power.Cosmetic_SendPathNearlyEndingWarning
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK30Power::Cosmetic_SendPathNearlyEndingWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "Cosmetic_SendPathNearlyEndingWarning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.K30Power.Cosmetic_UpdateRemainingPathLength
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   remainingPathLengthPercent                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK30Power::Cosmetic_UpdateRemainingPathLength(float remainingPathLengthPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "Cosmetic_UpdateRemainingPathLength");

	Params::K30Power_Cosmetic_UpdateRemainingPathLength Parms{};

	Parms.remainingPathLengthPercent = remainingPathLengthPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.K30Power.Multicast_OnSnappingStateChanged
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                                    isSnapping                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK30Power::Multicast_OnSnappingStateChanged(bool isSnapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "Multicast_OnSnappingStateChanged");

	Params::K30Power_Multicast_OnSnappingStateChanged Parms{};

	Parms.isSnapping = isSnapping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Power.GetCurrentGuardIndex
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AK30Power::GetCurrentGuardIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "GetCurrentGuardIndex");

	Params::K30Power_GetCurrentGuardIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Power.GetDrawPatrolPathInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDrawPatrolPathInteraction*       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDrawPatrolPathInteraction* AK30Power::GetDrawPatrolPathInteraction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "GetDrawPatrolPathInteraction");

	Params::K30Power_GetDrawPatrolPathInteraction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Power.GetKnightOrderComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKnightOrderComponent*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKnightOrderComponent* AK30Power::GetKnightOrderComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "GetKnightOrderComponent");

	Params::K30Power_GetKnightOrderComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Power.GetPatrolTrailComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPatrolTrailComponent*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPatrolTrailComponent* AK30Power::GetPatrolTrailComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "GetPatrolTrailComponent");

	Params::K30Power_GetPatrolTrailComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Power.GetRemainingPathLengthPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AK30Power::GetRemainingPathLengthPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "GetRemainingPathLengthPercent");

	Params::K30Power_GetRemainingPathLengthPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Power.GetSwapGuardTypeInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USwapGuardTypeInteraction*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USwapGuardTypeInteraction* AK30Power::GetSwapGuardTypeInteraction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "GetSwapGuardTypeInteraction");

	Params::K30Power_GetSwapGuardTypeInteraction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Power.IsDrawingPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AK30Power::IsDrawingPath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "IsDrawingPath");

	Params::K30Power_IsDrawingPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.DrawPatrolModeSwitcherComponent.OnRep_Husk
// (Final, Native, Private)

void UDrawPatrolModeSwitcherComponent::OnRep_Husk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DrawPatrolModeSwitcherComponent", "OnRep_Husk");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.TrailNode.Cosmetic_PrepareForRemoval
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ATrailNode::Cosmetic_PrepareForRemoval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailNode", "Cosmetic_PrepareForRemoval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.TrailNode.OnPreviousNodePositionSet
// (Event, Protected, BlueprintEvent)

void ATrailNode::OnPreviousNodePositionSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailNode", "OnPreviousNodePositionSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.TrailNode.OnRep_IsPreparingForRemoval
// (Final, Native, Private)

void ATrailNode::OnRep_IsPreparingForRemoval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailNode", "OnRep_IsPreparingForRemoval");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.TrailNode.OnRep_PreviousNodePosition
// (Final, Native, Private)

void ATrailNode::OnRep_PreviousNodePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailNode", "OnRep_PreviousNodePosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.TrailNode.IsFirstNode
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATrailNode::IsFirstNode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailNode", "IsFirstNode");

	Params::TrailNode_IsFirstNode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.GuardController.OnLoudNoiseTriggered
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           originator                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           instigatingActor                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    shouldTrack                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  audibleRange                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isQuickAction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isDeceivingNoise                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardController::OnLoudNoiseTriggered(class AActor* originator, class AActor* instigatingActor, const struct FVector& Location, bool shouldTrack, float* audibleRange, bool isQuickAction, bool isDeceivingNoise)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardController", "OnLoudNoiseTriggered");

	Params::GuardController_OnLoudNoiseTriggered Parms{};

	Parms.originator = originator;
	Parms.instigatingActor = instigatingActor;
	Parms.Location = std::move(Location);
	Parms.shouldTrack = shouldTrack;
	Parms.isQuickAction = isQuickAction;
	Parms.isDeceivingNoise = isDeceivingNoise;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (audibleRange != nullptr)
		*audibleRange = Parms.audibleRange;
}


// Function TheK30.GuardController.OnTargetPerceptionUpdated
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAIStimulus&               Stimulus                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AGuardController::OnTargetPerceptionUpdated(class AActor* Actor, const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardController", "OnTargetPerceptionUpdated");

	Params::GuardController_OnTargetPerceptionUpdated Parms{};

	Parms.Actor = Actor;
	Parms.Stimulus = std::move(Stimulus);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardFlag.Authority_OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AGuardFlag::Authority_OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "Authority_OnBeginOverlap");

	Params::GuardFlag_Authority_OnBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.HitResult = std::move(HitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardFlag.Cosmetic_OnFlagActivationTimerCompleted
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AGuardFlag::Cosmetic_OnFlagActivationTimerCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "Cosmetic_OnFlagActivationTimerCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.GuardFlag.Cosmetic_OnFlagDisappearDueToHuntEnding
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       previouslyHuntedSurvivor                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardFlag::Cosmetic_OnFlagDisappearDueToHuntEnding(class ADBDPlayer* previouslyHuntedSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "Cosmetic_OnFlagDisappearDueToHuntEnding");

	Params::GuardFlag_Cosmetic_OnFlagDisappearDueToHuntEnding Parms{};

	Parms.previouslyHuntedSurvivor = previouslyHuntedSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.GuardFlag.Cosmetic_OnFlagSpawned
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   activationTimerDuration                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardFlag::Cosmetic_OnFlagSpawned(float activationTimerDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "Cosmetic_OnFlagSpawned");

	Params::GuardFlag_Cosmetic_OnFlagSpawned Parms{};

	Parms.activationTimerDuration = activationTimerDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.GuardFlag.Cosmetic_OnSurvivorCapturedFlag
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       previouslyHuntedSurvivor                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardFlag::Cosmetic_OnSurvivorCapturedFlag(class ADBDPlayer* previouslyHuntedSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "Cosmetic_OnSurvivorCapturedFlag");

	Params::GuardFlag_Cosmetic_OnSurvivorCapturedFlag Parms{};

	Parms.previouslyHuntedSurvivor = previouslyHuntedSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.GuardFlag.Multicast_OnSurvivorCapturedFlag
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       HuntedSurvivor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardFlag::Multicast_OnSurvivorCapturedFlag(class ADBDPlayer* HuntedSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "Multicast_OnSurvivorCapturedFlag");

	Params::GuardFlag_Multicast_OnSurvivorCapturedFlag Parms{};

	Parms.HuntedSurvivor = HuntedSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardFlag.OnRep_ActivationState
// (Final, Native, Private)

void AGuardFlag::OnRep_ActivationState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "OnRep_ActivationState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardFlag.GetActivationTimeLeft
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGuardFlag::GetActivationTimeLeft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "GetActivationTimeLeft");

	Params::GuardFlag_GetActivationTimeLeft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.GuardFlag.GetFlagPickupEnduranceDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGuardFlag::GetFlagPickupEnduranceDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "GetFlagPickupEnduranceDuration");

	Params::GuardFlag_GetFlagPickupEnduranceDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.GuardFlag.GetFlagPickupHasteDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGuardFlag::GetFlagPickupHasteDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "GetFlagPickupHasteDuration");

	Params::GuardFlag_GetFlagPickupHasteDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.GuardFlag.GetHuntedSurvivor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ADBDPlayer* AGuardFlag::GetHuntedSurvivor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "GetHuntedSurvivor");

	Params::GuardFlag_GetHuntedSurvivor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.GuardHuntComponent.OnRep_HuntedSurvivor
// (Final, Native, Private)
// Parameters:
// class ASurvivor*                        previousChasedSurvivor                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGuardHuntComponent::OnRep_HuntedSurvivor(class ASurvivor* previousChasedSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardHuntComponent", "OnRep_HuntedSurvivor");

	Params::GuardHuntComponent_OnRep_HuntedSurvivor Parms{};

	Parms.previousChasedSurvivor = previousChasedSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardHuntComponent.OnRep_HuntStartingLocation
// (Final, Native, Private)

void UGuardHuntComponent::OnRep_HuntStartingLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardHuntComponent", "OnRep_HuntStartingLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardHuntComponent.GetHuntedSurvivor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASurvivor*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASurvivor* UGuardHuntComponent::GetHuntedSurvivor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardHuntComponent", "GetHuntedSurvivor");

	Params::GuardHuntComponent_GetHuntedSurvivor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.GuardIdleComponent.Multicast_OnIdleStarted
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UGuardIdleComponent::Multicast_OnIdleStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardIdleComponent", "Multicast_OnIdleStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardIdleComponent.Multicast_OnIdleStopped
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// EIdlePostStopOperation                  Operation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGuardIdleComponent::Multicast_OnIdleStopped(EIdlePostStopOperation Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardIdleComponent", "Multicast_OnIdleStopped");

	Params::GuardIdleComponent_Multicast_OnIdleStopped Parms{};

	Parms.Operation = Operation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardManagerComponent.OnRep_Guards
// (Final, Native, Private)

void UGuardManagerComponent::OnRep_Guards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardManagerComponent", "OnRep_Guards");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardPatrolComponent.OnRep_PatrolState
// (Final, Native, Private)

void UGuardPatrolComponent::OnRep_PatrolState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardPatrolComponent", "OnRep_PatrolState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardSlowingZone.OnZoneBeginOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardSlowingZone::OnZoneBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardSlowingZone", "OnZoneBeginOverlap");

	Params::GuardSlowingZone_OnZoneBeginOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardSlowingZone.OnZoneEndOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardSlowingZone::OnZoneEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardSlowingZone", "OnZoneEndOverlap");

	Params::GuardSlowingZone_OnZoneEndOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardPalletSlowingZone.OnRep_LinkedPallet
// (Final, Native, Private)

void AGuardPalletSlowingZone::OnRep_LinkedPallet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardPalletSlowingZone", "OnRep_LinkedPallet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Addon18.Authority_OnSplineBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UK30Addon18::Authority_OnSplineBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Addon18", "Authority_OnSplineBeginOverlap");

	Params::K30Addon18_Authority_OnSplineBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Addon18.Authority_OnSplineEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30Addon18::Authority_OnSplineEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Addon18", "Authority_OnSplineEndOverlap");

	Params::K30Addon18_Authority_OnSplineEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Addon20.Authority_OnPowerStateChanged
// (Final, Native, Private)
// Parameters:
// EPowerState                             previousState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPowerState                             newState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30Addon20::Authority_OnPowerStateChanged(EPowerState previousState, EPowerState newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Addon20", "Authority_OnPowerStateChanged");

	Params::K30Addon20_Authority_OnPowerStateChanged Parms{};

	Parms.previousState = previousState;
	Parms.newState = newState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Addon20.OnEndOverlapWindow
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30Addon20::OnEndOverlapWindow(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Addon20", "OnEndOverlapWindow");

	Params::K30Addon20_OnEndOverlapWindow Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30CheatComponent.DBD_K30SetPatrolAndHuntDuration
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30CheatComponent::DBD_K30SetPatrolAndHuntDuration(float Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30CheatComponent", "DBD_K30SetPatrolAndHuntDuration");

	Params::K30CheatComponent_DBD_K30SetPatrolAndHuntDuration Parms{};

	Parms.Seconds = Seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30CheatComponent.DBD_K30ToggleGuardAttackDespawn
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   despawnOnAttack                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30CheatComponent::DBD_K30ToggleGuardAttackDespawn(int32 despawnOnAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30CheatComponent", "DBD_K30ToggleGuardAttackDespawn");

	Params::K30CheatComponent_DBD_K30ToggleGuardAttackDespawn Parms{};

	Parms.despawnOnAttack = despawnOnAttack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30GuardUtilities.GetMaximumHuntDuration
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AKnightGuard*               guard                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK30GuardUtilities::GetMaximumHuntDuration(const class AKnightGuard* guard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K30GuardUtilities", "GetMaximumHuntDuration");

	Params::K30GuardUtilities_GetMaximumHuntDuration Parms{};

	Parms.guard = guard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30GuardUtilities.GetPatrolDuration
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AKnightGuard*               guard                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK30GuardUtilities::GetPatrolDuration(const class AKnightGuard* guard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K30GuardUtilities", "GetPatrolDuration");

	Params::K30GuardUtilities_GetPatrolDuration Parms{};

	Parms.guard = guard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30GuardUtilities.GetPatrollingVisionRangeBaseValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AKnightGuard*               guard                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK30GuardUtilities::GetPatrollingVisionRangeBaseValue(const class AKnightGuard* guard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K30GuardUtilities", "GetPatrollingVisionRangeBaseValue");

	Params::K30GuardUtilities_GetPatrollingVisionRangeBaseValue Parms{};

	Parms.guard = guard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30HugCosmeticHandler.Cosmetic_Hug
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    isHugging                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           vaultableOwner                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASurvivor*                        hugInstigator                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK30HugCosmeticHandler::Cosmetic_Hug(bool isHugging, class AActor* vaultableOwner, class ASurvivor* hugInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30HugCosmeticHandler", "Cosmetic_Hug");

	Params::K30HugCosmeticHandler_Cosmetic_Hug Parms{};

	Parms.isHugging = isHugging;
	Parms.vaultableOwner = vaultableOwner;
	Parms.hugInstigator = hugInstigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.K30HugCosmeticHandler.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AK30HugCosmeticHandler::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30HugCosmeticHandler", "OnBeginOverlap");

	Params::K30HugCosmeticHandler_OnBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30HugCosmeticHandler.OnVault
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       vaulter                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK30HugCosmeticHandler::OnVault(class ADBDPlayer* vaulter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30HugCosmeticHandler", "OnVault");

	Params::K30HugCosmeticHandler_OnVault Parms{};

	Parms.vaulter = vaulter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30P02.Authority_OnSurvivorFirstScream
// (Final, Native, Public)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30P02::Authority_OnSurvivorFirstScream(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02", "Authority_OnSurvivorFirstScream");

	Params::K30P02_Authority_OnSurvivorFirstScream Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30P02.Authority_OnTotemStateChanged
// (Final, Native, Public)
// Parameters:
// const ETotemState                       oldState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETotemState                       newState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30P02::Authority_OnTotemStateChanged(const ETotemState oldState, const ETotemState newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02", "Authority_OnTotemStateChanged");

	Params::K30P02_Authority_OnTotemStateChanged Parms{};

	Parms.oldState = oldState;
	Parms.newState = newState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30P02.Authority_UncursePlayer
// (Final, Native, Private)

void UK30P02::Authority_UncursePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02", "Authority_UncursePlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30P02.GetScreamInterval
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const float UK30P02::GetScreamInterval() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02", "GetScreamInterval");

	Params::K30P02_GetScreamInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30P02ScreamStatusEffect.Multicast_MakePlayerScream
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// const float                             screamRevealDuration                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30P02ScreamStatusEffect::Multicast_MakePlayerScream(const float screamRevealDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02ScreamStatusEffect", "Multicast_MakePlayerScream");

	Params::K30P02ScreamStatusEffect_Multicast_MakePlayerScream Parms{};

	Parms.screamRevealDuration = screamRevealDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30P02ScreamStatusEffect.GetTimerDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK30P02ScreamStatusEffect::GetTimerDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02ScreamStatusEffect", "GetTimerDuration");

	Params::K30P02ScreamStatusEffect_GetTimerDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30P02ScreamStatusEffect.GetTimerRemainingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK30P02ScreamStatusEffect::GetTimerRemainingTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02ScreamStatusEffect", "GetTimerRemainingTime");

	Params::K30P02ScreamStatusEffect_GetTimerRemainingTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30P02ScreamStatusEffect.IsTimerActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK30P02ScreamStatusEffect::IsTimerActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02ScreamStatusEffect", "IsTimerActive");

	Params::K30P02ScreamStatusEffect_IsTimerActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30P02ScreamStatusEffect.IsTimerPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK30P02ScreamStatusEffect::IsTimerPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02ScreamStatusEffect", "IsTimerPaused");

	Params::K30P02ScreamStatusEffect_IsTimerPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30SurvivorCosmeticHelperActor.Cosmetic_OnHuntBegin
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class AKnightGuard*               guard                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK30SurvivorCosmeticHelperActor::Cosmetic_OnHuntBegin(const class AKnightGuard* guard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30SurvivorCosmeticHelperActor", "Cosmetic_OnHuntBegin");

	Params::K30SurvivorCosmeticHelperActor_Cosmetic_OnHuntBegin Parms{};

	Parms.guard = guard;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.K30SurvivorCosmeticHelperActor.Cosmetic_OnHuntEnd
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK30SurvivorCosmeticHelperActor::Cosmetic_OnHuntEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30SurvivorCosmeticHelperActor", "Cosmetic_OnHuntEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.K30SurvivorCosmeticHelperActor.Cosmetic_OnSurvivorCaptureFlagBuffActivationStateChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    isFlagCaptureBuffActive                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK30SurvivorCosmeticHelperActor::Cosmetic_OnSurvivorCaptureFlagBuffActivationStateChanged(bool isFlagCaptureBuffActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30SurvivorCosmeticHelperActor", "Cosmetic_OnSurvivorCaptureFlagBuffActivationStateChanged");

	Params::K30SurvivorCosmeticHelperActor_Cosmetic_OnSurvivorCaptureFlagBuffActivationStateChanged Parms{};

	Parms.isFlagCaptureBuffActive = isFlagCaptureBuffActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.K30Utilities.GetCurrentGuard
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     TheK30                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AKnightGuard*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AKnightGuard* UK30Utilities::GetCurrentGuard(const class AActor* TheK30)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K30Utilities", "GetCurrentGuard");

	Params::K30Utilities_GetCurrentGuard Parms{};

	Parms.TheK30 = TheK30;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Utilities.GetCurrentGuardIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     TheK30                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UK30Utilities::GetCurrentGuardIndex(const class AActor* TheK30)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K30Utilities", "GetCurrentGuardIndex");

	Params::K30Utilities_GetCurrentGuardIndex Parms{};

	Parms.TheK30 = TheK30;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Utilities.GetK30Power
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     TheK30                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK30Power*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK30Power* UK30Utilities::GetK30Power(const class AActor* TheK30)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K30Utilities", "GetK30Power");

	Params::K30Utilities_GetK30Power Parms{};

	Parms.TheK30 = TheK30;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.KnightGuard.Cosmetic_HideGuard
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AKnightGuard::Cosmetic_HideGuard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_HideGuard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_HuntChaseStarted
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AKnightGuard::Cosmetic_HuntChaseStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_HuntChaseStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_OnGuardVisionRadiusChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Cosmetic_OnGuardVisionRadiusChanged(bool IsVisible, float Radius, float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnGuardVisionRadiusChanged");

	Params::KnightGuard_Cosmetic_OnGuardVisionRadiusChanged Parms{};

	Parms.IsVisible = IsVisible;
	Parms.Radius = Radius;
	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightGuard.Cosmetic_OnHuntEnded
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// EGuardHuntEndReason                     Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Cosmetic_OnHuntEnded(EGuardHuntEndReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnHuntEnded");

	Params::KnightGuard_Cosmetic_OnHuntEnded Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightGuard.Cosmetic_OnHuntTeleportStarted
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Cosmetic_OnHuntTeleportStarted(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnHuntTeleportStarted");

	Params::KnightGuard_Cosmetic_OnHuntTeleportStarted Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightGuard.Cosmetic_OnIdleEnded
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AKnightGuard::Cosmetic_OnIdleEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnIdleEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_OnOrderEnded
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AKnightGuard::Cosmetic_OnOrderEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnOrderEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_OnPatrolEnded
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       foundSurvivor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Cosmetic_OnPatrolEnded(class ADBDPlayer* foundSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnPatrolEnded");

	Params::KnightGuard_Cosmetic_OnPatrolEnded Parms{};

	Parms.foundSurvivor = foundSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightGuard.Cosmetic_OnPatrolStarted
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AKnightGuard::Cosmetic_OnPatrolStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnPatrolStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_OnSurvivorDetected
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       foundSurvivor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Cosmetic_OnSurvivorDetected(class ADBDPlayer* foundSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnSurvivorDetected");

	Params::KnightGuard_Cosmetic_OnSurvivorDetected Parms{};

	Parms.foundSurvivor = foundSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightGuard.Cosmetic_ShowGuard
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AKnightGuard::Cosmetic_ShowGuard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_ShowGuard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_StartOverlappingVaultOrSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AKnightGuard::Cosmetic_StartOverlappingVaultOrSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_StartOverlappingVaultOrSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_StopOverlappingVaultOrSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AKnightGuard::Cosmetic_StopOverlappingVaultOrSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_StopOverlappingVaultOrSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Multicast_OnHuntEnded
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EGuardHuntEndReason                     Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Multicast_OnHuntEnded(EGuardHuntEndReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Multicast_OnHuntEnded");

	Params::KnightGuard_Multicast_OnHuntEnded Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightGuard.Multicast_OnOrderEnded
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AInteractable*                    Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    startCooldown                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Multicast_OnOrderEnded(class AInteractable* Target, bool startCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Multicast_OnOrderEnded");

	Params::KnightGuard_Multicast_OnOrderEnded Parms{};

	Parms.Target = Target;
	Parms.startCooldown = startCooldown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightGuard.Multicast_OnPatrolEnded
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADBDPlayer*                       foundSurvivor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   cooldownOverride                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Multicast_OnPatrolEnded(class ADBDPlayer* foundSurvivor, float cooldownOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Multicast_OnPatrolEnded");

	Params::KnightGuard_Multicast_OnPatrolEnded Parms{};

	Parms.foundSurvivor = foundSurvivor;
	Parms.cooldownOverride = cooldownOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightGuard.Multicast_OnSurvivorDetected
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADBDPlayer*                       foundSurvivor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Multicast_OnSurvivorDetected(class ADBDPlayer* foundSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Multicast_OnSurvivorDetected");

	Params::KnightGuard_Multicast_OnSurvivorDetected Parms{};

	Parms.foundSurvivor = foundSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightGuard.OnRep_IsActive
// (Final, Native, Private)
// Parameters:
// bool                                    previousIsActive                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::OnRep_IsActive(bool previousIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "OnRep_IsActive");

	Params::KnightGuard_OnRep_IsActive Parms{};

	Parms.previousIsActive = previousIsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightGuard.GetHuntAuraVisibilityMinDistanceToKiller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AKnightGuard::GetHuntAuraVisibilityMinDistanceToKiller() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "GetHuntAuraVisibilityMinDistanceToKiller");

	Params::KnightGuard_GetHuntAuraVisibilityMinDistanceToKiller Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.KnightGuard.GetImmediateGeneratorRegressionPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AKnightGuard::GetImmediateGeneratorRegressionPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "GetImmediateGeneratorRegressionPercent");

	Params::KnightGuard_GetImmediateGeneratorRegressionPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.KnightGuard.GetOrderDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AKnightGuard::GetOrderDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "GetOrderDuration");

	Params::KnightGuard_GetOrderDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.KnightGuard.GetOwningKiller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKiller*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AKiller* AKnightGuard::GetOwningKiller() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "GetOwningKiller");

	Params::KnightGuard_GetOwningKiller Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.KnightGuard.GetPatrolComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGuardPatrolComponent*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGuardPatrolComponent* AKnightGuard::GetPatrolComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "GetPatrolComponent");

	Params::KnightGuard_GetPatrolComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.KnightOrderComponent.Cosmetic_OnNewTargetSelected
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AInteractable*                    newTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AInteractable*                    oldTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKnightOrderComponent::Cosmetic_OnNewTargetSelected(class AInteractable* newTarget, class AInteractable* oldTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightOrderComponent", "Cosmetic_OnNewTargetSelected");

	Params::KnightOrderComponent_Cosmetic_OnNewTargetSelected Parms{};

	Parms.newTarget = newTarget;
	Parms.oldTarget = oldTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightOrderComponent.Cosmetic_OnTargetableObjectsChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AInteractable*                    Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isTargetable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKnightOrderComponent::Cosmetic_OnTargetableObjectsChanged(class AInteractable* Object, bool isTargetable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightOrderComponent", "Cosmetic_OnTargetableObjectsChanged");

	Params::KnightOrderComponent_Cosmetic_OnTargetableObjectsChanged Parms{};

	Parms.Object = Object;
	Parms.isTargetable = isTargetable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightOrderComponent.OnCurrentInteractionFinished
// (Final, Native, Private)

void UKnightOrderComponent::OnCurrentInteractionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightOrderComponent", "OnCurrentInteractionFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightOrderComponent.OnGameEventDispatched
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UKnightOrderComponent::OnGameEventDispatched(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightOrderComponent", "OnGameEventDispatched");

	Params::KnightOrderComponent_OnGameEventDispatched Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightOrderComponent.GetTargetingRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UKnightOrderComponent::GetTargetingRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightOrderComponent", "GetTargetingRange");

	Params::KnightOrderComponent_GetTargetingRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.PatrolTrailComponent.OnRep_RemainingPathLengthPercent
// (Final, Native, Private)

void UPatrolTrailComponent::OnRep_RemainingPathLengthPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "OnRep_RemainingPathLengthPercent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.PatrolTrailComponent.DoesTrailExist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPatrolTrailComponent::DoesTrailExist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "DoesTrailExist");

	Params::PatrolTrailComponent_DoesTrailExist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.PatrolTrailComponent.GetCurrentTrailLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPatrolTrailComponent::GetCurrentTrailLength() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "GetCurrentTrailLength");

	Params::PatrolTrailComponent_GetCurrentTrailLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.PatrolTrailComponent.GetFirstNode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATrailNode*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATrailNode* UPatrolTrailComponent::GetFirstNode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "GetFirstNode");

	Params::PatrolTrailComponent_GetFirstNode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.PatrolTrailComponent.GetLastNode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATrailNode*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATrailNode* UPatrolTrailComponent::GetLastNode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "GetLastNode");

	Params::PatrolTrailComponent_GetLastNode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

