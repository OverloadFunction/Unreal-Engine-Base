#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_K36_SkullHead01

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "DBDAnimation_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_K36_SkullHead01.AB_K36_SkullHead01_C
// 0x0520 (0x0890 - 0x0370)
class UAB_K36_SkullHead01_C final : public UDynamicAccessoryAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x03A8(0x01D8)(ContainsInstancedReference)
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0580(0x0108)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0688(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x06B0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x06D8(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0708(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0728(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0758(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0778(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x07A8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x07C8(0x00C8)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_AB_K36_SkullHead01(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_K36_SkullHead01_C">();
	}
	static class UAB_K36_SkullHead01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_K36_SkullHead01_C>();
	}
};
static_assert(alignof(UAB_K36_SkullHead01_C) == 0x000010, "Wrong alignment on UAB_K36_SkullHead01_C");
static_assert(sizeof(UAB_K36_SkullHead01_C) == 0x000890, "Wrong size on UAB_K36_SkullHead01_C");
static_assert(offsetof(UAB_K36_SkullHead01_C, UberGraphFrame) == 0x000370, "Member 'UAB_K36_SkullHead01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UAB_K36_SkullHead01_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UAB_K36_SkullHead01_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimGraphNode_Root) == 0x000388, "Member 'UAB_K36_SkullHead01_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimGraphNode_CopyPoseFromMesh) == 0x0003A8, "Member 'UAB_K36_SkullHead01_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimGraphNode_SaveCachedPose) == 0x000580, "Member 'UAB_K36_SkullHead01_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimGraphNode_TransitionResult_1) == 0x000688, "Member 'UAB_K36_SkullHead01_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimGraphNode_TransitionResult) == 0x0006B0, "Member 'UAB_K36_SkullHead01_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimGraphNode_UseCachedPose_2) == 0x0006D8, "Member 'UAB_K36_SkullHead01_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimGraphNode_StateResult_2) == 0x000708, "Member 'UAB_K36_SkullHead01_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimGraphNode_UseCachedPose_1) == 0x000728, "Member 'UAB_K36_SkullHead01_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimGraphNode_StateResult_1) == 0x000758, "Member 'UAB_K36_SkullHead01_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimGraphNode_UseCachedPose) == 0x000778, "Member 'UAB_K36_SkullHead01_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimGraphNode_StateResult) == 0x0007A8, "Member 'UAB_K36_SkullHead01_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_K36_SkullHead01_C, AnimGraphNode_StateMachine) == 0x0007C8, "Member 'UAB_K36_SkullHead01_C::AnimGraphNode_StateMachine' has a wrong offset!");

}

