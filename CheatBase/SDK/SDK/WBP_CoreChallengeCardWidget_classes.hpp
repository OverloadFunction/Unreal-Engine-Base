#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreChallengeCardWidget

#include "Basic.hpp"

#include "DBDUIViewsCore_classes.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "E_ChallengesMenuChallengeButtonStatePreview_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreChallengeCardWidget.WBP_CoreChallengeCardWidget_C
// 0x00E0 (0x12A0 - 0x11C0)
class UWBP_CoreChallengeCardWidget_C final : public UCoreChallengeCardWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x11C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               Background;                                        // 0x11C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              BackgroundSmokeFX;                                 // 0x11D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              BackgroundSmokeFX_Hover;                           // 0x11D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Content;                                           // 0x11E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              HeaderBackground;                                  // 0x11E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              MaterialBackground;                                // 0x11F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        BG_Opacity;                                        // 0x11F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Content_Default_Opacity;                           // 0x1200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Content_Hovered_Opacity;                           // 0x1208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Content_Completed_Opacity;                         // 0x1210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CompleteIcon_Opacity;                              // 0x1218(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rewards__Default_Opacity;                          // 0x121C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rewards_Hovered_Opacity;                           // 0x1220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1224[0x4];                                     // 0x1224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerRole, class UMaterialInterface*>  HeaderBackgroundTextures;                          // 0x1228(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_ChallengesMenuChallengeButtonStatePreview   Button_State_Preview;                              // 0x1278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1279[0x7];                                     // 0x1279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              NewVar;                                            // 0x1280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfRewards;                                   // 0x1290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfProgressBars;                              // 0x1294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNew;                                             // 0x1298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFollowed;                                        // 0x1299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_CoreChallengeCardWidget(int32 EntryPoint);
	void OnHovered();
	void OnRewardHoveredCallback(class UCoreButtonWidget* targetButton);
	void OnRewardUnhoveredCallback(class UCoreButtonWidget* targetButton);
	void OnUnhovered();
	void PreConstruct(bool IsDesignTime);
	void UpdateHeaderBackground(EPlayerRole Role);
	void UpdateRewardVisuals();
	void UpdateVisuals(bool IsCompleted, bool IsHovered_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreChallengeCardWidget_C">();
	}
	static class UWBP_CoreChallengeCardWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreChallengeCardWidget_C>();
	}
};
static_assert(alignof(UWBP_CoreChallengeCardWidget_C) == 0x000008, "Wrong alignment on UWBP_CoreChallengeCardWidget_C");
static_assert(sizeof(UWBP_CoreChallengeCardWidget_C) == 0x0012A0, "Wrong size on UWBP_CoreChallengeCardWidget_C");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, UberGraphFrame) == 0x0011C0, "Member 'UWBP_CoreChallengeCardWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, Background) == 0x0011C8, "Member 'UWBP_CoreChallengeCardWidget_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, BackgroundSmokeFX) == 0x0011D0, "Member 'UWBP_CoreChallengeCardWidget_C::BackgroundSmokeFX' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, BackgroundSmokeFX_Hover) == 0x0011D8, "Member 'UWBP_CoreChallengeCardWidget_C::BackgroundSmokeFX_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, Content) == 0x0011E0, "Member 'UWBP_CoreChallengeCardWidget_C::Content' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, HeaderBackground) == 0x0011E8, "Member 'UWBP_CoreChallengeCardWidget_C::HeaderBackground' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, MaterialBackground) == 0x0011F0, "Member 'UWBP_CoreChallengeCardWidget_C::MaterialBackground' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, BG_Opacity) == 0x0011F8, "Member 'UWBP_CoreChallengeCardWidget_C::BG_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, Content_Default_Opacity) == 0x001200, "Member 'UWBP_CoreChallengeCardWidget_C::Content_Default_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, Content_Hovered_Opacity) == 0x001208, "Member 'UWBP_CoreChallengeCardWidget_C::Content_Hovered_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, Content_Completed_Opacity) == 0x001210, "Member 'UWBP_CoreChallengeCardWidget_C::Content_Completed_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, CompleteIcon_Opacity) == 0x001218, "Member 'UWBP_CoreChallengeCardWidget_C::CompleteIcon_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, Rewards__Default_Opacity) == 0x00121C, "Member 'UWBP_CoreChallengeCardWidget_C::Rewards__Default_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, Rewards_Hovered_Opacity) == 0x001220, "Member 'UWBP_CoreChallengeCardWidget_C::Rewards_Hovered_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, HeaderBackgroundTextures) == 0x001228, "Member 'UWBP_CoreChallengeCardWidget_C::HeaderBackgroundTextures' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, Button_State_Preview) == 0x001278, "Member 'UWBP_CoreChallengeCardWidget_C::Button_State_Preview' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, NewVar) == 0x001280, "Member 'UWBP_CoreChallengeCardWidget_C::NewVar' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, NumberOfRewards) == 0x001290, "Member 'UWBP_CoreChallengeCardWidget_C::NumberOfRewards' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, NumberOfProgressBars) == 0x001294, "Member 'UWBP_CoreChallengeCardWidget_C::NumberOfProgressBars' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, IsNew) == 0x001298, "Member 'UWBP_CoreChallengeCardWidget_C::IsNew' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeCardWidget_C, IsFollowed) == 0x001299, "Member 'UWBP_CoreChallengeCardWidget_C::IsFollowed' has a wrong offset!");

}

