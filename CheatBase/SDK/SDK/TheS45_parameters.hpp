#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS45

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"


namespace SDK::Params
{

// Function TheS45.S45P02.Authority_OnInteractionFinished
// 0x0010 (0x0010 - 0x0000)
struct S45P02_Authority_OnInteractionFinished final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          hasInteractionStarted;                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S45P02_Authority_OnInteractionFinished) == 0x000008, "Wrong alignment on S45P02_Authority_OnInteractionFinished");
static_assert(sizeof(S45P02_Authority_OnInteractionFinished) == 0x000010, "Wrong size on S45P02_Authority_OnInteractionFinished");
static_assert(offsetof(S45P02_Authority_OnInteractionFinished, Player) == 0x000000, "Member 'S45P02_Authority_OnInteractionFinished::Player' has a wrong offset!");
static_assert(offsetof(S45P02_Authority_OnInteractionFinished, hasInteractionStarted) == 0x000008, "Member 'S45P02_Authority_OnInteractionFinished::hasInteractionStarted' has a wrong offset!");

// Function TheS45.S45P02.Authority_OnSurvivorHealthStateChanged
// 0x0002 (0x0002 - 0x0000)
struct S45P02_Authority_OnSurvivorHealthStateChanged final
{
public:
	EHealthState                                  PreviousHealthState;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHealthState                                  newHealthState;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S45P02_Authority_OnSurvivorHealthStateChanged) == 0x000001, "Wrong alignment on S45P02_Authority_OnSurvivorHealthStateChanged");
static_assert(sizeof(S45P02_Authority_OnSurvivorHealthStateChanged) == 0x000002, "Wrong size on S45P02_Authority_OnSurvivorHealthStateChanged");
static_assert(offsetof(S45P02_Authority_OnSurvivorHealthStateChanged, PreviousHealthState) == 0x000000, "Member 'S45P02_Authority_OnSurvivorHealthStateChanged::PreviousHealthState' has a wrong offset!");
static_assert(offsetof(S45P02_Authority_OnSurvivorHealthStateChanged, newHealthState) == 0x000001, "Member 'S45P02_Authority_OnSurvivorHealthStateChanged::newHealthState' has a wrong offset!");

// Function TheS45.S45P02.OnInteractionFromAttacherComponentInteractionAdded
// 0x0008 (0x0008 - 0x0000)
struct S45P02_OnInteractionFromAttacherComponentInteractionAdded final
{
public:
	class UInteractionDefinition*                 InteractionDefinition;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S45P02_OnInteractionFromAttacherComponentInteractionAdded) == 0x000008, "Wrong alignment on S45P02_OnInteractionFromAttacherComponentInteractionAdded");
static_assert(sizeof(S45P02_OnInteractionFromAttacherComponentInteractionAdded) == 0x000008, "Wrong size on S45P02_OnInteractionFromAttacherComponentInteractionAdded");
static_assert(offsetof(S45P02_OnInteractionFromAttacherComponentInteractionAdded, InteractionDefinition) == 0x000000, "Member 'S45P02_OnInteractionFromAttacherComponentInteractionAdded::InteractionDefinition' has a wrong offset!");

// Function TheS45.S45P02.Cosmetic_OnSurvivorHealed
// 0x0008 (0x0008 - 0x0000)
struct S45P02_Cosmetic_OnSurvivorHealed final
{
public:
	class ASurvivor*                              Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S45P02_Cosmetic_OnSurvivorHealed) == 0x000008, "Wrong alignment on S45P02_Cosmetic_OnSurvivorHealed");
static_assert(sizeof(S45P02_Cosmetic_OnSurvivorHealed) == 0x000008, "Wrong size on S45P02_Cosmetic_OnSurvivorHealed");
static_assert(offsetof(S45P02_Cosmetic_OnSurvivorHealed, Survivor) == 0x000000, "Member 'S45P02_Cosmetic_OnSurvivorHealed::Survivor' has a wrong offset!");

// Function TheS45.S45P02.GetDurationOfHealAtLevel
// 0x0004 (0x0004 - 0x0000)
struct S45P02_GetDurationOfHealAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S45P02_GetDurationOfHealAtLevel) == 0x000004, "Wrong alignment on S45P02_GetDurationOfHealAtLevel");
static_assert(sizeof(S45P02_GetDurationOfHealAtLevel) == 0x000004, "Wrong size on S45P02_GetDurationOfHealAtLevel");
static_assert(offsetof(S45P02_GetDurationOfHealAtLevel, ReturnValue) == 0x000000, "Member 'S45P02_GetDurationOfHealAtLevel::ReturnValue' has a wrong offset!");

// Function TheS45.S45P02Interaction.Cosmetic_OnAbilityActivated
// 0x0008 (0x0008 - 0x0000)
struct S45P02Interaction_Cosmetic_OnAbilityActivated final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S45P02Interaction_Cosmetic_OnAbilityActivated) == 0x000008, "Wrong alignment on S45P02Interaction_Cosmetic_OnAbilityActivated");
static_assert(sizeof(S45P02Interaction_Cosmetic_OnAbilityActivated) == 0x000008, "Wrong size on S45P02Interaction_Cosmetic_OnAbilityActivated");
static_assert(offsetof(S45P02Interaction_Cosmetic_OnAbilityActivated, Player) == 0x000000, "Member 'S45P02Interaction_Cosmetic_OnAbilityActivated::Player' has a wrong offset!");

// Function TheS45.S45P03.Multicast_OnPlayerScreaming
// 0x0008 (0x0008 - 0x0000)
struct S45P03_Multicast_OnPlayerScreaming final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S45P03_Multicast_OnPlayerScreaming) == 0x000008, "Wrong alignment on S45P03_Multicast_OnPlayerScreaming");
static_assert(sizeof(S45P03_Multicast_OnPlayerScreaming) == 0x000008, "Wrong size on S45P03_Multicast_OnPlayerScreaming");
static_assert(offsetof(S45P03_Multicast_OnPlayerScreaming, Player) == 0x000000, "Member 'S45P03_Multicast_OnPlayerScreaming::Player' has a wrong offset!");

// Function TheS45.S45P03.GetExposedDurationAtLevel
// 0x0004 (0x0004 - 0x0000)
struct S45P03_GetExposedDurationAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S45P03_GetExposedDurationAtLevel) == 0x000004, "Wrong alignment on S45P03_GetExposedDurationAtLevel");
static_assert(sizeof(S45P03_GetExposedDurationAtLevel) == 0x000004, "Wrong size on S45P03_GetExposedDurationAtLevel");
static_assert(offsetof(S45P03_GetExposedDurationAtLevel, ReturnValue) == 0x000000, "Member 'S45P03_GetExposedDurationAtLevel::ReturnValue' has a wrong offset!");

// Function TheS45.S45P03UnhookInteraction.Cosmetic_OnInteractionChargeCompleted
// 0x0010 (0x0010 - 0x0000)
struct S45P03UnhookInteraction_Cosmetic_OnInteractionChargeCompleted final
{
public:
	class ADBDPlayer*                             Instigator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADBDPlayer*                             Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S45P03UnhookInteraction_Cosmetic_OnInteractionChargeCompleted) == 0x000008, "Wrong alignment on S45P03UnhookInteraction_Cosmetic_OnInteractionChargeCompleted");
static_assert(sizeof(S45P03UnhookInteraction_Cosmetic_OnInteractionChargeCompleted) == 0x000010, "Wrong size on S45P03UnhookInteraction_Cosmetic_OnInteractionChargeCompleted");
static_assert(offsetof(S45P03UnhookInteraction_Cosmetic_OnInteractionChargeCompleted, Instigator) == 0x000000, "Member 'S45P03UnhookInteraction_Cosmetic_OnInteractionChargeCompleted::Instigator' has a wrong offset!");
static_assert(offsetof(S45P03UnhookInteraction_Cosmetic_OnInteractionChargeCompleted, Target) == 0x000008, "Member 'S45P03UnhookInteraction_Cosmetic_OnInteractionChargeCompleted::Target' has a wrong offset!");

// Function TheS45.S45P03UnhookInteraction.Multicast_SetChargeableComponent
// 0x0010 (0x0010 - 0x0000)
struct S45P03UnhookInteraction_Multicast_SetChargeableComponent final
{
public:
	class UChargeableComponent*                   ChargeableComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          isNullAllowed;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(S45P03UnhookInteraction_Multicast_SetChargeableComponent) == 0x000008, "Wrong alignment on S45P03UnhookInteraction_Multicast_SetChargeableComponent");
static_assert(sizeof(S45P03UnhookInteraction_Multicast_SetChargeableComponent) == 0x000010, "Wrong size on S45P03UnhookInteraction_Multicast_SetChargeableComponent");
static_assert(offsetof(S45P03UnhookInteraction_Multicast_SetChargeableComponent, ChargeableComponent) == 0x000000, "Member 'S45P03UnhookInteraction_Multicast_SetChargeableComponent::ChargeableComponent' has a wrong offset!");
static_assert(offsetof(S45P03UnhookInteraction_Multicast_SetChargeableComponent, isNullAllowed) == 0x000008, "Member 'S45P03UnhookInteraction_Multicast_SetChargeableComponent::isNullAllowed' has a wrong offset!");

}

