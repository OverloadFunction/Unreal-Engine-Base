#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreChallengeIconWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreChallengeIconWidget.WBP_CoreChallengeIconWidget_C
// 0x0160 (0x0498 - 0x0338)
class UWBP_CoreChallengeIconWidget_C final : public UCoreChallengeIconWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          ShowShadow;                                        // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              UndefinedIcon;                                     // 0x0348(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              KillerIcon;                                        // 0x0380(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              SurvivorIcon;                                      // 0x03B8(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              UndefinedIcon_Shadow;                              // 0x03F0(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              KillerIcon_Shadow;                                 // 0x0428(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              SurvivorIcon_Shadow;                               // 0x0460(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_CoreChallengeIconWidget(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetDefaultVisuals(EPlayerRole Role);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreChallengeIconWidget_C">();
	}
	static class UWBP_CoreChallengeIconWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreChallengeIconWidget_C>();
	}
};
static_assert(alignof(UWBP_CoreChallengeIconWidget_C) == 0x000008, "Wrong alignment on UWBP_CoreChallengeIconWidget_C");
static_assert(sizeof(UWBP_CoreChallengeIconWidget_C) == 0x000498, "Wrong size on UWBP_CoreChallengeIconWidget_C");
static_assert(offsetof(UWBP_CoreChallengeIconWidget_C, UberGraphFrame) == 0x000338, "Member 'UWBP_CoreChallengeIconWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeIconWidget_C, ShowShadow) == 0x000340, "Member 'UWBP_CoreChallengeIconWidget_C::ShowShadow' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeIconWidget_C, UndefinedIcon) == 0x000348, "Member 'UWBP_CoreChallengeIconWidget_C::UndefinedIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeIconWidget_C, KillerIcon) == 0x000380, "Member 'UWBP_CoreChallengeIconWidget_C::KillerIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeIconWidget_C, SurvivorIcon) == 0x0003B8, "Member 'UWBP_CoreChallengeIconWidget_C::SurvivorIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeIconWidget_C, UndefinedIcon_Shadow) == 0x0003F0, "Member 'UWBP_CoreChallengeIconWidget_C::UndefinedIcon_Shadow' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeIconWidget_C, KillerIcon_Shadow) == 0x000428, "Member 'UWBP_CoreChallengeIconWidget_C::KillerIcon_Shadow' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeIconWidget_C, SurvivorIcon_Shadow) == 0x000460, "Member 'UWBP_CoreChallengeIconWidget_C::SurvivorIcon_Shadow' has a wrong offset!");

}

