#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK40

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "TheK40_structs.hpp"
#include "DBDCompetence_classes.hpp"
#include "DBDBots_classes.hpp"
#include "DBDAnimation_classes.hpp"
#include "DataTableUtilities_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "DBDGameplay_classes.hpp"
#include "DBDCosmetic_classes.hpp"
#include "NetworkUtilities_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimationUtilities_structs.hpp"
#include "AnimationUtilities_classes.hpp"


namespace SDK
{

// Class TheK40.K40EnvironmentAttachedProjectileOutlineStrategy
// 0x0000 (0x0100 - 0x0100)
class UK40EnvironmentAttachedProjectileOutlineStrategy final : public UDefaultOutlineUpdateStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40EnvironmentAttachedProjectileOutlineStrategy">();
	}
	static class UK40EnvironmentAttachedProjectileOutlineStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40EnvironmentAttachedProjectileOutlineStrategy>();
	}
};
static_assert(alignof(UK40EnvironmentAttachedProjectileOutlineStrategy) == 0x000008, "Wrong alignment on UK40EnvironmentAttachedProjectileOutlineStrategy");
static_assert(sizeof(UK40EnvironmentAttachedProjectileOutlineStrategy) == 0x000100, "Wrong size on UK40EnvironmentAttachedProjectileOutlineStrategy");

// Class TheK40.K40SecuritySystemAbilityKillerCosmeticHelperActor
// 0x0018 (0x0300 - 0x02E8)
class AK40SecuritySystemAbilityKillerCosmeticHelperActor final : public ADBDPlayerCosmeticHelperActor
{
public:
	uint8                                         Pad_2E8[0x18];                                     // 0x02E8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_EnterSecurityDoor();
	void Cosmetic_ExitSecurityDoor();
	void Cosmetic_OnExitSecurityDoorFailureDoLocalCleanup();
	void Cosmetic_OnGrabExitSecurityDoorFailureDoLocalCleanup();
	void Cosmetic_OnRevealChanged(const bool IsRevealed);
	void Cosmetic_OnRevealProgressChanged(const float revealProgress);
	void Cosmetic_StartOfficeGrab();
	void Cosmetic_StartTeleporting();
	void Cosmetic_StartTeleportTargeting();
	void Cosmetic_StopOfficeGrab();

	class AK40SecurityDoor* GetInteractingSecurityDoor() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecuritySystemAbilityKillerCosmeticHelperActor">();
	}
	static class AK40SecuritySystemAbilityKillerCosmeticHelperActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40SecuritySystemAbilityKillerCosmeticHelperActor>();
	}
};
static_assert(alignof(AK40SecuritySystemAbilityKillerCosmeticHelperActor) == 0x000008, "Wrong alignment on AK40SecuritySystemAbilityKillerCosmeticHelperActor");
static_assert(sizeof(AK40SecuritySystemAbilityKillerCosmeticHelperActor) == 0x000300, "Wrong size on AK40SecuritySystemAbilityKillerCosmeticHelperActor");

// Class TheK40.AISkill_FindInteractable_K40SecurityDoor_Scout
// 0x0080 (0x0398 - 0x0318)
class UAISkill_FindInteractable_K40SecurityDoor_Scout final : public UAISkill_FindInteractable
{
public:
	float                                         MinimumBatteryLevel;                               // 0x0318(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         KillerEstimatedRange;                              // 0x031C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAITunableParameter                    MaxRandomWeight;                                   // 0x0320(0x0060)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         RandomWeightUpdateFrequency;                       // 0x0380(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_384[0x14];                                     // 0x0384(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AISkill_FindInteractable_K40SecurityDoor_Scout">();
	}
	static class UAISkill_FindInteractable_K40SecurityDoor_Scout* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISkill_FindInteractable_K40SecurityDoor_Scout>();
	}
};
static_assert(alignof(UAISkill_FindInteractable_K40SecurityDoor_Scout) == 0x000008, "Wrong alignment on UAISkill_FindInteractable_K40SecurityDoor_Scout");
static_assert(sizeof(UAISkill_FindInteractable_K40SecurityDoor_Scout) == 0x000398, "Wrong size on UAISkill_FindInteractable_K40SecurityDoor_Scout");
static_assert(offsetof(UAISkill_FindInteractable_K40SecurityDoor_Scout, MinimumBatteryLevel) == 0x000318, "Member 'UAISkill_FindInteractable_K40SecurityDoor_Scout::MinimumBatteryLevel' has a wrong offset!");
static_assert(offsetof(UAISkill_FindInteractable_K40SecurityDoor_Scout, KillerEstimatedRange) == 0x00031C, "Member 'UAISkill_FindInteractable_K40SecurityDoor_Scout::KillerEstimatedRange' has a wrong offset!");
static_assert(offsetof(UAISkill_FindInteractable_K40SecurityDoor_Scout, MaxRandomWeight) == 0x000320, "Member 'UAISkill_FindInteractable_K40SecurityDoor_Scout::MaxRandomWeight' has a wrong offset!");
static_assert(offsetof(UAISkill_FindInteractable_K40SecurityDoor_Scout, RandomWeightUpdateFrequency) == 0x000380, "Member 'UAISkill_FindInteractable_K40SecurityDoor_Scout::RandomWeightUpdateFrequency' has a wrong offset!");

// Class TheK40.K40SurvivorAnimInstance
// 0x0010 (0x05F0 - 0x05E0)
class UK40SurvivorAnimInstance final : public UBaseSurvivorAnimInstance
{
public:
	bool                                          _isSelfRemovingProjectile;                         // 0x05E0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isBeingPickedUpWithProjectile;                    // 0x05E1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5E2[0xE];                                      // 0x05E2(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SurvivorAnimInstance">();
	}
	static class UK40SurvivorAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SurvivorAnimInstance>();
	}
};
static_assert(alignof(UK40SurvivorAnimInstance) == 0x000010, "Wrong alignment on UK40SurvivorAnimInstance");
static_assert(sizeof(UK40SurvivorAnimInstance) == 0x0005F0, "Wrong size on UK40SurvivorAnimInstance");
static_assert(offsetof(UK40SurvivorAnimInstance, _isSelfRemovingProjectile) == 0x0005E0, "Member 'UK40SurvivorAnimInstance::_isSelfRemovingProjectile' has a wrong offset!");
static_assert(offsetof(UK40SurvivorAnimInstance, _isBeingPickedUpWithProjectile) == 0x0005E1, "Member 'UK40SurvivorAnimInstance::_isBeingPickedUpWithProjectile' has a wrong offset!");

// Class TheK40.AISkill_FindInteractable_K40SecurityDoor_Shortcut
// 0x0010 (0x0368 - 0x0358)
class UAISkill_FindInteractable_K40SecurityDoor_Shortcut final : public UAISkill_FindInteractable_Shortcut
{
public:
	float                                         KillerToDoorMinDistance;                           // 0x0358(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35C[0xC];                                      // 0x035C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AISkill_FindInteractable_K40SecurityDoor_Shortcut">();
	}
	static class UAISkill_FindInteractable_K40SecurityDoor_Shortcut* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISkill_FindInteractable_K40SecurityDoor_Shortcut>();
	}
};
static_assert(alignof(UAISkill_FindInteractable_K40SecurityDoor_Shortcut) == 0x000008, "Wrong alignment on UAISkill_FindInteractable_K40SecurityDoor_Shortcut");
static_assert(sizeof(UAISkill_FindInteractable_K40SecurityDoor_Shortcut) == 0x000368, "Wrong size on UAISkill_FindInteractable_K40SecurityDoor_Shortcut");
static_assert(offsetof(UAISkill_FindInteractable_K40SecurityDoor_Shortcut, KillerToDoorMinDistance) == 0x000358, "Member 'UAISkill_FindInteractable_K40SecurityDoor_Shortcut::KillerToDoorMinDistance' has a wrong offset!");

// Class TheK40.K40SurvivorAttachedProjectileOutlineStrategy
// 0x0000 (0x0160 - 0x0160)
class UK40SurvivorAttachedProjectileOutlineStrategy final : public USourceBasedOutlineUpdateStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SurvivorAttachedProjectileOutlineStrategy">();
	}
	static class UK40SurvivorAttachedProjectileOutlineStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SurvivorAttachedProjectileOutlineStrategy>();
	}
};
static_assert(alignof(UK40SurvivorAttachedProjectileOutlineStrategy) == 0x000008, "Wrong alignment on UK40SurvivorAttachedProjectileOutlineStrategy");
static_assert(sizeof(UK40SurvivorAttachedProjectileOutlineStrategy) == 0x000160, "Wrong size on UK40SurvivorAttachedProjectileOutlineStrategy");

// Class TheK40.AISkill_K40InsideSecurityDoor
// 0x01A8 (0x02C0 - 0x0118)
class UAISkill_K40InsideSecurityDoor final : public UAISkill
{
public:
	struct FAITunableParameter                    ActionInterval;                                    // 0x0118(0x0060)(Edit, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	struct FAITunableParameter                    CameraRotateInterval;                              // 0x0178(0x0060)(Edit, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	float                                         HoldInputTime;                                     // 0x01D8(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRevealDistance;                                 // 0x01DC(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CancelKillerPlayerDistance;                        // 0x01E0(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CancelKillerDoorDistance;                          // 0x01E4(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAITunableParameter                    AbandonObserveKillerTime;                          // 0x01E8(0x0060)(Edit, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	class FName                                   BBShortcutInteractable;                            // 0x0248(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TeleportInteractionId;                             // 0x0254(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ViewSwitchInteractionId;                           // 0x0260(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CancelInteractionId;                               // 0x026C(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_278[0x48];                                     // 0x0278(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AISkill_K40InsideSecurityDoor">();
	}
	static class UAISkill_K40InsideSecurityDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISkill_K40InsideSecurityDoor>();
	}
};
static_assert(alignof(UAISkill_K40InsideSecurityDoor) == 0x000008, "Wrong alignment on UAISkill_K40InsideSecurityDoor");
static_assert(sizeof(UAISkill_K40InsideSecurityDoor) == 0x0002C0, "Wrong size on UAISkill_K40InsideSecurityDoor");
static_assert(offsetof(UAISkill_K40InsideSecurityDoor, ActionInterval) == 0x000118, "Member 'UAISkill_K40InsideSecurityDoor::ActionInterval' has a wrong offset!");
static_assert(offsetof(UAISkill_K40InsideSecurityDoor, CameraRotateInterval) == 0x000178, "Member 'UAISkill_K40InsideSecurityDoor::CameraRotateInterval' has a wrong offset!");
static_assert(offsetof(UAISkill_K40InsideSecurityDoor, HoldInputTime) == 0x0001D8, "Member 'UAISkill_K40InsideSecurityDoor::HoldInputTime' has a wrong offset!");
static_assert(offsetof(UAISkill_K40InsideSecurityDoor, MaxRevealDistance) == 0x0001DC, "Member 'UAISkill_K40InsideSecurityDoor::MaxRevealDistance' has a wrong offset!");
static_assert(offsetof(UAISkill_K40InsideSecurityDoor, CancelKillerPlayerDistance) == 0x0001E0, "Member 'UAISkill_K40InsideSecurityDoor::CancelKillerPlayerDistance' has a wrong offset!");
static_assert(offsetof(UAISkill_K40InsideSecurityDoor, CancelKillerDoorDistance) == 0x0001E4, "Member 'UAISkill_K40InsideSecurityDoor::CancelKillerDoorDistance' has a wrong offset!");
static_assert(offsetof(UAISkill_K40InsideSecurityDoor, AbandonObserveKillerTime) == 0x0001E8, "Member 'UAISkill_K40InsideSecurityDoor::AbandonObserveKillerTime' has a wrong offset!");
static_assert(offsetof(UAISkill_K40InsideSecurityDoor, BBShortcutInteractable) == 0x000248, "Member 'UAISkill_K40InsideSecurityDoor::BBShortcutInteractable' has a wrong offset!");
static_assert(offsetof(UAISkill_K40InsideSecurityDoor, TeleportInteractionId) == 0x000254, "Member 'UAISkill_K40InsideSecurityDoor::TeleportInteractionId' has a wrong offset!");
static_assert(offsetof(UAISkill_K40InsideSecurityDoor, ViewSwitchInteractionId) == 0x000260, "Member 'UAISkill_K40InsideSecurityDoor::ViewSwitchInteractionId' has a wrong offset!");
static_assert(offsetof(UAISkill_K40InsideSecurityDoor, CancelInteractionId) == 0x00026C, "Member 'UAISkill_K40InsideSecurityDoor::CancelInteractionId' has a wrong offset!");

// Class TheK40.K40SurvivorAttachedProjectileStatusComponent
// 0x0008 (0x00C0 - 0x00B8)
class UK40SurvivorAttachedProjectileStatusComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SurvivorAttachedProjectileStatusComponent">();
	}
	static class UK40SurvivorAttachedProjectileStatusComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SurvivorAttachedProjectileStatusComponent>();
	}
};
static_assert(alignof(UK40SurvivorAttachedProjectileStatusComponent) == 0x000008, "Wrong alignment on UK40SurvivorAttachedProjectileStatusComponent");
static_assert(sizeof(UK40SurvivorAttachedProjectileStatusComponent) == 0x0000C0, "Wrong size on UK40SurvivorAttachedProjectileStatusComponent");

// Class TheK40.K40AnimInstance
// 0x0010 (0x0730 - 0x0720)
class UK40AnimInstance final : public UKillerAnimInstance
{
public:
	bool                                          _hasProjectile;                                    // 0x0720(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isTeleportingTargeting;                           // 0x0721(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isTeleporting;                                    // 0x0722(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isGrabbingSurvivorWithProjectile;                 // 0x0723(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_724[0xC];                                      // 0x0724(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40AnimInstance">();
	}
	static class UK40AnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40AnimInstance>();
	}
};
static_assert(alignof(UK40AnimInstance) == 0x000010, "Wrong alignment on UK40AnimInstance");
static_assert(sizeof(UK40AnimInstance) == 0x000730, "Wrong size on UK40AnimInstance");
static_assert(offsetof(UK40AnimInstance, _hasProjectile) == 0x000720, "Member 'UK40AnimInstance::_hasProjectile' has a wrong offset!");
static_assert(offsetof(UK40AnimInstance, _isTeleportingTargeting) == 0x000721, "Member 'UK40AnimInstance::_isTeleportingTargeting' has a wrong offset!");
static_assert(offsetof(UK40AnimInstance, _isTeleporting) == 0x000722, "Member 'UK40AnimInstance::_isTeleporting' has a wrong offset!");
static_assert(offsetof(UK40AnimInstance, _isGrabbingSurvivorWithProjectile) == 0x000723, "Member 'UK40AnimInstance::_isGrabbingSurvivorWithProjectile' has a wrong offset!");

// Class TheK40.K40SurvivorCosmeticHelperActor
// 0x0000 (0x0358 - 0x0358)
class AK40SurvivorCosmeticHelperActor final : public ASurvivorCosmeticHelperActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SurvivorCosmeticHelperActor">();
	}
	static class AK40SurvivorCosmeticHelperActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40SurvivorCosmeticHelperActor>();
	}
};
static_assert(alignof(AK40SurvivorCosmeticHelperActor) == 0x000008, "Wrong alignment on AK40SurvivorCosmeticHelperActor");
static_assert(sizeof(AK40SurvivorCosmeticHelperActor) == 0x000358, "Wrong size on AK40SurvivorCosmeticHelperActor");

// Class TheK40.K40AttachedTerrorRadius
// 0x0010 (0x02B0 - 0x02A0)
class AK40AttachedTerrorRadius final : public AActor
{
public:
	class UTerrorRadiusEmitterComponent*          _terrorRadiusEmitter;                              // 0x02A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A8[0x8];                                      // 0x02A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40AttachedTerrorRadius">();
	}
	static class AK40AttachedTerrorRadius* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40AttachedTerrorRadius>();
	}
};
static_assert(alignof(AK40AttachedTerrorRadius) == 0x000008, "Wrong alignment on AK40AttachedTerrorRadius");
static_assert(sizeof(AK40AttachedTerrorRadius) == 0x0002B0, "Wrong size on AK40AttachedTerrorRadius");
static_assert(offsetof(AK40AttachedTerrorRadius, _terrorRadiusEmitter) == 0x0002A0, "Member 'AK40AttachedTerrorRadius::_terrorRadiusEmitter' has a wrong offset!");

// Class TheK40.K40SurvivorHuskAnimInstance
// 0x0020 (0x0370 - 0x0350)
class UK40SurvivorHuskAnimInstance final : public UAnimInstance
{
public:
	class ASurvivor*                              OwningSurvivor;                                    // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          FaceAdditiveInverted;                              // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                          FaceAdditive;                                      // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                          FaceIdle;                                          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void InitializeFacialAnimations();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SurvivorHuskAnimInstance">();
	}
	static class UK40SurvivorHuskAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SurvivorHuskAnimInstance>();
	}
};
static_assert(alignof(UK40SurvivorHuskAnimInstance) == 0x000010, "Wrong alignment on UK40SurvivorHuskAnimInstance");
static_assert(sizeof(UK40SurvivorHuskAnimInstance) == 0x000370, "Wrong size on UK40SurvivorHuskAnimInstance");
static_assert(offsetof(UK40SurvivorHuskAnimInstance, OwningSurvivor) == 0x000350, "Member 'UK40SurvivorHuskAnimInstance::OwningSurvivor' has a wrong offset!");
static_assert(offsetof(UK40SurvivorHuskAnimInstance, FaceAdditiveInverted) == 0x000358, "Member 'UK40SurvivorHuskAnimInstance::FaceAdditiveInverted' has a wrong offset!");
static_assert(offsetof(UK40SurvivorHuskAnimInstance, FaceAdditive) == 0x000360, "Member 'UK40SurvivorHuskAnimInstance::FaceAdditive' has a wrong offset!");
static_assert(offsetof(UK40SurvivorHuskAnimInstance, FaceIdle) == 0x000368, "Member 'UK40SurvivorHuskAnimInstance::FaceIdle' has a wrong offset!");

// Class TheK40.K40CheatComponent
// 0x0000 (0x00B8 - 0x00B8)
class UK40CheatComponent final : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40CheatComponent">();
	}
	static class UK40CheatComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40CheatComponent>();
	}
};
static_assert(alignof(UK40CheatComponent) == 0x000008, "Wrong alignment on UK40CheatComponent");
static_assert(sizeof(UK40CheatComponent) == 0x0000B8, "Wrong size on UK40CheatComponent");

// Class TheK40.K40SurvivorInOfficeStatusEffect
// 0x0000 (0x0398 - 0x0398)
class UK40SurvivorInOfficeStatusEffect final : public UStatusEffect
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SurvivorInOfficeStatusEffect">();
	}
	static class UK40SurvivorInOfficeStatusEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SurvivorInOfficeStatusEffect>();
	}
};
static_assert(alignof(UK40SurvivorInOfficeStatusEffect) == 0x000008, "Wrong alignment on UK40SurvivorInOfficeStatusEffect");
static_assert(sizeof(UK40SurvivorInOfficeStatusEffect) == 0x000398, "Wrong size on UK40SurvivorInOfficeStatusEffect");

// Class TheK40.K40EnvironmentAttachedProjectile
// 0x0168 (0x0408 - 0x02A0)
class AK40EnvironmentAttachedProjectile final : public AActor
{
public:
	uint8                                         Pad_2A0[0x20];                                     // 0x02A0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _cleanupTime;                                      // 0x02C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _warningTime;                                      // 0x02C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFloatValueStrategy*                    _initialAOESize;                                   // 0x02C8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFloatValueStrategy*                    _AOESize;                                          // 0x02D0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D8[0x130];                                    // 0x02D8(0x0130)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnAoERemovalWarningStart(float WarningDuration);
	void Cosmetic_OnAoERemoved();
	void Cosmetic_OnAOESizeChanged(const float currentAOESize);
	void Cosmetic_OnProjectileRetrieved();
	void Cosmetic_OnSpawned(const struct FImpactInfo& ImpactInfo, const struct FVector& launchDirection);

	float GetAOEExpansionDuration() const;
	float GetAOEShrinkingDuration() const;
	float GetFinalAoERadius() const;
	float GetInitialAoERadius() const;
	bool IsActive() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40EnvironmentAttachedProjectile">();
	}
	static class AK40EnvironmentAttachedProjectile* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40EnvironmentAttachedProjectile>();
	}
};
static_assert(alignof(AK40EnvironmentAttachedProjectile) == 0x000008, "Wrong alignment on AK40EnvironmentAttachedProjectile");
static_assert(sizeof(AK40EnvironmentAttachedProjectile) == 0x000408, "Wrong size on AK40EnvironmentAttachedProjectile");
static_assert(offsetof(AK40EnvironmentAttachedProjectile, _cleanupTime) == 0x0002C0, "Member 'AK40EnvironmentAttachedProjectile::_cleanupTime' has a wrong offset!");
static_assert(offsetof(AK40EnvironmentAttachedProjectile, _warningTime) == 0x0002C4, "Member 'AK40EnvironmentAttachedProjectile::_warningTime' has a wrong offset!");
static_assert(offsetof(AK40EnvironmentAttachedProjectile, _initialAOESize) == 0x0002C8, "Member 'AK40EnvironmentAttachedProjectile::_initialAOESize' has a wrong offset!");
static_assert(offsetof(AK40EnvironmentAttachedProjectile, _AOESize) == 0x0002D0, "Member 'AK40EnvironmentAttachedProjectile::_AOESize' has a wrong offset!");

// Class TheK40.K40KillerInstinctEffect
// 0x0038 (0x03D0 - 0x0398)
class UK40KillerInstinctEffect final : public UKillerInstinctStatusEffect
{
public:
	class UFloatValueStrategy*                    _killerInstinctAOEDuration;                        // 0x0398(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFloatValueStrategy*                    _killerInstinctNearMissDuration;                   // 0x03A0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A8[0x28];                                     // 0x03A8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40KillerInstinctEffect">();
	}
	static class UK40KillerInstinctEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40KillerInstinctEffect>();
	}
};
static_assert(alignof(UK40KillerInstinctEffect) == 0x000008, "Wrong alignment on UK40KillerInstinctEffect");
static_assert(sizeof(UK40KillerInstinctEffect) == 0x0003D0, "Wrong size on UK40KillerInstinctEffect");
static_assert(offsetof(UK40KillerInstinctEffect, _killerInstinctAOEDuration) == 0x000398, "Member 'UK40KillerInstinctEffect::_killerInstinctAOEDuration' has a wrong offset!");
static_assert(offsetof(UK40KillerInstinctEffect, _killerInstinctNearMissDuration) == 0x0003A0, "Member 'UK40KillerInstinctEffect::_killerInstinctNearMissDuration' has a wrong offset!");

// Class TheK40.K40KillerInstinctNearDoorsWhileChargingThrowEffect
// 0x0098 (0x0430 - 0x0398)
class UK40KillerInstinctNearDoorsWhileChargingThrowEffect final : public UKillerInstinctStatusEffect
{
public:
	class UFloatValueStrategy*                    _distanceFromDoor;                                 // 0x0398(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A0[0x90];                                     // 0x03A0(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40KillerInstinctNearDoorsWhileChargingThrowEffect">();
	}
	static class UK40KillerInstinctNearDoorsWhileChargingThrowEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40KillerInstinctNearDoorsWhileChargingThrowEffect>();
	}
};
static_assert(alignof(UK40KillerInstinctNearDoorsWhileChargingThrowEffect) == 0x000008, "Wrong alignment on UK40KillerInstinctNearDoorsWhileChargingThrowEffect");
static_assert(sizeof(UK40KillerInstinctNearDoorsWhileChargingThrowEffect) == 0x000430, "Wrong size on UK40KillerInstinctNearDoorsWhileChargingThrowEffect");
static_assert(offsetof(UK40KillerInstinctNearDoorsWhileChargingThrowEffect, _distanceFromDoor) == 0x000398, "Member 'UK40KillerInstinctNearDoorsWhileChargingThrowEffect::_distanceFromDoor' has a wrong offset!");

// Class TheK40.K40KillerPickupAttachedProjectileInteraction
// 0x0020 (0x0790 - 0x0770)
class UK40KillerPickupAttachedProjectileInteraction final : public UInteractionDefinition
{
public:
	uint8                                         Pad_768[0x28];                                     // 0x0768(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40KillerPickupAttachedProjectileInteraction">();
	}
	static class UK40KillerPickupAttachedProjectileInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40KillerPickupAttachedProjectileInteraction>();
	}
};
static_assert(alignof(UK40KillerPickupAttachedProjectileInteraction) == 0x000010, "Wrong alignment on UK40KillerPickupAttachedProjectileInteraction");
static_assert(sizeof(UK40KillerPickupAttachedProjectileInteraction) == 0x000790, "Wrong size on UK40KillerPickupAttachedProjectileInteraction");

// Class TheK40.K40KillerRevealComponent
// 0x0040 (0x00F8 - 0x00B8)
class UK40KillerRevealComponent final : public UActorComponent
{
public:
	class UChargeableComponent*                   _revealKillerChargeableComponent;                  // 0x00B8(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C0[0x38];                                      // 0x00C0(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAuthorityPercentChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete);
	void OnCosmeticPercentChanged(class UChargeableComponent* ChargeableComponent, float TotalPercentComplete);
	void OnRep_RevealKillerChargeableComponent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40KillerRevealComponent">();
	}
	static class UK40KillerRevealComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40KillerRevealComponent>();
	}
};
static_assert(alignof(UK40KillerRevealComponent) == 0x000008, "Wrong alignment on UK40KillerRevealComponent");
static_assert(sizeof(UK40KillerRevealComponent) == 0x0000F8, "Wrong size on UK40KillerRevealComponent");
static_assert(offsetof(UK40KillerRevealComponent, _revealKillerChargeableComponent) == 0x0000B8, "Member 'UK40KillerRevealComponent::_revealKillerChargeableComponent' has a wrong offset!");

// Class TheK40.K40P01
// 0x0018 (0x0490 - 0x0478)
class UK40P01 final : public UCompromiseGeneratorPerk
{
public:
	TSubclassOf<class UStatusEffect>              _attackCooldownReductionStatusEffectClass;         // 0x0478(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _statusEffectDuration[0x3];                        // 0x0480(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40P01">();
	}
	static class UK40P01* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40P01>();
	}
};
static_assert(alignof(UK40P01) == 0x000008, "Wrong alignment on UK40P01");
static_assert(sizeof(UK40P01) == 0x000490, "Wrong size on UK40P01");
static_assert(offsetof(UK40P01, _attackCooldownReductionStatusEffectClass) == 0x000478, "Member 'UK40P01::_attackCooldownReductionStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK40P01, _statusEffectDuration) == 0x000480, "Member 'UK40P01::_statusEffectDuration' has a wrong offset!");

// Class TheK40.K40P02
// 0x0118 (0x0578 - 0x0460)
class UK40P02 final : public UPerk
{
public:
	struct FGameplayTagContainer                  _interactionsNotToInterrupt;                       // 0x0460(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class AKiller*                                _owningKiller;                                     // 0x0480(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTerrorRadiusEmitterComponent*          _emitterComponent;                                 // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class ASurvivor*, struct FSurvivorLineOfSightQueryPair> _survivorsInRange;                  // 0x0490(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_4E0[0x4];                                      // 0x04E0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _screamDuration[0x3];                              // 0x04E4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _cooldownDuration[0x3];                            // 0x04F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _detectionAngle;                                   // 0x0500(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _maxTriggerDistance;                               // 0x0508(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_530[0x8];                                      // 0x0530(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _K40P02RevealEffectClass;                          // 0x0538(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_540[0x38];                                     // 0x0540(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnIsInTerrorRadiusChanged(class ASurvivor* Survivor, bool IsInTerrorRadius);

	void Multicast_SurvivorScream(const class UScreamComponent* ScreamComponent) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40P02">();
	}
	static class UK40P02* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40P02>();
	}
};
static_assert(alignof(UK40P02) == 0x000008, "Wrong alignment on UK40P02");
static_assert(sizeof(UK40P02) == 0x000578, "Wrong size on UK40P02");
static_assert(offsetof(UK40P02, _interactionsNotToInterrupt) == 0x000460, "Member 'UK40P02::_interactionsNotToInterrupt' has a wrong offset!");
static_assert(offsetof(UK40P02, _owningKiller) == 0x000480, "Member 'UK40P02::_owningKiller' has a wrong offset!");
static_assert(offsetof(UK40P02, _emitterComponent) == 0x000488, "Member 'UK40P02::_emitterComponent' has a wrong offset!");
static_assert(offsetof(UK40P02, _survivorsInRange) == 0x000490, "Member 'UK40P02::_survivorsInRange' has a wrong offset!");
static_assert(offsetof(UK40P02, _screamDuration) == 0x0004E4, "Member 'UK40P02::_screamDuration' has a wrong offset!");
static_assert(offsetof(UK40P02, _cooldownDuration) == 0x0004F0, "Member 'UK40P02::_cooldownDuration' has a wrong offset!");
static_assert(offsetof(UK40P02, _detectionAngle) == 0x000500, "Member 'UK40P02::_detectionAngle' has a wrong offset!");
static_assert(offsetof(UK40P02, _maxTriggerDistance) == 0x000508, "Member 'UK40P02::_maxTriggerDistance' has a wrong offset!");
static_assert(offsetof(UK40P02, _K40P02RevealEffectClass) == 0x000538, "Member 'UK40P02::_K40P02RevealEffectClass' has a wrong offset!");

// Class TheK40.K40P03
// 0x0020 (0x0480 - 0x0460)
class UK40P03 final : public UPerk
{
public:
	TArray<class UChargeableComponent*>           _regressingExitGatesChargeableComponents;          // 0x0460(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                         _relativeDischargeRate[0x3];                       // 0x0470(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _regressionThreshold;                              // 0x047C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_AdjustExitGateChargeableRegressionRate(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40P03">();
	}
	static class UK40P03* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40P03>();
	}
};
static_assert(alignof(UK40P03) == 0x000008, "Wrong alignment on UK40P03");
static_assert(sizeof(UK40P03) == 0x000480, "Wrong size on UK40P03");
static_assert(offsetof(UK40P03, _regressingExitGatesChargeableComponents) == 0x000460, "Member 'UK40P03::_regressingExitGatesChargeableComponents' has a wrong offset!");
static_assert(offsetof(UK40P03, _relativeDischargeRate) == 0x000470, "Member 'UK40P03::_relativeDischargeRate' has a wrong offset!");
static_assert(offsetof(UK40P03, _regressionThreshold) == 0x00047C, "Member 'UK40P03::_regressionThreshold' has a wrong offset!");

// Class TheK40.K40Power
// 0x0000 (0x0610 - 0x0610)
class AK40Power final : public AKillerPower
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40Power">();
	}
	static class AK40Power* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40Power>();
	}
};
static_assert(alignof(AK40Power) == 0x000008, "Wrong alignment on AK40Power");
static_assert(sizeof(AK40Power) == 0x000610, "Wrong size on AK40Power");

// Class TheK40.K40Power_Addon_17
// 0x0078 (0x0378 - 0x0300)
class UK40Power_Addon_17 final : public UItemAddon
{
public:
	TSubclassOf<class UStatusEffect>              _survivorEffectClass;                              // 0x0300(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _killerEffectClass;                                // 0x0308(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFloatValueStrategy*                    _effectRange;                                      // 0x0310(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_318[0x60];                                     // 0x0318(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40Power_Addon_17">();
	}
	static class UK40Power_Addon_17* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40Power_Addon_17>();
	}
};
static_assert(alignof(UK40Power_Addon_17) == 0x000008, "Wrong alignment on UK40Power_Addon_17");
static_assert(sizeof(UK40Power_Addon_17) == 0x000378, "Wrong size on UK40Power_Addon_17");
static_assert(offsetof(UK40Power_Addon_17, _survivorEffectClass) == 0x000300, "Member 'UK40Power_Addon_17::_survivorEffectClass' has a wrong offset!");
static_assert(offsetof(UK40Power_Addon_17, _killerEffectClass) == 0x000308, "Member 'UK40Power_Addon_17::_killerEffectClass' has a wrong offset!");
static_assert(offsetof(UK40Power_Addon_17, _effectRange) == 0x000310, "Member 'UK40Power_Addon_17::_effectRange' has a wrong offset!");

// Class TheK40.K40Power_NearSurvivorWithAttachedProjectileAddon
// 0x0058 (0x0358 - 0x0300)
class UK40Power_NearSurvivorWithAttachedProjectileAddon : public UItemAddon
{
public:
	struct FGameplayTag                           _isNearSurvivorWithProjectileTag;                  // 0x0300(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFloatValueStrategy*                    _effectRange;                                      // 0x0310(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_318[0x40];                                     // 0x0318(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40Power_NearSurvivorWithAttachedProjectileAddon">();
	}
	static class UK40Power_NearSurvivorWithAttachedProjectileAddon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40Power_NearSurvivorWithAttachedProjectileAddon>();
	}
};
static_assert(alignof(UK40Power_NearSurvivorWithAttachedProjectileAddon) == 0x000008, "Wrong alignment on UK40Power_NearSurvivorWithAttachedProjectileAddon");
static_assert(sizeof(UK40Power_NearSurvivorWithAttachedProjectileAddon) == 0x000358, "Wrong size on UK40Power_NearSurvivorWithAttachedProjectileAddon");
static_assert(offsetof(UK40Power_NearSurvivorWithAttachedProjectileAddon, _isNearSurvivorWithProjectileTag) == 0x000300, "Member 'UK40Power_NearSurvivorWithAttachedProjectileAddon::_isNearSurvivorWithProjectileTag' has a wrong offset!");
static_assert(offsetof(UK40Power_NearSurvivorWithAttachedProjectileAddon, _effectRange) == 0x000310, "Member 'UK40Power_NearSurvivorWithAttachedProjectileAddon::_effectRange' has a wrong offset!");

// Class TheK40.K40Power_Addon_9
// 0x0058 (0x03B0 - 0x0358)
class UK40Power_Addon_9 final : public UK40Power_NearSurvivorWithAttachedProjectileAddon
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<TWeakObjectPtr<class ADBDPlayer>>        _survivorsSeeingAura;                              // 0x0360(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40Power_Addon_9">();
	}
	static class UK40Power_Addon_9* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40Power_Addon_9>();
	}
};
static_assert(alignof(UK40Power_Addon_9) == 0x000008, "Wrong alignment on UK40Power_Addon_9");
static_assert(sizeof(UK40Power_Addon_9) == 0x0003B0, "Wrong size on UK40Power_Addon_9");
static_assert(offsetof(UK40Power_Addon_9, _survivorsSeeingAura) == 0x000360, "Member 'UK40Power_Addon_9::_survivorsSeeingAura' has a wrong offset!");

// Class TheK40.K40Projectile
// 0x0090 (0x04B0 - 0x0420)
class AK40Projectile final : public AKillerProjectileAbilityProjectile
{
public:
	class USphereComponent*                       _nearMissDetector;                                 // 0x0420(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_428[0x88];                                     // 0x0428(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnTeleportedThroughDoor();
	void NearMissOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void NearMissOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);

	struct FLaunchInfo GetLastLaunchInfo() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40Projectile">();
	}
	static class AK40Projectile* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40Projectile>();
	}
};
static_assert(alignof(AK40Projectile) == 0x000008, "Wrong alignment on AK40Projectile");
static_assert(sizeof(AK40Projectile) == 0x0004B0, "Wrong size on AK40Projectile");
static_assert(offsetof(AK40Projectile, _nearMissDetector) == 0x000420, "Member 'AK40Projectile::_nearMissDetector' has a wrong offset!");

// Class TheK40.K40ProjectileAbility
// 0x0160 (0x0390 - 0x0230)
class UK40ProjectileAbility final : public UKillerProjectileAbility
{
public:
	class UFloatValueStrategy*                    _environmentAttachedProjectileAoEDuration;         // 0x0230(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UStatusEffect>              _blindnessProtectionStatusEffectClass;             // 0x0238(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class UStatusEffect>>      _attachedProjectileSurvivorEffectClassesToSpawn;   // 0x0240(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInteractionDefinition>     _removeAttachedProjectileSelfInteractionClass;     // 0x0250(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInteractionDefinition>     _removeAttachedProjectileOtherInteractionClass;    // 0x0258(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInteractionDefinition>     _pickupAttachedProjectileInteractionClass;         // 0x0260(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInteractionDefinition>     _recallProjectileInteractionClass;                 // 0x0268(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AK40EnvironmentAttachedProjectile> _environmentAttachedProjectileClass;        // 0x0270(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFloatValueStrategy*                    _attachedTerrorRadiusEmitterRadius;                // 0x0278(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AK40EnvironmentAttachedProjectile> _survivorAttachedProjectileClass;           // 0x0280(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractionAttacherComponent*          _survivorSelfAttacherComponent;                    // 0x0288(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractionAttacherComponent*          _survivorOtherAttacherComponent;                   // 0x0290(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_298[0x10];                                     // 0x0298(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 _actorWithAttachedProjectile;                      // 0x02A8(0x0008)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isAttachedProjectileSurvivorInRange;              // 0x02B0(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B1[0xCF];                                     // 0x02B1(0x00CF)(Fixing Size After Last Property [ Dumper-7 ])
	class ULocalActorPoolComponent*               _environmentAttachedProjectilePool;                // 0x0380(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AK40AttachedTerrorRadius*               _attachedTerrorRadius;                             // 0x0388(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Multicast_Cheat_UseProjectileTeleportThroughDoor(const bool isUsingProjectileTeleportThroughDoor);
	void Multicast_Cheat_UseProjectileTerrorRadius(const bool isUsingProjectileTerrorRadius);
	void OnRep_AttachedProjectileActor(class AActor* oldActorWithAttachedProjectile);
	void OnRep_SurvivorOtherAttacherComponent();
	void OnRep_SurvivorSelfAttacherComponent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40ProjectileAbility">();
	}
	static class UK40ProjectileAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40ProjectileAbility>();
	}
};
static_assert(alignof(UK40ProjectileAbility) == 0x000008, "Wrong alignment on UK40ProjectileAbility");
static_assert(sizeof(UK40ProjectileAbility) == 0x000390, "Wrong size on UK40ProjectileAbility");
static_assert(offsetof(UK40ProjectileAbility, _environmentAttachedProjectileAoEDuration) == 0x000230, "Member 'UK40ProjectileAbility::_environmentAttachedProjectileAoEDuration' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _blindnessProtectionStatusEffectClass) == 0x000238, "Member 'UK40ProjectileAbility::_blindnessProtectionStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _attachedProjectileSurvivorEffectClassesToSpawn) == 0x000240, "Member 'UK40ProjectileAbility::_attachedProjectileSurvivorEffectClassesToSpawn' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _removeAttachedProjectileSelfInteractionClass) == 0x000250, "Member 'UK40ProjectileAbility::_removeAttachedProjectileSelfInteractionClass' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _removeAttachedProjectileOtherInteractionClass) == 0x000258, "Member 'UK40ProjectileAbility::_removeAttachedProjectileOtherInteractionClass' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _pickupAttachedProjectileInteractionClass) == 0x000260, "Member 'UK40ProjectileAbility::_pickupAttachedProjectileInteractionClass' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _recallProjectileInteractionClass) == 0x000268, "Member 'UK40ProjectileAbility::_recallProjectileInteractionClass' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _environmentAttachedProjectileClass) == 0x000270, "Member 'UK40ProjectileAbility::_environmentAttachedProjectileClass' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _attachedTerrorRadiusEmitterRadius) == 0x000278, "Member 'UK40ProjectileAbility::_attachedTerrorRadiusEmitterRadius' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _survivorAttachedProjectileClass) == 0x000280, "Member 'UK40ProjectileAbility::_survivorAttachedProjectileClass' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _survivorSelfAttacherComponent) == 0x000288, "Member 'UK40ProjectileAbility::_survivorSelfAttacherComponent' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _survivorOtherAttacherComponent) == 0x000290, "Member 'UK40ProjectileAbility::_survivorOtherAttacherComponent' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _actorWithAttachedProjectile) == 0x0002A8, "Member 'UK40ProjectileAbility::_actorWithAttachedProjectile' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _isAttachedProjectileSurvivorInRange) == 0x0002B0, "Member 'UK40ProjectileAbility::_isAttachedProjectileSurvivorInRange' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _environmentAttachedProjectilePool) == 0x000380, "Member 'UK40ProjectileAbility::_environmentAttachedProjectilePool' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbility, _attachedTerrorRadius) == 0x000388, "Member 'UK40ProjectileAbility::_attachedTerrorRadius' has a wrong offset!");

// Class TheK40.K40ProjectileAbilityData
// 0x0050 (0x0158 - 0x0108)
class UK40ProjectileAbilityData final : public UKillerProjectileAbilityData
{
public:
	float                                         _removeAttachedProjectileSelfDuration;             // 0x0108(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _removeAttachedProjectileOtherDuration;            // 0x010C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _killerAttachedProjectileGrabDistance;             // 0x0110(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maxSpeedWithoutAmmo;                              // 0x0114(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _killerAttachedProjectileFacingTolerance;          // 0x0118(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _initialAreaOfEffectRadius;                        // 0x011C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _finalAreaOfEffectRadius;                          // 0x0120(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _areaOfEffectDuration;                             // 0x0124(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _areaOfEffectWarningDuration;                      // 0x0128(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _environmentAutomaticRetrievalDuration;            // 0x012C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _AOEExpansionDuration;                             // 0x0130(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _AOEShrinkingDuration;                             // 0x0134(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _doorAutomaticRetrievalDuration;                   // 0x0138(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _disabledDoorLingerDuration;                       // 0x013C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _nearMissDistance;                                 // 0x0140(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _nearMissKillerInstinctDuration;                   // 0x0144(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _recallInteractionDuration;                        // 0x0148(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _killerProjectileSurvivorHitCooldown;              // 0x014C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _killerProjectileMissCooldown;                     // 0x0150(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _distanceNeededForScoreDisableDoorWithSurvivorNearby; // 0x0154(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40ProjectileAbilityData">();
	}
	static class UK40ProjectileAbilityData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40ProjectileAbilityData>();
	}
};
static_assert(alignof(UK40ProjectileAbilityData) == 0x000008, "Wrong alignment on UK40ProjectileAbilityData");
static_assert(sizeof(UK40ProjectileAbilityData) == 0x000158, "Wrong size on UK40ProjectileAbilityData");
static_assert(offsetof(UK40ProjectileAbilityData, _removeAttachedProjectileSelfDuration) == 0x000108, "Member 'UK40ProjectileAbilityData::_removeAttachedProjectileSelfDuration' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _removeAttachedProjectileOtherDuration) == 0x00010C, "Member 'UK40ProjectileAbilityData::_removeAttachedProjectileOtherDuration' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _killerAttachedProjectileGrabDistance) == 0x000110, "Member 'UK40ProjectileAbilityData::_killerAttachedProjectileGrabDistance' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _maxSpeedWithoutAmmo) == 0x000114, "Member 'UK40ProjectileAbilityData::_maxSpeedWithoutAmmo' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _killerAttachedProjectileFacingTolerance) == 0x000118, "Member 'UK40ProjectileAbilityData::_killerAttachedProjectileFacingTolerance' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _initialAreaOfEffectRadius) == 0x00011C, "Member 'UK40ProjectileAbilityData::_initialAreaOfEffectRadius' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _finalAreaOfEffectRadius) == 0x000120, "Member 'UK40ProjectileAbilityData::_finalAreaOfEffectRadius' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _areaOfEffectDuration) == 0x000124, "Member 'UK40ProjectileAbilityData::_areaOfEffectDuration' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _areaOfEffectWarningDuration) == 0x000128, "Member 'UK40ProjectileAbilityData::_areaOfEffectWarningDuration' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _environmentAutomaticRetrievalDuration) == 0x00012C, "Member 'UK40ProjectileAbilityData::_environmentAutomaticRetrievalDuration' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _AOEExpansionDuration) == 0x000130, "Member 'UK40ProjectileAbilityData::_AOEExpansionDuration' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _AOEShrinkingDuration) == 0x000134, "Member 'UK40ProjectileAbilityData::_AOEShrinkingDuration' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _doorAutomaticRetrievalDuration) == 0x000138, "Member 'UK40ProjectileAbilityData::_doorAutomaticRetrievalDuration' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _disabledDoorLingerDuration) == 0x00013C, "Member 'UK40ProjectileAbilityData::_disabledDoorLingerDuration' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _nearMissDistance) == 0x000140, "Member 'UK40ProjectileAbilityData::_nearMissDistance' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _nearMissKillerInstinctDuration) == 0x000144, "Member 'UK40ProjectileAbilityData::_nearMissKillerInstinctDuration' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _recallInteractionDuration) == 0x000148, "Member 'UK40ProjectileAbilityData::_recallInteractionDuration' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _killerProjectileSurvivorHitCooldown) == 0x00014C, "Member 'UK40ProjectileAbilityData::_killerProjectileSurvivorHitCooldown' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _killerProjectileMissCooldown) == 0x000150, "Member 'UK40ProjectileAbilityData::_killerProjectileMissCooldown' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAbilityData, _distanceNeededForScoreDisableDoorWithSurvivorNearby) == 0x000154, "Member 'UK40ProjectileAbilityData::_distanceNeededForScoreDisableDoorWithSurvivorNearby' has a wrong offset!");

// Class TheK40.K40ProjectileAbilityGrabSecondaryWidgetComponent
// 0x0000 (0x00D0 - 0x00D0)
class UK40ProjectileAbilityGrabSecondaryWidgetComponent final : public UPowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40ProjectileAbilityGrabSecondaryWidgetComponent">();
	}
	static class UK40ProjectileAbilityGrabSecondaryWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40ProjectileAbilityGrabSecondaryWidgetComponent>();
	}
};
static_assert(alignof(UK40ProjectileAbilityGrabSecondaryWidgetComponent) == 0x000008, "Wrong alignment on UK40ProjectileAbilityGrabSecondaryWidgetComponent");
static_assert(sizeof(UK40ProjectileAbilityGrabSecondaryWidgetComponent) == 0x0000D0, "Wrong size on UK40ProjectileAbilityGrabSecondaryWidgetComponent");

// Class TheK40.K40ProjectileAbilityKillerCosmeticHelperActor
// 0x0038 (0x0330 - 0x02F8)
class AK40ProjectileAbilityKillerCosmeticHelperActor final : public AProjectileAbilityKillerCosmeticHelperActor
{
public:
	uint8                                         Pad_2F8[0x38];                                     // 0x02F8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_IsProjectileGrabbing(const bool isProjectileGrabbing);
	void Cosmetic_OnAxeGrabAvailable_Start(class ASurvivor* attachedProjectileSurvivor);
	void Cosmetic_OnAxeGrabAvailable_Stop(class ASurvivor* attachedProjectileSurvivor);
	void Cosmetic_OnProjectileRecalledEnd();
	void Cosmetic_OnProjectileRecalledStart();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40ProjectileAbilityKillerCosmeticHelperActor">();
	}
	static class AK40ProjectileAbilityKillerCosmeticHelperActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40ProjectileAbilityKillerCosmeticHelperActor>();
	}
};
static_assert(alignof(AK40ProjectileAbilityKillerCosmeticHelperActor) == 0x000008, "Wrong alignment on AK40ProjectileAbilityKillerCosmeticHelperActor");
static_assert(sizeof(AK40ProjectileAbilityKillerCosmeticHelperActor) == 0x000330, "Wrong size on AK40ProjectileAbilityKillerCosmeticHelperActor");

// Class TheK40.K40ProjectileAbilityMainWidgetComponent
// 0x0000 (0x00D0 - 0x00D0)
class UK40ProjectileAbilityMainWidgetComponent final : public UPowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40ProjectileAbilityMainWidgetComponent">();
	}
	static class UK40ProjectileAbilityMainWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40ProjectileAbilityMainWidgetComponent>();
	}
};
static_assert(alignof(UK40ProjectileAbilityMainWidgetComponent) == 0x000008, "Wrong alignment on UK40ProjectileAbilityMainWidgetComponent");
static_assert(sizeof(UK40ProjectileAbilityMainWidgetComponent) == 0x0000D0, "Wrong size on UK40ProjectileAbilityMainWidgetComponent");

// Class TheK40.K40ProjectileAbilitySecondaryWidgetComponent
// 0x0000 (0x00D0 - 0x00D0)
class UK40ProjectileAbilitySecondaryWidgetComponent final : public UPowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40ProjectileAbilitySecondaryWidgetComponent">();
	}
	static class UK40ProjectileAbilitySecondaryWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40ProjectileAbilitySecondaryWidgetComponent>();
	}
};
static_assert(alignof(UK40ProjectileAbilitySecondaryWidgetComponent) == 0x000008, "Wrong alignment on UK40ProjectileAbilitySecondaryWidgetComponent");
static_assert(sizeof(UK40ProjectileAbilitySecondaryWidgetComponent) == 0x0000D0, "Wrong size on UK40ProjectileAbilitySecondaryWidgetComponent");

// Class TheK40.K40ProjectileAbilitySubAnimInstance
// 0x0000 (0x0600 - 0x0600)
class UK40ProjectileAbilitySubAnimInstance final : public UKillerProjectileAbilitySubAnimInstance
{
public:
	bool                                          _isRecallingProjectile;                            // 0x05F8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5F9[0x7];                                      // 0x05F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40ProjectileAbilitySubAnimInstance">();
	}
	static class UK40ProjectileAbilitySubAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40ProjectileAbilitySubAnimInstance>();
	}
};
static_assert(alignof(UK40ProjectileAbilitySubAnimInstance) == 0x000010, "Wrong alignment on UK40ProjectileAbilitySubAnimInstance");
static_assert(sizeof(UK40ProjectileAbilitySubAnimInstance) == 0x000600, "Wrong size on UK40ProjectileAbilitySubAnimInstance");
static_assert(offsetof(UK40ProjectileAbilitySubAnimInstance, _isRecallingProjectile) == 0x0005F8, "Member 'UK40ProjectileAbilitySubAnimInstance::_isRecallingProjectile' has a wrong offset!");

// Class TheK40.K40ProjectileAbilitySurvivorCosmeticHelperActor
// 0x0078 (0x03D0 - 0x0358)
class AK40ProjectileAbilitySurvivorCosmeticHelperActor final : public ASurvivorCosmeticHelperActor
{
public:
	uint8                                         Pad_358[0x78];                                     // 0x0358(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_IsBeingProjectileGrabbed(const bool isBeingProjectileGrabbed);
	void Cosmetic_OnProjectileAttachmentChanged(const bool IsAttached);
	void Cosmetic_OnSurvivorHidingChanged(const bool IsHiding);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40ProjectileAbilitySurvivorCosmeticHelperActor">();
	}
	static class AK40ProjectileAbilitySurvivorCosmeticHelperActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40ProjectileAbilitySurvivorCosmeticHelperActor>();
	}
};
static_assert(alignof(AK40ProjectileAbilitySurvivorCosmeticHelperActor) == 0x000008, "Wrong alignment on AK40ProjectileAbilitySurvivorCosmeticHelperActor");
static_assert(sizeof(AK40ProjectileAbilitySurvivorCosmeticHelperActor) == 0x0003D0, "Wrong size on AK40ProjectileAbilitySurvivorCosmeticHelperActor");

// Class TheK40.K40ProjectileAccessoryAnimInstance
// 0x0010 (0x03B0 - 0x03A0)
class UK40ProjectileAccessoryAnimInstance final : public USurvivorDynamicAccessoryAnimInstance
{
public:
	bool                                          _isBeingRemovedBySelf;                             // 0x03A0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isBeingRemovedByOther;                            // 0x03A1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isBeingProjectileGrabbed;                         // 0x03A2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _wasRemovedBySelf;                                 // 0x03A3(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _wasRemovedByOtherSurvivor;                        // 0x03A4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _wasRecalledByKiller;                              // 0x03A5(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A6[0xA];                                      // 0x03A6(0x000A)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40ProjectileAccessoryAnimInstance">();
	}
	static class UK40ProjectileAccessoryAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40ProjectileAccessoryAnimInstance>();
	}
};
static_assert(alignof(UK40ProjectileAccessoryAnimInstance) == 0x000010, "Wrong alignment on UK40ProjectileAccessoryAnimInstance");
static_assert(sizeof(UK40ProjectileAccessoryAnimInstance) == 0x0003B0, "Wrong size on UK40ProjectileAccessoryAnimInstance");
static_assert(offsetof(UK40ProjectileAccessoryAnimInstance, _isBeingRemovedBySelf) == 0x0003A0, "Member 'UK40ProjectileAccessoryAnimInstance::_isBeingRemovedBySelf' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAccessoryAnimInstance, _isBeingRemovedByOther) == 0x0003A1, "Member 'UK40ProjectileAccessoryAnimInstance::_isBeingRemovedByOther' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAccessoryAnimInstance, _isBeingProjectileGrabbed) == 0x0003A2, "Member 'UK40ProjectileAccessoryAnimInstance::_isBeingProjectileGrabbed' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAccessoryAnimInstance, _wasRemovedBySelf) == 0x0003A3, "Member 'UK40ProjectileAccessoryAnimInstance::_wasRemovedBySelf' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAccessoryAnimInstance, _wasRemovedByOtherSurvivor) == 0x0003A4, "Member 'UK40ProjectileAccessoryAnimInstance::_wasRemovedByOtherSurvivor' has a wrong offset!");
static_assert(offsetof(UK40ProjectileAccessoryAnimInstance, _wasRecalledByKiller) == 0x0003A5, "Member 'UK40ProjectileAccessoryAnimInstance::_wasRecalledByKiller' has a wrong offset!");

// Class TheK40.K40ProjectileLauncher
// 0x0000 (0x01A8 - 0x01A8)
class UK40ProjectileLauncher final : public UKillerProjectileAbilityLauncher
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40ProjectileLauncher">();
	}
	static class UK40ProjectileLauncher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40ProjectileLauncher>();
	}
};
static_assert(alignof(UK40ProjectileLauncher) == 0x000008, "Wrong alignment on UK40ProjectileLauncher");
static_assert(sizeof(UK40ProjectileLauncher) == 0x0001A8, "Wrong size on UK40ProjectileLauncher");

// Class TheK40.K40ProjectileOutlineStrategy
// 0x0000 (0x0100 - 0x0100)
class UK40ProjectileOutlineStrategy final : public UDefaultOutlineUpdateStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40ProjectileOutlineStrategy">();
	}
	static class UK40ProjectileOutlineStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40ProjectileOutlineStrategy>();
	}
};
static_assert(alignof(UK40ProjectileOutlineStrategy) == 0x000008, "Wrong alignment on UK40ProjectileOutlineStrategy");
static_assert(sizeof(UK40ProjectileOutlineStrategy) == 0x000100, "Wrong size on UK40ProjectileOutlineStrategy");

// Class TheK40.K40RecallProjectileInteraction
// 0x0010 (0x0780 - 0x0770)
class UK40RecallProjectileInteraction final : public UInteractionDefinition
{
public:
	uint8                                         Pad_768[0x18];                                     // 0x0768(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40RecallProjectileInteraction">();
	}
	static class UK40RecallProjectileInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40RecallProjectileInteraction>();
	}
};
static_assert(alignof(UK40RecallProjectileInteraction) == 0x000010, "Wrong alignment on UK40RecallProjectileInteraction");
static_assert(sizeof(UK40RecallProjectileInteraction) == 0x000780, "Wrong size on UK40RecallProjectileInteraction");

// Class TheK40.K40SecurityCamera
// 0x0100 (0x03A0 - 0x02A0)
class AK40SecurityCamera final : public AActor
{
public:
	uint8                                         Pad_2A0[0x38];                                     // 0x02A0(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   _cameraStaticMeshComponent;                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        _rotationComponent;                                // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _currentCameraAngularVelocity;                     // 0x02E8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isRotatingWithNonZeroSpeed;                       // 0x02EC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _maxPitchUp;                                       // 0x02F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _maxPitchDown;                                     // 0x02F4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _rotationInterpolationSpeed;                       // 0x02F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FYawAndPitchRotator_NetQuantize16      _replicatedCameraRotation;                         // 0x0300(0x0018)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADBDPlayer>              _currentlyControllingPlayer;                       // 0x0318(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ADBDPlayer>              _spectatorLinkedPlayer;                            // 0x0320(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AK40SecurityDoor>        _connectedSecurityDoor;                            // 0x0328(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ADBDPlayer>>      _authority_cameraControllerQueue;                  // 0x0330(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_340[0x60];                                     // 0x0340(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnCameraRotationStart();
	void Cosmetic_OnCameraRotationStop();
	void Cosmetic_OnCameraRotationUpdated();
	void Cosmetic_OnCameraStartTransition();
	void Cosmetic_OnCameraStateChanged(const bool IsAvailable);
	void Cosmetic_OnControllingPlayerChanged();
	void Cosmetic_SelectCameraForTeleport(class ADBDPlayer* viewingPlayer);
	void Cosmetic_SwitchViewedCamera(class ADBDPlayer* viewingPlayer);
	class ADBDPlayer* GetCurrentlyControllingPlayer();
	void OnRep_CurrentlyControllingPlayer();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityCamera">();
	}
	static class AK40SecurityCamera* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40SecurityCamera>();
	}
};
static_assert(alignof(AK40SecurityCamera) == 0x000008, "Wrong alignment on AK40SecurityCamera");
static_assert(sizeof(AK40SecurityCamera) == 0x0003A0, "Wrong size on AK40SecurityCamera");
static_assert(offsetof(AK40SecurityCamera, _cameraStaticMeshComponent) == 0x0002D8, "Member 'AK40SecurityCamera::_cameraStaticMeshComponent' has a wrong offset!");
static_assert(offsetof(AK40SecurityCamera, _rotationComponent) == 0x0002E0, "Member 'AK40SecurityCamera::_rotationComponent' has a wrong offset!");
static_assert(offsetof(AK40SecurityCamera, _currentCameraAngularVelocity) == 0x0002E8, "Member 'AK40SecurityCamera::_currentCameraAngularVelocity' has a wrong offset!");
static_assert(offsetof(AK40SecurityCamera, _isRotatingWithNonZeroSpeed) == 0x0002EC, "Member 'AK40SecurityCamera::_isRotatingWithNonZeroSpeed' has a wrong offset!");
static_assert(offsetof(AK40SecurityCamera, _maxPitchUp) == 0x0002F0, "Member 'AK40SecurityCamera::_maxPitchUp' has a wrong offset!");
static_assert(offsetof(AK40SecurityCamera, _maxPitchDown) == 0x0002F4, "Member 'AK40SecurityCamera::_maxPitchDown' has a wrong offset!");
static_assert(offsetof(AK40SecurityCamera, _rotationInterpolationSpeed) == 0x0002F8, "Member 'AK40SecurityCamera::_rotationInterpolationSpeed' has a wrong offset!");
static_assert(offsetof(AK40SecurityCamera, _replicatedCameraRotation) == 0x000300, "Member 'AK40SecurityCamera::_replicatedCameraRotation' has a wrong offset!");
static_assert(offsetof(AK40SecurityCamera, _currentlyControllingPlayer) == 0x000318, "Member 'AK40SecurityCamera::_currentlyControllingPlayer' has a wrong offset!");
static_assert(offsetof(AK40SecurityCamera, _spectatorLinkedPlayer) == 0x000320, "Member 'AK40SecurityCamera::_spectatorLinkedPlayer' has a wrong offset!");
static_assert(offsetof(AK40SecurityCamera, _connectedSecurityDoor) == 0x000328, "Member 'AK40SecurityCamera::_connectedSecurityDoor' has a wrong offset!");
static_assert(offsetof(AK40SecurityCamera, _authority_cameraControllerQueue) == 0x000330, "Member 'AK40SecurityCamera::_authority_cameraControllerQueue' has a wrong offset!");

// Class TheK40.K40SecurityCameraInteraction
// 0x0140 (0x08B0 - 0x0770)
class UK40SecurityCameraInteraction final : public UInteractionDefinition
{
public:
	uint8                                         Pad_768[0x3C];                                     // 0x0768(0x003C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _cameraBlendTime;                                  // 0x07A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7A8[0x8];                                      // 0x07A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AK40SecurityCamera>      _currentlyViewedCamera;                            // 0x07B0(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7B8[0x78];                                     // 0x07B8(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ADBDPlayer>              _interactingPlayer;                                // 0x0830(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_838[0x30];                                     // 0x0838(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _inputAbsoluteTolerance;                           // 0x0868(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _inputAbsoluteResetTolerance;                      // 0x086C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_870[0x40];                                     // 0x0870(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_CurrentlyViewCamera(TWeakObjectPtr<class AK40SecurityCamera> oldViewedCamera);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityCameraInteraction">();
	}
	static class UK40SecurityCameraInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityCameraInteraction>();
	}
};
static_assert(alignof(UK40SecurityCameraInteraction) == 0x000010, "Wrong alignment on UK40SecurityCameraInteraction");
static_assert(sizeof(UK40SecurityCameraInteraction) == 0x0008B0, "Wrong size on UK40SecurityCameraInteraction");
static_assert(offsetof(UK40SecurityCameraInteraction, _cameraBlendTime) == 0x0007A4, "Member 'UK40SecurityCameraInteraction::_cameraBlendTime' has a wrong offset!");
static_assert(offsetof(UK40SecurityCameraInteraction, _currentlyViewedCamera) == 0x0007B0, "Member 'UK40SecurityCameraInteraction::_currentlyViewedCamera' has a wrong offset!");
static_assert(offsetof(UK40SecurityCameraInteraction, _interactingPlayer) == 0x000830, "Member 'UK40SecurityCameraInteraction::_interactingPlayer' has a wrong offset!");
static_assert(offsetof(UK40SecurityCameraInteraction, _inputAbsoluteTolerance) == 0x000868, "Member 'UK40SecurityCameraInteraction::_inputAbsoluteTolerance' has a wrong offset!");
static_assert(offsetof(UK40SecurityCameraInteraction, _inputAbsoluteResetTolerance) == 0x00086C, "Member 'UK40SecurityCameraInteraction::_inputAbsoluteResetTolerance' has a wrong offset!");

// Class TheK40.K40SecurityCameraKillerRevealComponent
// 0x00E0 (0x0198 - 0x00B8)
class UK40SecurityCameraKillerRevealComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void()>              Cosmetic_OnPlayerStartRevealing;                   // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void()>              Cosmetic_OnPlayerEndRevealing;                     // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AK40SecurityCamera>      _owningCamera;                                     // 0x00D8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AKiller>                 _cachedKiller;                                     // 0x00E0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ADBDPlayer>              _lastControllingPlayer;                            // 0x00E8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isRevealingKiller;                                // 0x00F0(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F1[0xA7];                                      // 0x00F1(0x00A7)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnControllingPlayerChanged(class ADBDPlayer* Player);
	void OnOwningCameraConnectedDoorSet();
	void OnRep_IsRevealingKiller(bool oldIsRevealingKiller);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityCameraKillerRevealComponent">();
	}
	static class UK40SecurityCameraKillerRevealComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityCameraKillerRevealComponent>();
	}
};
static_assert(alignof(UK40SecurityCameraKillerRevealComponent) == 0x000008, "Wrong alignment on UK40SecurityCameraKillerRevealComponent");
static_assert(sizeof(UK40SecurityCameraKillerRevealComponent) == 0x000198, "Wrong size on UK40SecurityCameraKillerRevealComponent");
static_assert(offsetof(UK40SecurityCameraKillerRevealComponent, Cosmetic_OnPlayerStartRevealing) == 0x0000B8, "Member 'UK40SecurityCameraKillerRevealComponent::Cosmetic_OnPlayerStartRevealing' has a wrong offset!");
static_assert(offsetof(UK40SecurityCameraKillerRevealComponent, Cosmetic_OnPlayerEndRevealing) == 0x0000C8, "Member 'UK40SecurityCameraKillerRevealComponent::Cosmetic_OnPlayerEndRevealing' has a wrong offset!");
static_assert(offsetof(UK40SecurityCameraKillerRevealComponent, _owningCamera) == 0x0000D8, "Member 'UK40SecurityCameraKillerRevealComponent::_owningCamera' has a wrong offset!");
static_assert(offsetof(UK40SecurityCameraKillerRevealComponent, _cachedKiller) == 0x0000E0, "Member 'UK40SecurityCameraKillerRevealComponent::_cachedKiller' has a wrong offset!");
static_assert(offsetof(UK40SecurityCameraKillerRevealComponent, _lastControllingPlayer) == 0x0000E8, "Member 'UK40SecurityCameraKillerRevealComponent::_lastControllingPlayer' has a wrong offset!");
static_assert(offsetof(UK40SecurityCameraKillerRevealComponent, _isRevealingKiller) == 0x0000F0, "Member 'UK40SecurityCameraKillerRevealComponent::_isRevealingKiller' has a wrong offset!");

// Class TheK40.K40SecurityCameraSurvivorComponent
// 0x0070 (0x0128 - 0x00B8)
class UK40SecurityCameraSurvivorComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x30];                                      // 0x00B8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _cameraRotationNetUpdateFrequency;                 // 0x00E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EC[0x3C];                                      // 0x00EC(0x003C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Server_OnCameraDirectionInputPressed(const EDirectionalInputKey directionalInput);
	void Server_SetCameraActorRotation(const struct FYawAndPitchRotator_NetQuantize16& newActorRotation);
	void Server_SetCameraToTargetByDoorID(const uint8 doorID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityCameraSurvivorComponent">();
	}
	static class UK40SecurityCameraSurvivorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityCameraSurvivorComponent>();
	}
};
static_assert(alignof(UK40SecurityCameraSurvivorComponent) == 0x000008, "Wrong alignment on UK40SecurityCameraSurvivorComponent");
static_assert(sizeof(UK40SecurityCameraSurvivorComponent) == 0x000128, "Wrong size on UK40SecurityCameraSurvivorComponent");
static_assert(offsetof(UK40SecurityCameraSurvivorComponent, _cameraRotationNetUpdateFrequency) == 0x0000E8, "Member 'UK40SecurityCameraSurvivorComponent::_cameraRotationNetUpdateFrequency' has a wrong offset!");

// Class TheK40.K40SecurityCameraSurvivorTryingToRevealKiller
// 0x0020 (0x03B8 - 0x0398)
class UK40SecurityCameraSurvivorTryingToRevealKiller final : public UStatusEffect
{
public:
	struct FLinearColor                           _outlineColor;                                     // 0x0398(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           _outlineOverrideTag;                               // 0x03A8(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isOutlineAlwaysVisible;                           // 0x03B4(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isUnaffectedByFadeout;                            // 0x03B5(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3B6[0x2];                                      // 0x03B6(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityCameraSurvivorTryingToRevealKiller">();
	}
	static class UK40SecurityCameraSurvivorTryingToRevealKiller* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityCameraSurvivorTryingToRevealKiller>();
	}
};
static_assert(alignof(UK40SecurityCameraSurvivorTryingToRevealKiller) == 0x000008, "Wrong alignment on UK40SecurityCameraSurvivorTryingToRevealKiller");
static_assert(sizeof(UK40SecurityCameraSurvivorTryingToRevealKiller) == 0x0003B8, "Wrong size on UK40SecurityCameraSurvivorTryingToRevealKiller");
static_assert(offsetof(UK40SecurityCameraSurvivorTryingToRevealKiller, _outlineColor) == 0x000398, "Member 'UK40SecurityCameraSurvivorTryingToRevealKiller::_outlineColor' has a wrong offset!");
static_assert(offsetof(UK40SecurityCameraSurvivorTryingToRevealKiller, _outlineOverrideTag) == 0x0003A8, "Member 'UK40SecurityCameraSurvivorTryingToRevealKiller::_outlineOverrideTag' has a wrong offset!");
static_assert(offsetof(UK40SecurityCameraSurvivorTryingToRevealKiller, _isOutlineAlwaysVisible) == 0x0003B4, "Member 'UK40SecurityCameraSurvivorTryingToRevealKiller::_isOutlineAlwaysVisible' has a wrong offset!");
static_assert(offsetof(UK40SecurityCameraSurvivorTryingToRevealKiller, _isUnaffectedByFadeout) == 0x0003B5, "Member 'UK40SecurityCameraSurvivorTryingToRevealKiller::_isUnaffectedByFadeout' has a wrong offset!");

// Class TheK40.K40SecurityCorridor
// 0x0070 (0x0310 - 0x02A0)
class AK40SecurityCorridor final : public AActor
{
public:
	bool                                          _isCorridorSequencePlaying;                        // 0x02A0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isJumpscarePlaying;                               // 0x02A1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A2[0xA];                                      // 0x02A2(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _worldElementsVisibility;                          // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _internalElementsVisibility;                       // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2AE[0x22];                                     // 0x02AE(0x0022)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AK40SecurityCorridorSurvivorCameraDolly> _survivorCameraDollyClassToSpawn;     // 0x02D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AK40SecurityCorridorKillerCameraDolly> _killerCameraDollyClassToSpawn;         // 0x02D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AK40SecurityCorridorSurvivorCameraDolly* _survivorCameraDolly;                             // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AK40SecurityCorridorKillerCameraDolly*  _killerCameraDolly;                                // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAmbianceManagerDataAsset*              _officeAmbiance;                                   // 0x02F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK40SecuritySystemAbility*              _owningAbility;                                    // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   _lightingThemeName;                                // 0x0300(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StartCorridorSequence(class ASurvivor* Survivor);
	void StartKillerCorridorSequence(class AKiller* Killer);
	void StopCorridorSequence();
	void StopJumpScareAsKiller();
	void StopKillerCorridorSequence();
	void TriggerJumpScare();
	void TriggerJumpScareAsKiller();

	class AK40SecurityCorridorSurvivorCameraDolly* GetSurvivorCameraDolly() const;
	bool IsCorridorSequencePlaying() const;
	bool IsJumpscarePlaying() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityCorridor">();
	}
	static class AK40SecurityCorridor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40SecurityCorridor>();
	}
};
static_assert(alignof(AK40SecurityCorridor) == 0x000008, "Wrong alignment on AK40SecurityCorridor");
static_assert(sizeof(AK40SecurityCorridor) == 0x000310, "Wrong size on AK40SecurityCorridor");
static_assert(offsetof(AK40SecurityCorridor, _isCorridorSequencePlaying) == 0x0002A0, "Member 'AK40SecurityCorridor::_isCorridorSequencePlaying' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridor, _isJumpscarePlaying) == 0x0002A1, "Member 'AK40SecurityCorridor::_isJumpscarePlaying' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridor, _worldElementsVisibility) == 0x0002AC, "Member 'AK40SecurityCorridor::_worldElementsVisibility' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridor, _internalElementsVisibility) == 0x0002AD, "Member 'AK40SecurityCorridor::_internalElementsVisibility' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridor, _survivorCameraDollyClassToSpawn) == 0x0002D0, "Member 'AK40SecurityCorridor::_survivorCameraDollyClassToSpawn' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridor, _killerCameraDollyClassToSpawn) == 0x0002D8, "Member 'AK40SecurityCorridor::_killerCameraDollyClassToSpawn' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridor, _survivorCameraDolly) == 0x0002E0, "Member 'AK40SecurityCorridor::_survivorCameraDolly' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridor, _killerCameraDolly) == 0x0002E8, "Member 'AK40SecurityCorridor::_killerCameraDolly' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridor, _officeAmbiance) == 0x0002F0, "Member 'AK40SecurityCorridor::_officeAmbiance' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridor, _owningAbility) == 0x0002F8, "Member 'AK40SecurityCorridor::_owningAbility' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridor, _lightingThemeName) == 0x000300, "Member 'AK40SecurityCorridor::_lightingThemeName' has a wrong offset!");

// Class TheK40.K40SecurityCorridorCameraDolly
// 0x0028 (0x02C8 - 0x02A0)
class AK40SecurityCorridorCameraDolly : public AActor
{
public:
	uint8                                         Pad_2A0[0x8];                                      // 0x02A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAnimInstance>              _killerHuskAnimInstanceClass;                      // 0x02A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AK40SecurityCorridorHusk*               _killerHusk;                                       // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             _linkedPlayer;                                     // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Cosmetic_OnKillerHuskCreated();
	void EndCorridorSequence();
	void StartCorridorSequence(class ADBDPlayer* Player);

	class AK40SecurityCorridorHusk* GetKillerHusk() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityCorridorCameraDolly">();
	}
	static class AK40SecurityCorridorCameraDolly* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40SecurityCorridorCameraDolly>();
	}
};
static_assert(alignof(AK40SecurityCorridorCameraDolly) == 0x000008, "Wrong alignment on AK40SecurityCorridorCameraDolly");
static_assert(sizeof(AK40SecurityCorridorCameraDolly) == 0x0002C8, "Wrong size on AK40SecurityCorridorCameraDolly");
static_assert(offsetof(AK40SecurityCorridorCameraDolly, _killerHuskAnimInstanceClass) == 0x0002A8, "Member 'AK40SecurityCorridorCameraDolly::_killerHuskAnimInstanceClass' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridorCameraDolly, _killerHusk) == 0x0002B0, "Member 'AK40SecurityCorridorCameraDolly::_killerHusk' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridorCameraDolly, _linkedPlayer) == 0x0002C0, "Member 'AK40SecurityCorridorCameraDolly::_linkedPlayer' has a wrong offset!");

// Class TheK40.K40SecurityCorridorHusk
// 0x0048 (0x0330 - 0x02E8)
class AK40SecurityCorridorHusk final : public ABaseHusk
{
public:
	class UMontagePlayer*                         _montagePlayer;                                    // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F0[0x40];                                     // 0x02F0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UAkComponent* GetHuskAudioComponent();
	class UAnimMontage* PlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate, bool isFollower);

	class UCustomizedAudioComponent* GetKillerCustomizedAudioComponent() const;
	class UCustomizedAudioComponent* GetSurvivorCustomizedAudioComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityCorridorHusk">();
	}
	static class AK40SecurityCorridorHusk* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40SecurityCorridorHusk>();
	}
};
static_assert(alignof(AK40SecurityCorridorHusk) == 0x000008, "Wrong alignment on AK40SecurityCorridorHusk");
static_assert(sizeof(AK40SecurityCorridorHusk) == 0x000330, "Wrong size on AK40SecurityCorridorHusk");
static_assert(offsetof(AK40SecurityCorridorHusk, _montagePlayer) == 0x0002E8, "Member 'AK40SecurityCorridorHusk::_montagePlayer' has a wrong offset!");

// Class TheK40.K40SecurityCorridorInteraction
// 0x0020 (0x0790 - 0x0770)
class UK40SecurityCorridorInteraction final : public UInteractionDefinition
{
public:
	class AK40SecurityDoor*                       _owningDoor;                                       // 0x0768(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AK40SecurityDoor*                       _destinationDoor;                                  // 0x0770(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK40SecuritySystemAbility*              _securitySystemAbility;                            // 0x0778(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AK40SecurityCorridor*                   _securityCorridor;                                 // 0x0780(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_788[0x8];                                      // 0x0788(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityCorridorInteraction">();
	}
	static class UK40SecurityCorridorInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityCorridorInteraction>();
	}
};
static_assert(alignof(UK40SecurityCorridorInteraction) == 0x000010, "Wrong alignment on UK40SecurityCorridorInteraction");
static_assert(sizeof(UK40SecurityCorridorInteraction) == 0x000790, "Wrong size on UK40SecurityCorridorInteraction");
static_assert(offsetof(UK40SecurityCorridorInteraction, _owningDoor) == 0x000768, "Member 'UK40SecurityCorridorInteraction::_owningDoor' has a wrong offset!");
static_assert(offsetof(UK40SecurityCorridorInteraction, _destinationDoor) == 0x000770, "Member 'UK40SecurityCorridorInteraction::_destinationDoor' has a wrong offset!");
static_assert(offsetof(UK40SecurityCorridorInteraction, _securitySystemAbility) == 0x000778, "Member 'UK40SecurityCorridorInteraction::_securitySystemAbility' has a wrong offset!");
static_assert(offsetof(UK40SecurityCorridorInteraction, _securityCorridor) == 0x000780, "Member 'UK40SecurityCorridorInteraction::_securityCorridor' has a wrong offset!");

// Class TheK40.K40SecurityCorridorKillerCameraDolly
// 0x0060 (0x0328 - 0x02C8)
class AK40SecurityCorridorKillerCameraDolly final : public AK40SecurityCorridorCameraDolly
{
public:
	TSubclassOf<class UAnimInstance>              _survivorHuskAnimInstanceClass;                    // 0x02C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class ASurvivor*, class AK40SecurityCorridorHusk*> _survivorHusks;                          // 0x02D0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_320[0x8];                                      // 0x0320(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnSurvivorHuskCreated(class AK40SecurityCorridorHusk* survivorHusk);

	class AK40SecurityCorridorHusk* GetSurvivorHusk() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityCorridorKillerCameraDolly">();
	}
	static class AK40SecurityCorridorKillerCameraDolly* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40SecurityCorridorKillerCameraDolly>();
	}
};
static_assert(alignof(AK40SecurityCorridorKillerCameraDolly) == 0x000008, "Wrong alignment on AK40SecurityCorridorKillerCameraDolly");
static_assert(sizeof(AK40SecurityCorridorKillerCameraDolly) == 0x000328, "Wrong size on AK40SecurityCorridorKillerCameraDolly");
static_assert(offsetof(AK40SecurityCorridorKillerCameraDolly, _survivorHuskAnimInstanceClass) == 0x0002C8, "Member 'AK40SecurityCorridorKillerCameraDolly::_survivorHuskAnimInstanceClass' has a wrong offset!");
static_assert(offsetof(AK40SecurityCorridorKillerCameraDolly, _survivorHusks) == 0x0002D0, "Member 'AK40SecurityCorridorKillerCameraDolly::_survivorHusks' has a wrong offset!");

// Class TheK40.K40SecurityCorridorSurvivorCameraDolly
// 0x0000 (0x02C8 - 0x02C8)
class AK40SecurityCorridorSurvivorCameraDolly final : public AK40SecurityCorridorCameraDolly
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityCorridorSurvivorCameraDolly">();
	}
	static class AK40SecurityCorridorSurvivorCameraDolly* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40SecurityCorridorSurvivorCameraDolly>();
	}
};
static_assert(alignof(AK40SecurityCorridorSurvivorCameraDolly) == 0x000008, "Wrong alignment on AK40SecurityCorridorSurvivorCameraDolly");
static_assert(sizeof(AK40SecurityCorridorSurvivorCameraDolly) == 0x0002C8, "Wrong size on AK40SecurityCorridorSurvivorCameraDolly");

// Class TheK40.K40SecurityDoor
// 0x0110 (0x04B8 - 0x03A8)
class AK40SecurityDoor final : public AInteractable
{
public:
	uint8                                         Pad_3A8[0x18];                                     // 0x03A8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _isInUse;                                          // 0x03C0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           _revealedToKillerColorWhileASurvivorIsTravellingThrough; // 0x03C4(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UK40SecurityDoorTargetableComponent> _survivorSecurityDoorTargetableComponent; // 0x03D4(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AK40SecurityDoor>        _connectedDoor;                                    // 0x03DC(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AK40SecurityCamera*                     _securityCamera;                                   // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK40SecurityDoorEnterInteraction*       _enterInteraction;                                 // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK40SecurityCorridorInteraction*        _corridorInteraction;                              // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK40SecurityDoorExitInteraction*        _exitInteraction;                                  // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK40SecuritySystemAbility*              _owningAbility;                                    // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _doorNumberID;                                     // 0x0410(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_414[0x88];                                     // 0x0414(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _targetSpringArmLength;                            // 0x049C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   _anchorRelativeLocationSceneComponentTag;          // 0x04A0(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   _targetCameraLocationSceneComponentTag;            // 0x04AC(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Cosmetic_OnBatteryPowerPercentageChanged(float batteryPowerPercentage);
	void Cosmetic_OnConnectedDoorChanged(int32 connectedDoorId);
	void Cosmetic_OnDisabledStart();
	void Cosmetic_OnDisabledStop();
	void Cosmetic_OnDoorNumberIDChanged();
	void Cosmetic_OnIsInUseChanged(bool IsInUse_0);
	void Cosmetic_OnKillerEnteringStart(class AKiller* Killer);
	void Cosmetic_OnKillerEnteringStop(class AKiller* Killer);
	void Cosmetic_OnKillerExitingStart(class AKiller* Killer);
	void Cosmetic_OnKillerExitingStop(class AKiller* Killer);
	void Cosmetic_OnSurvivorEnteringStart(class ASurvivor* Survivor);
	void Cosmetic_OnSurvivorEnteringStop(class ASurvivor* Survivor);
	void Cosmetic_OnSurvivorExitingStart(class ASurvivor* Survivor);
	void Cosmetic_OnSurvivorExitingStop(class ASurvivor* Survivor);
	void Cosmetic_OnSurvivorUsingCameraPanelStart(class ASurvivor* Survivor);
	void Cosmetic_OnSurvivorUsingCameraPanelStop(class ASurvivor* Survivor);
	void Cosmetic_SetNumberVisibility(bool isKillerTargeting);
	float GetBatteryPower();
	class AK40SecurityCamera* GetSecurityCamera();
	void OnRep_ConnectedDoor(TWeakObjectPtr<class AK40SecurityDoor> oldConnectedDoor);
	void OnRep_DoorNumberID();

	class AK40SecurityDoor* GetConnectedDoor() const;
	class AKiller* GetCurrentlyInteractingKiller() const;
	class ASurvivor* GetCurrentlyInteractingSurvivor() const;
	int32 GetDoorNumberID() const;
	bool IsInUse() const;
	bool IsPoweredDown() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityDoor">();
	}
	static class AK40SecurityDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40SecurityDoor>();
	}
};
static_assert(alignof(AK40SecurityDoor) == 0x000008, "Wrong alignment on AK40SecurityDoor");
static_assert(sizeof(AK40SecurityDoor) == 0x0004B8, "Wrong size on AK40SecurityDoor");
static_assert(offsetof(AK40SecurityDoor, _isInUse) == 0x0003C0, "Member 'AK40SecurityDoor::_isInUse' has a wrong offset!");
static_assert(offsetof(AK40SecurityDoor, _revealedToKillerColorWhileASurvivorIsTravellingThrough) == 0x0003C4, "Member 'AK40SecurityDoor::_revealedToKillerColorWhileASurvivorIsTravellingThrough' has a wrong offset!");
static_assert(offsetof(AK40SecurityDoor, _survivorSecurityDoorTargetableComponent) == 0x0003D4, "Member 'AK40SecurityDoor::_survivorSecurityDoorTargetableComponent' has a wrong offset!");
static_assert(offsetof(AK40SecurityDoor, _connectedDoor) == 0x0003DC, "Member 'AK40SecurityDoor::_connectedDoor' has a wrong offset!");
static_assert(offsetof(AK40SecurityDoor, _securityCamera) == 0x0003E8, "Member 'AK40SecurityDoor::_securityCamera' has a wrong offset!");
static_assert(offsetof(AK40SecurityDoor, _enterInteraction) == 0x0003F0, "Member 'AK40SecurityDoor::_enterInteraction' has a wrong offset!");
static_assert(offsetof(AK40SecurityDoor, _corridorInteraction) == 0x0003F8, "Member 'AK40SecurityDoor::_corridorInteraction' has a wrong offset!");
static_assert(offsetof(AK40SecurityDoor, _exitInteraction) == 0x000400, "Member 'AK40SecurityDoor::_exitInteraction' has a wrong offset!");
static_assert(offsetof(AK40SecurityDoor, _owningAbility) == 0x000408, "Member 'AK40SecurityDoor::_owningAbility' has a wrong offset!");
static_assert(offsetof(AK40SecurityDoor, _doorNumberID) == 0x000410, "Member 'AK40SecurityDoor::_doorNumberID' has a wrong offset!");
static_assert(offsetof(AK40SecurityDoor, _targetSpringArmLength) == 0x00049C, "Member 'AK40SecurityDoor::_targetSpringArmLength' has a wrong offset!");
static_assert(offsetof(AK40SecurityDoor, _anchorRelativeLocationSceneComponentTag) == 0x0004A0, "Member 'AK40SecurityDoor::_anchorRelativeLocationSceneComponentTag' has a wrong offset!");
static_assert(offsetof(AK40SecurityDoor, _targetCameraLocationSceneComponentTag) == 0x0004AC, "Member 'AK40SecurityDoor::_targetCameraLocationSceneComponentTag' has a wrong offset!");

// Class TheK40.K40SecurityDoorAnimInstance
// 0x00D0 (0x0430 - 0x0360)
class UK40SecurityDoorAnimInstance final : public USleepingAnimInstance
{
public:
	bool                                          _isSurvivorUsingCamera;                            // 0x0360(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isKillerEntering;                                 // 0x0361(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isKillerExiting;                                  // 0x0362(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isSurvivorEntering;                               // 0x0363(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isSurvivorExiting;                                // 0x0364(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_365[0xCB];                                     // 0x0365(0x00CB)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityDoorAnimInstance">();
	}
	static class UK40SecurityDoorAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityDoorAnimInstance>();
	}
};
static_assert(alignof(UK40SecurityDoorAnimInstance) == 0x000010, "Wrong alignment on UK40SecurityDoorAnimInstance");
static_assert(sizeof(UK40SecurityDoorAnimInstance) == 0x000430, "Wrong size on UK40SecurityDoorAnimInstance");
static_assert(offsetof(UK40SecurityDoorAnimInstance, _isSurvivorUsingCamera) == 0x000360, "Member 'UK40SecurityDoorAnimInstance::_isSurvivorUsingCamera' has a wrong offset!");
static_assert(offsetof(UK40SecurityDoorAnimInstance, _isKillerEntering) == 0x000361, "Member 'UK40SecurityDoorAnimInstance::_isKillerEntering' has a wrong offset!");
static_assert(offsetof(UK40SecurityDoorAnimInstance, _isKillerExiting) == 0x000362, "Member 'UK40SecurityDoorAnimInstance::_isKillerExiting' has a wrong offset!");
static_assert(offsetof(UK40SecurityDoorAnimInstance, _isSurvivorEntering) == 0x000363, "Member 'UK40SecurityDoorAnimInstance::_isSurvivorEntering' has a wrong offset!");
static_assert(offsetof(UK40SecurityDoorAnimInstance, _isSurvivorExiting) == 0x000364, "Member 'UK40SecurityDoorAnimInstance::_isSurvivorExiting' has a wrong offset!");

// Class TheK40.K40SecurityDoorEnterInteraction
// 0x0020 (0x0790 - 0x0770)
class UK40SecurityDoorEnterInteraction final : public UInteractionDefinition
{
public:
	uint8                                         Pad_768[0x28];                                     // 0x0768(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityDoorEnterInteraction">();
	}
	static class UK40SecurityDoorEnterInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityDoorEnterInteraction>();
	}
};
static_assert(alignof(UK40SecurityDoorEnterInteraction) == 0x000010, "Wrong alignment on UK40SecurityDoorEnterInteraction");
static_assert(sizeof(UK40SecurityDoorEnterInteraction) == 0x000790, "Wrong size on UK40SecurityDoorEnterInteraction");

// Class TheK40.K40SecurityDoorExitInteraction
// 0x0000 (0x0770 - 0x0770)
class UK40SecurityDoorExitInteraction final : public UInteractionDefinition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityDoorExitInteraction">();
	}
	static class UK40SecurityDoorExitInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityDoorExitInteraction>();
	}
};
static_assert(alignof(UK40SecurityDoorExitInteraction) == 0x000010, "Wrong alignment on UK40SecurityDoorExitInteraction");
static_assert(sizeof(UK40SecurityDoorExitInteraction) == 0x000770, "Wrong size on UK40SecurityDoorExitInteraction");

// Class TheK40.K40SecurityDoorKillerEnterInteraction
// 0x0020 (0x0790 - 0x0770)
class UK40SecurityDoorKillerEnterInteraction final : public UInteractionDefinition
{
public:
	uint8                                         Pad_768[0x28];                                     // 0x0768(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityDoorKillerEnterInteraction">();
	}
	static class UK40SecurityDoorKillerEnterInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityDoorKillerEnterInteraction>();
	}
};
static_assert(alignof(UK40SecurityDoorKillerEnterInteraction) == 0x000010, "Wrong alignment on UK40SecurityDoorKillerEnterInteraction");
static_assert(sizeof(UK40SecurityDoorKillerEnterInteraction) == 0x000790, "Wrong size on UK40SecurityDoorKillerEnterInteraction");

// Class TheK40.K40SecurityDoorKillerExitGrabInteraction
// 0x0010 (0x0780 - 0x0770)
class UK40SecurityDoorKillerExitGrabInteraction final : public UInteractionDefinition
{
public:
	class AKiller*                                _interactingKiller;                                // 0x0768(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AK40SecurityDoor*                       _owningDoor;                                       // 0x0770(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASurvivor*                              _interactingSurvivorToGrab;                        // 0x0778(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityDoorKillerExitGrabInteraction">();
	}
	static class UK40SecurityDoorKillerExitGrabInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityDoorKillerExitGrabInteraction>();
	}
};
static_assert(alignof(UK40SecurityDoorKillerExitGrabInteraction) == 0x000010, "Wrong alignment on UK40SecurityDoorKillerExitGrabInteraction");
static_assert(sizeof(UK40SecurityDoorKillerExitGrabInteraction) == 0x000780, "Wrong size on UK40SecurityDoorKillerExitGrabInteraction");
static_assert(offsetof(UK40SecurityDoorKillerExitGrabInteraction, _interactingKiller) == 0x000768, "Member 'UK40SecurityDoorKillerExitGrabInteraction::_interactingKiller' has a wrong offset!");
static_assert(offsetof(UK40SecurityDoorKillerExitGrabInteraction, _owningDoor) == 0x000770, "Member 'UK40SecurityDoorKillerExitGrabInteraction::_owningDoor' has a wrong offset!");
static_assert(offsetof(UK40SecurityDoorKillerExitGrabInteraction, _interactingSurvivorToGrab) == 0x000778, "Member 'UK40SecurityDoorKillerExitGrabInteraction::_interactingSurvivorToGrab' has a wrong offset!");

// Class TheK40.K40SecurityDoorKillerExitInteraction
// 0x0000 (0x0770 - 0x0770)
class UK40SecurityDoorKillerExitInteraction final : public UInteractionDefinition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityDoorKillerExitInteraction">();
	}
	static class UK40SecurityDoorKillerExitInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityDoorKillerExitInteraction>();
	}
};
static_assert(alignof(UK40SecurityDoorKillerExitInteraction) == 0x000010, "Wrong alignment on UK40SecurityDoorKillerExitInteraction");
static_assert(sizeof(UK40SecurityDoorKillerExitInteraction) == 0x000770, "Wrong size on UK40SecurityDoorKillerExitInteraction");

// Class TheK40.K40SecurityDoorKillerTeleportInteraction
// 0x0030 (0x07C0 - 0x0790)
class UK40SecurityDoorKillerTeleportInteraction final : public UTargetingTeleportInteraction
{
public:
	struct FLinearColor                           _doorRevealedToKillerColorWhileInUse;              // 0x0790(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7A0[0x8];                                      // 0x07A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AK40SecurityDoor*                       _startingDoor;                                     // 0x07A8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AK40SecurityDoor*                       _destinationDoor;                                  // 0x07B0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7B8[0x8];                                      // 0x07B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityDoorKillerTeleportInteraction">();
	}
	static class UK40SecurityDoorKillerTeleportInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityDoorKillerTeleportInteraction>();
	}
};
static_assert(alignof(UK40SecurityDoorKillerTeleportInteraction) == 0x000010, "Wrong alignment on UK40SecurityDoorKillerTeleportInteraction");
static_assert(sizeof(UK40SecurityDoorKillerTeleportInteraction) == 0x0007C0, "Wrong size on UK40SecurityDoorKillerTeleportInteraction");
static_assert(offsetof(UK40SecurityDoorKillerTeleportInteraction, _doorRevealedToKillerColorWhileInUse) == 0x000790, "Member 'UK40SecurityDoorKillerTeleportInteraction::_doorRevealedToKillerColorWhileInUse' has a wrong offset!");
static_assert(offsetof(UK40SecurityDoorKillerTeleportInteraction, _startingDoor) == 0x0007A8, "Member 'UK40SecurityDoorKillerTeleportInteraction::_startingDoor' has a wrong offset!");
static_assert(offsetof(UK40SecurityDoorKillerTeleportInteraction, _destinationDoor) == 0x0007B0, "Member 'UK40SecurityDoorKillerTeleportInteraction::_destinationDoor' has a wrong offset!");

// Class TheK40.K40SecurityDoorOutlineUpdateStrategy
// 0x0010 (0x0170 - 0x0160)
class UK40SecurityDoorOutlineUpdateStrategy final : public USourceBasedOutlineUpdateStrategy
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AK40SecurityDoor*                       _owningDoor;                                       // 0x0168(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityDoorOutlineUpdateStrategy">();
	}
	static class UK40SecurityDoorOutlineUpdateStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityDoorOutlineUpdateStrategy>();
	}
};
static_assert(alignof(UK40SecurityDoorOutlineUpdateStrategy) == 0x000008, "Wrong alignment on UK40SecurityDoorOutlineUpdateStrategy");
static_assert(sizeof(UK40SecurityDoorOutlineUpdateStrategy) == 0x000170, "Wrong size on UK40SecurityDoorOutlineUpdateStrategy");
static_assert(offsetof(UK40SecurityDoorOutlineUpdateStrategy, _owningDoor) == 0x000168, "Member 'UK40SecurityDoorOutlineUpdateStrategy::_owningDoor' has a wrong offset!");

// Class TheK40.K40SecurityDoorTargetableComponent
// 0x0010 (0x0380 - 0x0370)
class UK40SecurityDoorTargetableComponent final : public UTargetableComponent
{
public:
	struct FLinearColor                           _outlineColorWhenSurvivorInteractingWithDoor;      // 0x0368(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityDoorTargetableComponent">();
	}
	static class UK40SecurityDoorTargetableComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityDoorTargetableComponent>();
	}
};
static_assert(alignof(UK40SecurityDoorTargetableComponent) == 0x000010, "Wrong alignment on UK40SecurityDoorTargetableComponent");
static_assert(sizeof(UK40SecurityDoorTargetableComponent) == 0x000380, "Wrong size on UK40SecurityDoorTargetableComponent");
static_assert(offsetof(UK40SecurityDoorTargetableComponent, _outlineColorWhenSurvivorInteractingWithDoor) == 0x000368, "Member 'UK40SecurityDoorTargetableComponent::_outlineColorWhenSurvivorInteractingWithDoor' has a wrong offset!");

// Class TheK40.K40SecurityDoorTargetableStrategy
// 0x0000 (0x0048 - 0x0048)
class UK40SecurityDoorTargetableStrategy final : public UTargetableStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecurityDoorTargetableStrategy">();
	}
	static class UK40SecurityDoorTargetableStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecurityDoorTargetableStrategy>();
	}
};
static_assert(alignof(UK40SecurityDoorTargetableStrategy) == 0x000008, "Wrong alignment on UK40SecurityDoorTargetableStrategy");
static_assert(sizeof(UK40SecurityDoorTargetableStrategy) == 0x000048, "Wrong size on UK40SecurityDoorTargetableStrategy");

// Class TheK40.K40SecuritySystemAbility
// 0x0150 (0x0330 - 0x01E0)
class UK40SecuritySystemAbility final : public UKillerAbilityComponent
{
public:
	TSubclassOf<class UStatusEffect>              _survivorTryingToRevealKillerEffectClass;          // 0x01E0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AK40SecurityCorridor>       _securityCorridorClassToSpawn;                     // 0x01E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AK40SecurityCorridor*                   _securityCorridor;                                 // 0x01F0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             _securityCorridorTransform;                        // 0x0200(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AK40SecurityDoor*>               _securityDoors;                                    // 0x0260(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_270[0x8];                                      // 0x0270(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UTargetableComponent>       _securityDoorTargetableComponentClass;             // 0x0278(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UTargetableComponent>       _survivorSecurityDoorTargetableComponentClass;     // 0x0280(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UTargetingComponent>        _securityDoorTargetingComponentClass;              // 0x0288(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UTargetingComponent>        _survivorSecurityDoorTargetingComponentClass;      // 0x0290(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTargetingComponent*                    _securityDoorTargetingComponent;                   // 0x0298(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTargetableComponent*>           _teleportTargets;                                  // 0x02A0(0x0010)(ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TSubclassOf<class UK40SecurityDoorKillerTeleportInteraction> _killerTeleportInteractionClass;    // 0x02B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK40SecurityDoorKillerTeleportInteraction* _killerTeleportInteraction;                     // 0x02B8(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C0[0x8];                                      // 0x02C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UK40KillerRevealComponent>  _killerRevealComponentClass;                       // 0x02C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK40KillerRevealComponent*              _killerRevealComponent;                            // 0x02D0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                   _batteryPowerChargeableComponent;                  // 0x02D8(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E0[0x30];                                     // 0x02E0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UK40SurvivorInOfficeStatusEffect> _survivorInOfficeStatusEffectClassToSpawn;   // 0x0310(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _killerUsingSecurityDoorsStatusEffectClassToSpawn; // 0x0318(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _killerUsingSecurityDoorsLingeringStatusEffectClassToSpawn; // 0x0320(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _killerRevealEffectClassToSpawn;                   // 0x0328(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_OnBatteryPowerChargeChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete);
	void Authority_OnBatteryPowerCompletionStateChanged(bool COMPLETED, const TArray<class AActor*>& instigatorsForCompletion);
	void Cosmetic_OnBatteryPowerChargeChanged(class UChargeableComponent* ChargeableComponent, float TotalPercentComplete);
	void OnRep_TeleportTargets();

	void OnRep_BatteryPowerChargeableComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecuritySystemAbility">();
	}
	static class UK40SecuritySystemAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecuritySystemAbility>();
	}
};
static_assert(alignof(UK40SecuritySystemAbility) == 0x000010, "Wrong alignment on UK40SecuritySystemAbility");
static_assert(sizeof(UK40SecuritySystemAbility) == 0x000330, "Wrong size on UK40SecuritySystemAbility");
static_assert(offsetof(UK40SecuritySystemAbility, _survivorTryingToRevealKillerEffectClass) == 0x0001E0, "Member 'UK40SecuritySystemAbility::_survivorTryingToRevealKillerEffectClass' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _securityCorridorClassToSpawn) == 0x0001E8, "Member 'UK40SecuritySystemAbility::_securityCorridorClassToSpawn' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _securityCorridor) == 0x0001F0, "Member 'UK40SecuritySystemAbility::_securityCorridor' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _securityCorridorTransform) == 0x000200, "Member 'UK40SecuritySystemAbility::_securityCorridorTransform' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _securityDoors) == 0x000260, "Member 'UK40SecuritySystemAbility::_securityDoors' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _securityDoorTargetableComponentClass) == 0x000278, "Member 'UK40SecuritySystemAbility::_securityDoorTargetableComponentClass' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _survivorSecurityDoorTargetableComponentClass) == 0x000280, "Member 'UK40SecuritySystemAbility::_survivorSecurityDoorTargetableComponentClass' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _securityDoorTargetingComponentClass) == 0x000288, "Member 'UK40SecuritySystemAbility::_securityDoorTargetingComponentClass' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _survivorSecurityDoorTargetingComponentClass) == 0x000290, "Member 'UK40SecuritySystemAbility::_survivorSecurityDoorTargetingComponentClass' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _securityDoorTargetingComponent) == 0x000298, "Member 'UK40SecuritySystemAbility::_securityDoorTargetingComponent' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _teleportTargets) == 0x0002A0, "Member 'UK40SecuritySystemAbility::_teleportTargets' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _killerTeleportInteractionClass) == 0x0002B0, "Member 'UK40SecuritySystemAbility::_killerTeleportInteractionClass' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _killerTeleportInteraction) == 0x0002B8, "Member 'UK40SecuritySystemAbility::_killerTeleportInteraction' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _killerRevealComponentClass) == 0x0002C8, "Member 'UK40SecuritySystemAbility::_killerRevealComponentClass' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _killerRevealComponent) == 0x0002D0, "Member 'UK40SecuritySystemAbility::_killerRevealComponent' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _batteryPowerChargeableComponent) == 0x0002D8, "Member 'UK40SecuritySystemAbility::_batteryPowerChargeableComponent' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _survivorInOfficeStatusEffectClassToSpawn) == 0x000310, "Member 'UK40SecuritySystemAbility::_survivorInOfficeStatusEffectClassToSpawn' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _killerUsingSecurityDoorsStatusEffectClassToSpawn) == 0x000318, "Member 'UK40SecuritySystemAbility::_killerUsingSecurityDoorsStatusEffectClassToSpawn' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _killerUsingSecurityDoorsLingeringStatusEffectClassToSpawn) == 0x000320, "Member 'UK40SecuritySystemAbility::_killerUsingSecurityDoorsLingeringStatusEffectClassToSpawn' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbility, _killerRevealEffectClassToSpawn) == 0x000328, "Member 'UK40SecuritySystemAbility::_killerRevealEffectClassToSpawn' has a wrong offset!");

// Class TheK40.K40SecuritySystemAbilityData
// 0x0068 (0x00D8 - 0x0070)
class UK40SecuritySystemAbilityData final : public UKillerAbilityData
{
public:
	float                                         _securityDoorEnterSurvivorInteractionTime;         // 0x0070(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityDoorEnterKillerInteractionTime;           // 0x0074(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityDoorOfficeCorridorSurvivorInteractionTime; // 0x0078(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityDoorExitSurvivorInteractionTime;          // 0x007C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityDoorExitKillerInteractionTime;            // 0x0080(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityDoorExitUndetectableLingeringDuration;    // 0x0084(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityDoorTeleportKillerInteractionTime;        // 0x0088(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityDoorSurvivorAuraMaxDistance;              // 0x008C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _officeJumpscareInteractionTime;                   // 0x0090(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _batteryPowerChargeRate;                           // 0x0094(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _batteryPowerDechargeRatePerCameraInUse;           // 0x0098(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _batteryPowerConsumptionOnSurvivorDoorTraversal;   // 0x009C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _batteryPowerShutDownThreshold;                    // 0x00A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _batteryPowerRebootDuration;                       // 0x00A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _batteryPowerChargeUponReboot;                     // 0x00A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityCameraEnterInteractionTime;               // 0x00AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityCameraCancelExitInteractionTime;          // 0x00B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityCameraTransitioningTimeMinimum;           // 0x00B4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityCameraKillerRevealDistance;               // 0x00B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityCameraKillerRevealLookAtAngle;            // 0x00BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityCameraKillerRevealLookAtTime;             // 0x00C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityCameraKillerRevealToAllTime;              // 0x00C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityCameraKillerRevealDechargeDelay;          // 0x00C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _securityCameraKillerRevealDechargeRate;           // 0x00CC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maxCameraYawDelta;                                // 0x00D0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maxCameraPitchDelta;                              // 0x00D4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecuritySystemAbilityData">();
	}
	static class UK40SecuritySystemAbilityData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SecuritySystemAbilityData>();
	}
};
static_assert(alignof(UK40SecuritySystemAbilityData) == 0x000008, "Wrong alignment on UK40SecuritySystemAbilityData");
static_assert(sizeof(UK40SecuritySystemAbilityData) == 0x0000D8, "Wrong size on UK40SecuritySystemAbilityData");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityDoorEnterSurvivorInteractionTime) == 0x000070, "Member 'UK40SecuritySystemAbilityData::_securityDoorEnterSurvivorInteractionTime' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityDoorEnterKillerInteractionTime) == 0x000074, "Member 'UK40SecuritySystemAbilityData::_securityDoorEnterKillerInteractionTime' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityDoorOfficeCorridorSurvivorInteractionTime) == 0x000078, "Member 'UK40SecuritySystemAbilityData::_securityDoorOfficeCorridorSurvivorInteractionTime' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityDoorExitSurvivorInteractionTime) == 0x00007C, "Member 'UK40SecuritySystemAbilityData::_securityDoorExitSurvivorInteractionTime' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityDoorExitKillerInteractionTime) == 0x000080, "Member 'UK40SecuritySystemAbilityData::_securityDoorExitKillerInteractionTime' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityDoorExitUndetectableLingeringDuration) == 0x000084, "Member 'UK40SecuritySystemAbilityData::_securityDoorExitUndetectableLingeringDuration' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityDoorTeleportKillerInteractionTime) == 0x000088, "Member 'UK40SecuritySystemAbilityData::_securityDoorTeleportKillerInteractionTime' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityDoorSurvivorAuraMaxDistance) == 0x00008C, "Member 'UK40SecuritySystemAbilityData::_securityDoorSurvivorAuraMaxDistance' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _officeJumpscareInteractionTime) == 0x000090, "Member 'UK40SecuritySystemAbilityData::_officeJumpscareInteractionTime' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _batteryPowerChargeRate) == 0x000094, "Member 'UK40SecuritySystemAbilityData::_batteryPowerChargeRate' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _batteryPowerDechargeRatePerCameraInUse) == 0x000098, "Member 'UK40SecuritySystemAbilityData::_batteryPowerDechargeRatePerCameraInUse' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _batteryPowerConsumptionOnSurvivorDoorTraversal) == 0x00009C, "Member 'UK40SecuritySystemAbilityData::_batteryPowerConsumptionOnSurvivorDoorTraversal' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _batteryPowerShutDownThreshold) == 0x0000A0, "Member 'UK40SecuritySystemAbilityData::_batteryPowerShutDownThreshold' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _batteryPowerRebootDuration) == 0x0000A4, "Member 'UK40SecuritySystemAbilityData::_batteryPowerRebootDuration' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _batteryPowerChargeUponReboot) == 0x0000A8, "Member 'UK40SecuritySystemAbilityData::_batteryPowerChargeUponReboot' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityCameraEnterInteractionTime) == 0x0000AC, "Member 'UK40SecuritySystemAbilityData::_securityCameraEnterInteractionTime' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityCameraCancelExitInteractionTime) == 0x0000B0, "Member 'UK40SecuritySystemAbilityData::_securityCameraCancelExitInteractionTime' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityCameraTransitioningTimeMinimum) == 0x0000B4, "Member 'UK40SecuritySystemAbilityData::_securityCameraTransitioningTimeMinimum' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityCameraKillerRevealDistance) == 0x0000B8, "Member 'UK40SecuritySystemAbilityData::_securityCameraKillerRevealDistance' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityCameraKillerRevealLookAtAngle) == 0x0000BC, "Member 'UK40SecuritySystemAbilityData::_securityCameraKillerRevealLookAtAngle' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityCameraKillerRevealLookAtTime) == 0x0000C0, "Member 'UK40SecuritySystemAbilityData::_securityCameraKillerRevealLookAtTime' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityCameraKillerRevealToAllTime) == 0x0000C4, "Member 'UK40SecuritySystemAbilityData::_securityCameraKillerRevealToAllTime' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityCameraKillerRevealDechargeDelay) == 0x0000C8, "Member 'UK40SecuritySystemAbilityData::_securityCameraKillerRevealDechargeDelay' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _securityCameraKillerRevealDechargeRate) == 0x0000CC, "Member 'UK40SecuritySystemAbilityData::_securityCameraKillerRevealDechargeRate' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _maxCameraYawDelta) == 0x0000D0, "Member 'UK40SecuritySystemAbilityData::_maxCameraYawDelta' has a wrong offset!");
static_assert(offsetof(UK40SecuritySystemAbilityData, _maxCameraPitchDelta) == 0x0000D4, "Member 'UK40SecuritySystemAbilityData::_maxCameraPitchDelta' has a wrong offset!");

// Class TheK40.K40SecuritySystemAbilitySurvivorCosmeticHelperActor
// 0x0020 (0x0378 - 0x0358)
class AK40SecuritySystemAbilitySurvivorCosmeticHelperActor final : public ASurvivorCosmeticHelperActor
{
public:
	uint8                                         Pad_358[0x20];                                     // 0x0358(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ChangePlayerVisibility(bool IsVisible);
	void Cosmetic_BeingOfficeGrabbedStart();
	void Cosmetic_BeingOfficeGrabbedStop();
	void Cosmetic_EnteringSecurityDoorStart(class AK40SecurityDoor* door);
	void Cosmetic_EnteringSecurityDoorStop(class AK40SecurityDoor* door);
	void Cosmetic_EnterSecurityDoorFailure(class AK40SecurityDoor* door);
	void Cosmetic_ExitingSecurityDoorStart(class AK40SecurityDoor* door);
	void Cosmetic_ExitingSecurityDoorStop(class AK40SecurityDoor* door);
	void Cosmetic_GrabSurvivorDuringEnterSecurityDoor(class AK40SecurityDoor* door);
	void Cosmetic_OnBatteryDepleted();
	void Cosmetic_OnBatteryPercentChanged(const float batteryPercent);
	void Cosmetic_OnBatteryRebooted();
	void Cosmetic_TravellingThroughSecurityOfficeStart();
	void Cosmetic_TravellingThroughSecurityOfficeStop();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SecuritySystemAbilitySurvivorCosmeticHelperActor">();
	}
	static class AK40SecuritySystemAbilitySurvivorCosmeticHelperActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK40SecuritySystemAbilitySurvivorCosmeticHelperActor>();
	}
};
static_assert(alignof(AK40SecuritySystemAbilitySurvivorCosmeticHelperActor) == 0x000008, "Wrong alignment on AK40SecuritySystemAbilitySurvivorCosmeticHelperActor");
static_assert(sizeof(AK40SecuritySystemAbilitySurvivorCosmeticHelperActor) == 0x000378, "Wrong size on AK40SecuritySystemAbilitySurvivorCosmeticHelperActor");

// Class TheK40.K40SurvivorRemoveProjectileInteraction
// 0x0000 (0x08C0 - 0x08C0)
class UK40SurvivorRemoveProjectileInteraction : public UChargeableInteractionDefinition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SurvivorRemoveProjectileInteraction">();
	}
	static class UK40SurvivorRemoveProjectileInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SurvivorRemoveProjectileInteraction>();
	}
};
static_assert(alignof(UK40SurvivorRemoveProjectileInteraction) == 0x000010, "Wrong alignment on UK40SurvivorRemoveProjectileInteraction");
static_assert(sizeof(UK40SurvivorRemoveProjectileInteraction) == 0x0008C0, "Wrong size on UK40SurvivorRemoveProjectileInteraction");

// Class TheK40.K40SurvivorRemoveProjectileFromOtherInteraction
// 0x00B0 (0x0970 - 0x08C0)
class UK40SurvivorRemoveProjectileFromOtherInteraction final : public UK40SurvivorRemoveProjectileInteraction
{
public:
	struct FAnimationMontageDescriptor            _targetPlayerInMontage;                            // 0x08C0(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FAnimationMontageDescriptor            _targetPlayerUpdateMontage;                        // 0x08E0(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FAnimationMontageDescriptor            _targetPlayerExitSuccessMontage;                   // 0x0900(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FAnimationMontageDescriptor            _targetPlayerExitFailMontage;                      // 0x0920(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FAnimationMontageDescriptor            _interactingPlayerExitFailMontage;                 // 0x0940(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_960[0x10];                                     // 0x0960(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SurvivorRemoveProjectileFromOtherInteraction">();
	}
	static class UK40SurvivorRemoveProjectileFromOtherInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SurvivorRemoveProjectileFromOtherInteraction>();
	}
};
static_assert(alignof(UK40SurvivorRemoveProjectileFromOtherInteraction) == 0x000010, "Wrong alignment on UK40SurvivorRemoveProjectileFromOtherInteraction");
static_assert(sizeof(UK40SurvivorRemoveProjectileFromOtherInteraction) == 0x000970, "Wrong size on UK40SurvivorRemoveProjectileFromOtherInteraction");
static_assert(offsetof(UK40SurvivorRemoveProjectileFromOtherInteraction, _targetPlayerInMontage) == 0x0008C0, "Member 'UK40SurvivorRemoveProjectileFromOtherInteraction::_targetPlayerInMontage' has a wrong offset!");
static_assert(offsetof(UK40SurvivorRemoveProjectileFromOtherInteraction, _targetPlayerUpdateMontage) == 0x0008E0, "Member 'UK40SurvivorRemoveProjectileFromOtherInteraction::_targetPlayerUpdateMontage' has a wrong offset!");
static_assert(offsetof(UK40SurvivorRemoveProjectileFromOtherInteraction, _targetPlayerExitSuccessMontage) == 0x000900, "Member 'UK40SurvivorRemoveProjectileFromOtherInteraction::_targetPlayerExitSuccessMontage' has a wrong offset!");
static_assert(offsetof(UK40SurvivorRemoveProjectileFromOtherInteraction, _targetPlayerExitFailMontage) == 0x000920, "Member 'UK40SurvivorRemoveProjectileFromOtherInteraction::_targetPlayerExitFailMontage' has a wrong offset!");
static_assert(offsetof(UK40SurvivorRemoveProjectileFromOtherInteraction, _interactingPlayerExitFailMontage) == 0x000940, "Member 'UK40SurvivorRemoveProjectileFromOtherInteraction::_interactingPlayerExitFailMontage' has a wrong offset!");

// Class TheK40.K40SurvivorRemoveProjectileFromSelfInteraction
// 0x0020 (0x08E0 - 0x08C0)
class UK40SurvivorRemoveProjectileFromSelfInteraction final : public UK40SurvivorRemoveProjectileInteraction
{
public:
	struct FAnimationMontageDescriptor            _exitMontageFail;                                  // 0x08C0(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K40SurvivorRemoveProjectileFromSelfInteraction">();
	}
	static class UK40SurvivorRemoveProjectileFromSelfInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK40SurvivorRemoveProjectileFromSelfInteraction>();
	}
};
static_assert(alignof(UK40SurvivorRemoveProjectileFromSelfInteraction) == 0x000010, "Wrong alignment on UK40SurvivorRemoveProjectileFromSelfInteraction");
static_assert(sizeof(UK40SurvivorRemoveProjectileFromSelfInteraction) == 0x0008E0, "Wrong size on UK40SurvivorRemoveProjectileFromSelfInteraction");
static_assert(offsetof(UK40SurvivorRemoveProjectileFromSelfInteraction, _exitMontageFail) == 0x0008C0, "Member 'UK40SurvivorRemoveProjectileFromSelfInteraction::_exitMontageFail' has a wrong offset!");

// Class TheK40.SecurityCameraRevealKillerEffect
// 0x0020 (0x0460 - 0x0440)
class USecurityCameraRevealKillerEffect final : public ULingeringStateTagStatusEffect
{
public:
	struct FLinearColor                           _outlineColor;                                     // 0x0440(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           _outlineOverrideTag;                               // 0x0450(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isOutlineAlwaysVisible;                           // 0x045C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isUnaffectedByFadeout;                            // 0x045D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_45E[0x2];                                      // 0x045E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SecurityCameraRevealKillerEffect">();
	}
	static class USecurityCameraRevealKillerEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<USecurityCameraRevealKillerEffect>();
	}
};
static_assert(alignof(USecurityCameraRevealKillerEffect) == 0x000008, "Wrong alignment on USecurityCameraRevealKillerEffect");
static_assert(sizeof(USecurityCameraRevealKillerEffect) == 0x000460, "Wrong size on USecurityCameraRevealKillerEffect");
static_assert(offsetof(USecurityCameraRevealKillerEffect, _outlineColor) == 0x000440, "Member 'USecurityCameraRevealKillerEffect::_outlineColor' has a wrong offset!");
static_assert(offsetof(USecurityCameraRevealKillerEffect, _outlineOverrideTag) == 0x000450, "Member 'USecurityCameraRevealKillerEffect::_outlineOverrideTag' has a wrong offset!");
static_assert(offsetof(USecurityCameraRevealKillerEffect, _isOutlineAlwaysVisible) == 0x00045C, "Member 'USecurityCameraRevealKillerEffect::_isOutlineAlwaysVisible' has a wrong offset!");
static_assert(offsetof(USecurityCameraRevealKillerEffect, _isUnaffectedByFadeout) == 0x00045D, "Member 'USecurityCameraRevealKillerEffect::_isUnaffectedByFadeout' has a wrong offset!");

}

