#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreChallengeSetItem

#include "Basic.hpp"

#include "WBP_CoreChallengeSetItem_classes.hpp"
#include "WBP_CoreChallengeSetItem_parameters.hpp"


namespace SDK
{

// Function WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C.ExecuteUbergraph_WBP_CoreChallengeSetItem
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreChallengeSetItem_C::ExecuteUbergraph_WBP_CoreChallengeSetItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreChallengeSetItem_C", "ExecuteUbergraph_WBP_CoreChallengeSetItem");

	Params::WBP_CoreChallengeSetItem_C_ExecuteUbergraph_WBP_CoreChallengeSetItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C.OnHoverAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHovered_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreChallengeSetItem_C::OnHoverAnimation(bool IsHovered_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreChallengeSetItem_C", "OnHoverAnimation");

	Params::WBP_CoreChallengeSetItem_C_OnHoverAnimation Parms{};

	Parms.IsHovered_0 = IsHovered_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C.OnHovered
// (Event, Protected, BlueprintEvent)

void UWBP_CoreChallengeSetItem_C::OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreChallengeSetItem_C", "OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C.OnPressed
// (Event, Protected, BlueprintEvent)

void UWBP_CoreChallengeSetItem_C::OnPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreChallengeSetItem_C", "OnPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C.OnReleased
// (Event, Protected, BlueprintEvent)

void UWBP_CoreChallengeSetItem_C::OnReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreChallengeSetItem_C", "OnReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C.OnSelectedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsSelected_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    withAnimation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreChallengeSetItem_C::OnSelectedChanged(bool IsSelected_0, bool withAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreChallengeSetItem_C", "OnSelectedChanged");

	Params::WBP_CoreChallengeSetItem_C_OnSelectedChanged Parms{};

	Parms.IsSelected_0 = IsSelected_0;
	Parms.withAnimation = withAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C.OnUnhovered
// (Event, Protected, BlueprintEvent)

void UWBP_CoreChallengeSetItem_C::OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreChallengeSetItem_C", "OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreChallengeSetItem_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreChallengeSetItem_C", "PreConstruct");

	Params::WBP_CoreChallengeSetItem_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C.SetColorBackground
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UColorTripleDataAsset*            Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreChallengeSetItem_C::SetColorBackground(class UColorTripleDataAsset* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreChallengeSetItem_C", "SetColorBackground");

	Params::WBP_CoreChallengeSetItem_C_SetColorBackground Parms{};

	Parms.Color = Color;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C.SetExpiredStateVisuals
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    isExpired                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreChallengeSetItem_C::SetExpiredStateVisuals(bool isExpired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreChallengeSetItem_C", "SetExpiredStateVisuals");

	Params::WBP_CoreChallengeSetItem_C_SetExpiredStateVisuals Parms{};

	Parms.isExpired = isExpired;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C.SetSelectedState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              IsSelected_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreChallengeSetItem_C::SetSelectedState(const bool IsSelected_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreChallengeSetItem_C", "SetSelectedState");

	Params::WBP_CoreChallengeSetItem_C_SetSelectedState Parms{};

	Parms.IsSelected_0 = IsSelected_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C.StopOnHoverTweens
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_CoreChallengeSetItem_C::StopOnHoverTweens()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreChallengeSetItem_C", "StopOnHoverTweens");

	UObject::ProcessEvent(Func, nullptr);
}

}

