#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VFX_Function_Lib_Character

#include "Basic.hpp"


namespace SDK::Params
{

// Function VFX_Function_Lib_Character.VFX_Function_Lib_Character_C.MakeCharacter_Invisible
// 0x0078 (0x0078 - 0x0000)
struct VFX_Function_Lib_Character_C_MakeCharacter_Invisible final
{
public:
	class ADBDPlayer*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomizedSkeletalMesh*                CallFunc_GetCustomizedSkeletalMesh_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetComponents_ReturnValue;                // 0x0020(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible) == 0x000008, "Wrong alignment on VFX_Function_Lib_Character_C_MakeCharacter_Invisible");
static_assert(sizeof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible) == 0x000078, "Wrong size on VFX_Function_Lib_Character_C_MakeCharacter_Invisible");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, Character) == 0x000000, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::Character' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, __WorldContext) == 0x000008, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, CallFunc_GetCustomizedSkeletalMesh_ReturnValue) == 0x000010, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::CallFunc_GetCustomizedSkeletalMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, CallFunc_GetComponents_ReturnValue) == 0x000020, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::CallFunc_GetComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, CallFunc_Array_Get_Item) == 0x000048, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, CallFunc_GetChildrenComponents_Children) == 0x000050, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, Temp_int_Loop_Counter_Variable_1) == 0x00006C, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Invisible, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Invisible::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function VFX_Function_Lib_Character.VFX_Function_Lib_Character_C.MakeCharacter_Visible
// 0x0078 (0x0078 - 0x0000)
struct VFX_Function_Lib_Character_C_MakeCharacter_Visible final
{
public:
	class ADBDPlayer*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomizedSkeletalMesh*                CallFunc_GetCustomizedSkeletalMesh_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetComponents_ReturnValue;                // 0x0020(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_Function_Lib_Character_C_MakeCharacter_Visible) == 0x000008, "Wrong alignment on VFX_Function_Lib_Character_C_MakeCharacter_Visible");
static_assert(sizeof(VFX_Function_Lib_Character_C_MakeCharacter_Visible) == 0x000078, "Wrong size on VFX_Function_Lib_Character_C_MakeCharacter_Visible");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, Character) == 0x000000, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::Character' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, __WorldContext) == 0x000008, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, CallFunc_GetCustomizedSkeletalMesh_ReturnValue) == 0x000010, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::CallFunc_GetCustomizedSkeletalMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, CallFunc_GetComponents_ReturnValue) == 0x000020, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::CallFunc_GetComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, CallFunc_Array_Get_Item) == 0x000048, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, CallFunc_GetChildrenComponents_Children) == 0x000050, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, Temp_int_Loop_Counter_Variable_1) == 0x00006C, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MakeCharacter_Visible, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'VFX_Function_Lib_Character_C_MakeCharacter_Visible::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function VFX_Function_Lib_Character.VFX_Function_Lib_Character_C.ManageInteractiveMist
// 0x0020 (0x0020 - 0x0000)
struct VFX_Function_Lib_Character_C_ManageInteractiveMist final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        MistActor;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_Function_Lib_Character_C_ManageInteractiveMist) == 0x000008, "Wrong alignment on VFX_Function_Lib_Character_C_ManageInteractiveMist");
static_assert(sizeof(VFX_Function_Lib_Character_C_ManageInteractiveMist) == 0x000020, "Wrong size on VFX_Function_Lib_Character_C_ManageInteractiveMist");
static_assert(offsetof(VFX_Function_Lib_Character_C_ManageInteractiveMist, Pawn) == 0x000000, "Member 'VFX_Function_Lib_Character_C_ManageInteractiveMist::Pawn' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_ManageInteractiveMist, MistActor) == 0x000008, "Member 'VFX_Function_Lib_Character_C_ManageInteractiveMist::MistActor' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_ManageInteractiveMist, __WorldContext) == 0x000010, "Member 'VFX_Function_Lib_Character_C_ManageInteractiveMist::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_ManageInteractiveMist, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'VFX_Function_Lib_Character_C_ManageInteractiveMist::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function VFX_Function_Lib_Character.VFX_Function_Lib_Character_C.MaskFPV_Hidden
// 0x0098 (0x0098 - 0x0000)
struct VFX_Function_Lib_Character_C_MaskFPV_Hidden final
{
public:
	class ADBDPlayer*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomizedSkeletalMesh*                CallFunc_GetCustomizedSkeletalMesh_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetComponents_ReturnValue;                // 0x0018(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsLocallyObserved_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0048(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0080(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_Function_Lib_Character_C_MaskFPV_Hidden) == 0x000008, "Wrong alignment on VFX_Function_Lib_Character_C_MaskFPV_Hidden");
static_assert(sizeof(VFX_Function_Lib_Character_C_MaskFPV_Hidden) == 0x000098, "Wrong size on VFX_Function_Lib_Character_C_MaskFPV_Hidden");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, Character) == 0x000000, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::Character' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, __WorldContext) == 0x000008, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_GetCustomizedSkeletalMesh_ReturnValue) == 0x000010, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_GetCustomizedSkeletalMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_GetComponents_ReturnValue) == 0x000018, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_GetComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_IsLocallyObserved_ReturnValue) == 0x000028, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_IsLocallyObserved_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, Temp_int_Array_Index_Variable) == 0x000034, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, Temp_name_Variable) == 0x000048, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_Array_Get_Item) == 0x000058, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_GetChildrenComponents_Children) == 0x000060, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_BooleanAND_ReturnValue) == 0x00007D, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_Array_Contains_ReturnValue) == 0x00007E, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, Temp_name_Variable_1) == 0x000080, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_Array_Contains_ReturnValue_1) == 0x000090, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_Less_IntInt_ReturnValue_1) == 0x000091, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Hidden, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Hidden::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function VFX_Function_Lib_Character.VFX_Function_Lib_Character_C.MaskFPV_Visible
// 0x00A8 (0x00A8 - 0x0000)
struct VFX_Function_Lib_Character_C_MaskFPV_Visible final
{
public:
	class ADBDPlayer*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomizedSkeletalMesh*                CallFunc_GetCustomizedSkeletalMesh_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetComponents_ReturnValue;                // 0x0028(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x004C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0080(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x008C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_Function_Lib_Character_C_MaskFPV_Visible) == 0x000008, "Wrong alignment on VFX_Function_Lib_Character_C_MaskFPV_Visible");
static_assert(sizeof(VFX_Function_Lib_Character_C_MaskFPV_Visible) == 0x0000A8, "Wrong size on VFX_Function_Lib_Character_C_MaskFPV_Visible");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, Character) == 0x000000, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::Character' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, __WorldContext) == 0x000008, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_GetCustomizedSkeletalMesh_ReturnValue) == 0x000018, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_GetCustomizedSkeletalMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_GetComponents_ReturnValue) == 0x000028, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_GetComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, Temp_bool_True_if_break_was_hit_Variable) == 0x00003C, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, Temp_int_Array_Index_Variable) == 0x000040, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, Temp_name_Variable) == 0x00004C, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_Array_Get_Item) == 0x000058, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_GetChildrenComponents_Children) == 0x000060, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_BooleanAND_ReturnValue) == 0x00007D, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_Array_Contains_ReturnValue) == 0x00007E, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, Temp_name_Variable_1) == 0x000080, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, Temp_name_Variable_2) == 0x00008C, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_Array_Contains_ReturnValue_1) == 0x000098, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_Array_Contains_ReturnValue_2) == 0x000099, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, Temp_int_Loop_Counter_Variable_1) == 0x00009C, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VFX_Function_Lib_Character_C_MaskFPV_Visible, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'VFX_Function_Lib_Character_C_MaskFPV_Visible::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

