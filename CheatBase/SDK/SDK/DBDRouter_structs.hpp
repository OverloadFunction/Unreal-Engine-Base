#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDRouter

#include "Basic.hpp"


namespace SDK
{

// Enum DBDRouter.ETestRoutingEnum
// NumValues: 0x0003
enum class ETestRoutingEnum : uint32
{
	Some                                     = 0,
	Value                                    = 1,
	ETestRoutingEnum_MAX                     = 2,
};

// ScriptStruct DBDRouter.TestUStructParameter
// 0x0020 (0x0020 - 0x0000)
struct FTestUStructParameter final
{
public:
	int32                                         SomeInt;                                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETestRoutingEnum                              SomeEnum;                                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SomeString;                                        // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SomeBool;                                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SomeBoolDefaultTrue;                               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTestUStructParameter) == 0x000008, "Wrong alignment on FTestUStructParameter");
static_assert(sizeof(FTestUStructParameter) == 0x000020, "Wrong size on FTestUStructParameter");
static_assert(offsetof(FTestUStructParameter, SomeInt) == 0x000000, "Member 'FTestUStructParameter::SomeInt' has a wrong offset!");
static_assert(offsetof(FTestUStructParameter, SomeEnum) == 0x000004, "Member 'FTestUStructParameter::SomeEnum' has a wrong offset!");
static_assert(offsetof(FTestUStructParameter, SomeString) == 0x000008, "Member 'FTestUStructParameter::SomeString' has a wrong offset!");
static_assert(offsetof(FTestUStructParameter, SomeBool) == 0x000018, "Member 'FTestUStructParameter::SomeBool' has a wrong offset!");
static_assert(offsetof(FTestUStructParameter, SomeBoolDefaultTrue) == 0x000019, "Member 'FTestUStructParameter::SomeBoolDefaultTrue' has a wrong offset!");

}

