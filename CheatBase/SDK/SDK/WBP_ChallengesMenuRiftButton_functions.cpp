#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ChallengesMenuRiftButton

#include "Basic.hpp"

#include "WBP_ChallengesMenuRiftButton_classes.hpp"
#include "WBP_ChallengesMenuRiftButton_parameters.hpp"


namespace SDK
{

// Function WBP_ChallengesMenuRiftButton.WBP_ChallengesMenuRiftButton_C.ExecuteUbergraph_WBP_ChallengesMenuRiftButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengesMenuRiftButton_C::ExecuteUbergraph_WBP_ChallengesMenuRiftButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengesMenuRiftButton_C", "ExecuteUbergraph_WBP_ChallengesMenuRiftButton");

	Params::WBP_ChallengesMenuRiftButton_C_ExecuteUbergraph_WBP_ChallengesMenuRiftButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengesMenuRiftButton.WBP_ChallengesMenuRiftButton_C.SetBackgroundVisuals
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    isPremiumPass                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETierType                               tier                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengesMenuRiftButton_C::SetBackgroundVisuals(bool isPremiumPass, ETierType tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengesMenuRiftButton_C", "SetBackgroundVisuals");

	Params::WBP_ChallengesMenuRiftButton_C_SetBackgroundVisuals Parms{};

	Parms.isPremiumPass = isPremiumPass;
	Parms.tier = tier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengesMenuRiftButton.WBP_ChallengesMenuRiftButton_C.SetLockedVisuals
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLocked                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengesMenuRiftButton_C::SetLockedVisuals(bool IsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengesMenuRiftButton_C", "SetLockedVisuals");

	Params::WBP_ChallengesMenuRiftButton_C_SetLockedVisuals Parms{};

	Parms.IsLocked = IsLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengesMenuRiftButton.WBP_ChallengesMenuRiftButton_C.SetRiftPassTrackIcon
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    isPremiumPass                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengesMenuRiftButton_C::SetRiftPassTrackIcon(bool isPremiumPass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengesMenuRiftButton_C", "SetRiftPassTrackIcon");

	Params::WBP_ChallengesMenuRiftButton_C_SetRiftPassTrackIcon Parms{};

	Parms.isPremiumPass = isPremiumPass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengesMenuRiftButton.WBP_ChallengesMenuRiftButton_C.SetRiftProgressionColor
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETierType                               tier                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengesMenuRiftButton_C::SetRiftProgressionColor(ETierType tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengesMenuRiftButton_C", "SetRiftProgressionColor");

	Params::WBP_ChallengesMenuRiftButton_C_SetRiftProgressionColor Parms{};

	Parms.tier = tier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ChallengesMenuRiftButton.WBP_ChallengesMenuRiftButton_C.SetRiftProgressionImage
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percentage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ChallengesMenuRiftButton_C::SetRiftProgressionImage(float Percentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ChallengesMenuRiftButton_C", "SetRiftProgressionImage");

	Params::WBP_ChallengesMenuRiftButton_C_SetRiftProgressionImage Parms{};

	Parms.Percentage = Percentage;

	UObject::ProcessEvent(Func, &Parms);
}

}

