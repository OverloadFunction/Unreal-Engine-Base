#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ChallengesMenuChallengeSetWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ChallengesMenuChallengeSetWidget.WBP_ChallengesMenuChallengeSetWidget_C
// 0x0060 (0x0470 - 0x0410)
class UWBP_ChallengesMenuChallengeSetWidget_C final : public UChallengesMenuChallengeSetWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FLinearColor                           ScrollBarColor;                                    // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PreviewBackgroundTint;                             // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInstance>       SubTab_Material_Instance;                          // 0x0438(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_ChallengesMenuChallengeSetWidget(int32 EntryPoint);
	void OnLoaded_4B9E154D44076F2EAE239EA93685A753(class UObject* Loaded);
	void RefreshMenuSkin();
	void SetEventVisuals(const class FString& eventFrameLabel);
	void UpdateColorsOnEachChild(const struct FLinearColor& PreviewBackgroundTint_0);
	void UpdateTabBackground(TSoftObjectPtr<class UMaterialInterface> Soft_Material);

	TScriptInterface<class IChallengesMenuRitualsViewInterface> GetRitualsInterface() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ChallengesMenuChallengeSetWidget_C">();
	}
	static class UWBP_ChallengesMenuChallengeSetWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ChallengesMenuChallengeSetWidget_C>();
	}
};
static_assert(alignof(UWBP_ChallengesMenuChallengeSetWidget_C) == 0x000008, "Wrong alignment on UWBP_ChallengesMenuChallengeSetWidget_C");
static_assert(sizeof(UWBP_ChallengesMenuChallengeSetWidget_C) == 0x000470, "Wrong size on UWBP_ChallengesMenuChallengeSetWidget_C");
static_assert(offsetof(UWBP_ChallengesMenuChallengeSetWidget_C, UberGraphFrame) == 0x000410, "Member 'UWBP_ChallengesMenuChallengeSetWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuChallengeSetWidget_C, ScrollBarColor) == 0x000418, "Member 'UWBP_ChallengesMenuChallengeSetWidget_C::ScrollBarColor' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuChallengeSetWidget_C, PreviewBackgroundTint) == 0x000428, "Member 'UWBP_ChallengesMenuChallengeSetWidget_C::PreviewBackgroundTint' has a wrong offset!");
static_assert(offsetof(UWBP_ChallengesMenuChallengeSetWidget_C, SubTab_Material_Instance) == 0x000438, "Member 'UWBP_ChallengesMenuChallengeSetWidget_C::SubTab_Material_Instance' has a wrong offset!");

}

