#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreChallengeSetItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreChallengeSetItem.WBP_CoreChallengeSetItem_C
// 0x00A8 (0x0620 - 0x0578)
class UWBP_CoreChallengeSetItem_C final : public UCoreChallengeSetItemWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0578(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               Background;                                        // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               BUTTON_SIZE;                                       // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         MainContent;                                       // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              SelectedOverlay;                                   // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              TimerIcon;                                         // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        BGDefautOpacity;                                   // 0x05A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BGSelectedOpacity;                                 // 0x05B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ContentDefaultOpacity;                             // 0x05B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ContentSelectedOpacity;                            // 0x05C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ContentDisabledOpacity;                            // 0x05C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IconDefaultOpacity;                                // 0x05D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IconSelectedOpacity;                               // 0x05D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IconDisabledOpacity;                               // 0x05E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BorderDefaultOpacity;                              // 0x05E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BorderSelectedOpacity;                             // 0x05F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HoverBorderThickness;                              // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HoverAnimDuration;                                 // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HeaderBgColorName_1;                               // 0x0608(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HeaderBgColorName_2;                               // 0x0614(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_CoreChallengeSetItem(int32 EntryPoint);
	void OnHoverAnimation(bool IsHovered_0);
	void OnHovered();
	void OnPressed();
	void OnReleased();
	void OnSelectedChanged(bool IsSelected_0, bool withAnimation);
	void OnUnhovered();
	void PreConstruct(bool IsDesignTime);
	void SetColorBackground(class UColorTripleDataAsset* Color);
	void SetExpiredStateVisuals(bool isExpired);
	void SetSelectedState(const bool IsSelected_0);
	void StopOnHoverTweens();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreChallengeSetItem_C">();
	}
	static class UWBP_CoreChallengeSetItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreChallengeSetItem_C>();
	}
};
static_assert(alignof(UWBP_CoreChallengeSetItem_C) == 0x000008, "Wrong alignment on UWBP_CoreChallengeSetItem_C");
static_assert(sizeof(UWBP_CoreChallengeSetItem_C) == 0x000620, "Wrong size on UWBP_CoreChallengeSetItem_C");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, UberGraphFrame) == 0x000578, "Member 'UWBP_CoreChallengeSetItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, Background) == 0x000580, "Member 'UWBP_CoreChallengeSetItem_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, BUTTON_SIZE) == 0x000588, "Member 'UWBP_CoreChallengeSetItem_C::BUTTON_SIZE' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, MainContent) == 0x000590, "Member 'UWBP_CoreChallengeSetItem_C::MainContent' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, SelectedOverlay) == 0x000598, "Member 'UWBP_CoreChallengeSetItem_C::SelectedOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, TimerIcon) == 0x0005A0, "Member 'UWBP_CoreChallengeSetItem_C::TimerIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, BGDefautOpacity) == 0x0005A8, "Member 'UWBP_CoreChallengeSetItem_C::BGDefautOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, BGSelectedOpacity) == 0x0005B0, "Member 'UWBP_CoreChallengeSetItem_C::BGSelectedOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, ContentDefaultOpacity) == 0x0005B8, "Member 'UWBP_CoreChallengeSetItem_C::ContentDefaultOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, ContentSelectedOpacity) == 0x0005C0, "Member 'UWBP_CoreChallengeSetItem_C::ContentSelectedOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, ContentDisabledOpacity) == 0x0005C8, "Member 'UWBP_CoreChallengeSetItem_C::ContentDisabledOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, IconDefaultOpacity) == 0x0005D0, "Member 'UWBP_CoreChallengeSetItem_C::IconDefaultOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, IconSelectedOpacity) == 0x0005D8, "Member 'UWBP_CoreChallengeSetItem_C::IconSelectedOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, IconDisabledOpacity) == 0x0005E0, "Member 'UWBP_CoreChallengeSetItem_C::IconDisabledOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, BorderDefaultOpacity) == 0x0005E8, "Member 'UWBP_CoreChallengeSetItem_C::BorderDefaultOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, BorderSelectedOpacity) == 0x0005F0, "Member 'UWBP_CoreChallengeSetItem_C::BorderSelectedOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, HoverBorderThickness) == 0x0005F8, "Member 'UWBP_CoreChallengeSetItem_C::HoverBorderThickness' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, HoverAnimDuration) == 0x000600, "Member 'UWBP_CoreChallengeSetItem_C::HoverAnimDuration' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, HeaderBgColorName_1) == 0x000608, "Member 'UWBP_CoreChallengeSetItem_C::HeaderBgColorName_1' has a wrong offset!");
static_assert(offsetof(UWBP_CoreChallengeSetItem_C, HeaderBgColorName_2) == 0x000614, "Member 'UWBP_CoreChallengeSetItem_C::HeaderBgColorName_2' has a wrong offset!");

}

