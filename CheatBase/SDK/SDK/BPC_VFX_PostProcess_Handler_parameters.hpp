#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_VFX_PostProcess_Handler

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.ExecuteUbergraph_BPC_VFX_PostProcess_Handler
// 0x0028 (0x0028 - 0x0000)
struct BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             K2Node_DynamicCast_AsDBDPlayer;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler) == 0x000008, "Wrong alignment on BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler");
static_assert(sizeof(BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler) == 0x000028, "Wrong size on BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler, EntryPoint) == 0x000000, "Member 'BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler, K2Node_DynamicCast_AsDBDPlayer) == 0x000018, "Member 'BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler::K2Node_DynamicCast_AsDBDPlayer' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP Initialize Material Instance
// 0x0020 (0x0020 - 0x0000)
struct BPC_VFX_PostProcess_Handler_C_PP_Initialize_Material_Instance final
{
public:
	struct FGameplayTag                           SystemToSpawn;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Spawn_Material;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyObserved_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VFX_PostProcess_Handler_C_PP_Initialize_Material_Instance) == 0x000008, "Wrong alignment on BPC_VFX_PostProcess_Handler_C_PP_Initialize_Material_Instance");
static_assert(sizeof(BPC_VFX_PostProcess_Handler_C_PP_Initialize_Material_Instance) == 0x000020, "Wrong size on BPC_VFX_PostProcess_Handler_C_PP_Initialize_Material_Instance");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Initialize_Material_Instance, SystemToSpawn) == 0x000000, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Initialize_Material_Instance::SystemToSpawn' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Initialize_Material_Instance, Spawn_Material) == 0x000010, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Initialize_Material_Instance::Spawn_Material' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Initialize_Material_Instance, CallFunc_IsLocallyObserved_ReturnValue) == 0x000018, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Initialize_Material_Instance::CallFunc_IsLocallyObserved_ReturnValue' has a wrong offset!");

// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP Layer_Parameters_Update_Float
// 0x0058 (0x0058 - 0x0000)
struct BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float final
{
public:
	struct FGameplayTag                           MaterialInstanceTag;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParameterName;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        float_0;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo;           // 0x0020(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Map_Find_Value;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValueByInfo_Value_ImplicitCast; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float) == 0x000008, "Wrong alignment on BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float");
static_assert(sizeof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float) == 0x000058, "Wrong size on BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float, MaterialInstanceTag) == 0x000000, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float::MaterialInstanceTag' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float, ParameterName) == 0x00000C, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float::ParameterName' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float, float_0) == 0x000018, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float::float_0' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float, K2Node_MakeStruct_MaterialParameterInfo) == 0x000020, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float::K2Node_MakeStruct_MaterialParameterInfo' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float, CallFunc_Map_Find_Value) == 0x000048, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float, CallFunc_SetScalarParameterValueByInfo_Value_ImplicitCast) == 0x000054, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float::CallFunc_SetScalarParameterValueByInfo_Value_ImplicitCast' has a wrong offset!");

// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Blend_Weight_Add
// 0x0028 (0x0028 - 0x0000)
struct BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_Map_Find_Value;                           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0010(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add) == 0x000008, "Wrong alignment on BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add");
static_assert(sizeof(BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add) == 0x000028, "Wrong size on BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add, CallFunc_Map_Find_Value) == 0x000000, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add, CallFunc_Map_Find_ReturnValue) == 0x000008, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add, K2Node_MakeStruct_WeightedBlendable) == 0x000010, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add, CallFunc_Array_AddUnique_ReturnValue) == 0x000020, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Add::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Blend_Weight_Remove
// 0x0028 (0x0028 - 0x0000)
struct BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_Map_Find_Value;                           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0010(0x0010)(NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove) == 0x000008, "Wrong alignment on BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove");
static_assert(sizeof(BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove) == 0x000028, "Wrong size on BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove, CallFunc_Map_Find_Value) == 0x000000, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove, CallFunc_Map_Find_ReturnValue) == 0x000008, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove, K2Node_MakeStruct_WeightedBlendable) == 0x000010, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove, CallFunc_Array_RemoveItem_ReturnValue) == 0x000020, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Blend_Weight_Remove::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Layer_Parameters_Update_Linear_Color
// 0x0060 (0x0060 - 0x0000)
struct BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color final
{
public:
	struct FGameplayTag                           MaterialInstanceTag;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParameterName;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LinearColor;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo;           // 0x0028(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Map_Find_Value;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color) == 0x000008, "Wrong alignment on BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color");
static_assert(sizeof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color) == 0x000060, "Wrong size on BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color, MaterialInstanceTag) == 0x000000, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color::MaterialInstanceTag' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color, ParameterName) == 0x00000C, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color::ParameterName' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color, LinearColor) == 0x000018, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color::LinearColor' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color, K2Node_MakeStruct_MaterialParameterInfo) == 0x000028, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color::K2Node_MakeStruct_MaterialParameterInfo' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color, CallFunc_Map_Find_Value) == 0x000050, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Master_Parameters_Update_Linear_Color
// 0x0048 (0x0048 - 0x0000)
struct BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color final
{
public:
	struct FGameplayTag                           MaterialInstanceTag;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParameterName;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LinearColor;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color) == 0x000008, "Wrong alignment on BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color");
static_assert(sizeof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color) == 0x000048, "Wrong size on BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color, MaterialInstanceTag) == 0x000000, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color::MaterialInstanceTag' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color, ParameterName) == 0x00000C, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color::ParameterName' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color, LinearColor) == 0x000018, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color::LinearColor' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color, CallFunc_Map_Find_Value) == 0x000038, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Master_Parameters_Update_Scalar
// 0x0040 (0x0040 - 0x0000)
struct BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar final
{
public:
	struct FGameplayTag                           MaterialInstanceTag;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParameterName;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        float_0;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar) == 0x000008, "Wrong alignment on BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar");
static_assert(sizeof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar) == 0x000040, "Wrong size on BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar, MaterialInstanceTag) == 0x000000, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar::MaterialInstanceTag' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar, ParameterName) == 0x00000C, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar::ParameterName' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar, float_0) == 0x000018, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar::float_0' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar, CallFunc_Map_Find_Value) == 0x000030, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00003C, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Material_Add
// 0x0020 (0x0020 - 0x0000)
struct BPC_VFX_PostProcess_Handler_C_PP_Material_Add final
{
public:
	struct FGameplayTag                           MaterialInstanceTag;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Spawn_Parameters;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VFX_PostProcess_Handler_C_PP_Material_Add) == 0x000008, "Wrong alignment on BPC_VFX_PostProcess_Handler_C_PP_Material_Add");
static_assert(sizeof(BPC_VFX_PostProcess_Handler_C_PP_Material_Add) == 0x000020, "Wrong size on BPC_VFX_PostProcess_Handler_C_PP_Material_Add");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Material_Add, MaterialInstanceTag) == 0x000000, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Material_Add::MaterialInstanceTag' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Material_Add, Spawn_Parameters) == 0x000010, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Material_Add::Spawn_Parameters' has a wrong offset!");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Material_Add, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Material_Add::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Material_Create_Instance
// 0x0008 (0x0008 - 0x0000)
struct BPC_VFX_PostProcess_Handler_C_PP_Material_Create_Instance final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VFX_PostProcess_Handler_C_PP_Material_Create_Instance) == 0x000008, "Wrong alignment on BPC_VFX_PostProcess_Handler_C_PP_Material_Create_Instance");
static_assert(sizeof(BPC_VFX_PostProcess_Handler_C_PP_Material_Create_Instance) == 0x000008, "Wrong size on BPC_VFX_PostProcess_Handler_C_PP_Material_Create_Instance");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Material_Create_Instance, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Material_Create_Instance::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Material_Remove
// 0x000C (0x000C - 0x0000)
struct BPC_VFX_PostProcess_Handler_C_PP_Material_Remove final
{
public:
	struct FGameplayTag                           MaterialInstanceTag;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VFX_PostProcess_Handler_C_PP_Material_Remove) == 0x000004, "Wrong alignment on BPC_VFX_PostProcess_Handler_C_PP_Material_Remove");
static_assert(sizeof(BPC_VFX_PostProcess_Handler_C_PP_Material_Remove) == 0x00000C, "Wrong size on BPC_VFX_PostProcess_Handler_C_PP_Material_Remove");
static_assert(offsetof(BPC_VFX_PostProcess_Handler_C_PP_Material_Remove, MaterialInstanceTag) == 0x000000, "Member 'BPC_VFX_PostProcess_Handler_C_PP_Material_Remove::MaterialInstanceTag' has a wrong offset!");

}

