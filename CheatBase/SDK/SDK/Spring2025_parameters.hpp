#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Spring2025

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "AnimationUtilities_structs.hpp"
#include "Spring2025_structs.hpp"
#include "DeadByDaylight_structs.hpp"


namespace SDK::Params
{

// Function Spring2025.FuelGenerator.Authority_AddBlockingSource
// 0x0008 (0x0008 - 0x0000)
struct FuelGenerator_Authority_AddBlockingSource final
{
public:
	const class UObject*                          Source;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Authority_AddBlockingSource) == 0x000008, "Wrong alignment on FuelGenerator_Authority_AddBlockingSource");
static_assert(sizeof(FuelGenerator_Authority_AddBlockingSource) == 0x000008, "Wrong size on FuelGenerator_Authority_AddBlockingSource");
static_assert(offsetof(FuelGenerator_Authority_AddBlockingSource, Source) == 0x000000, "Member 'FuelGenerator_Authority_AddBlockingSource::Source' has a wrong offset!");

// Function Spring2025.FuelGenerator.Authority_OnChargeChanged
// 0x0010 (0x0010 - 0x0000)
struct FuelGenerator_Authority_OnChargeChanged final
{
public:
	class UChargeableComponent*                   ChargeableComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PercentCompletionChange;                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalPercentComplete;                              // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Authority_OnChargeChanged) == 0x000008, "Wrong alignment on FuelGenerator_Authority_OnChargeChanged");
static_assert(sizeof(FuelGenerator_Authority_OnChargeChanged) == 0x000010, "Wrong size on FuelGenerator_Authority_OnChargeChanged");
static_assert(offsetof(FuelGenerator_Authority_OnChargeChanged, ChargeableComponent) == 0x000000, "Member 'FuelGenerator_Authority_OnChargeChanged::ChargeableComponent' has a wrong offset!");
static_assert(offsetof(FuelGenerator_Authority_OnChargeChanged, PercentCompletionChange) == 0x000008, "Member 'FuelGenerator_Authority_OnChargeChanged::PercentCompletionChange' has a wrong offset!");
static_assert(offsetof(FuelGenerator_Authority_OnChargeChanged, TotalPercentComplete) == 0x00000C, "Member 'FuelGenerator_Authority_OnChargeChanged::TotalPercentComplete' has a wrong offset!");

// Function Spring2025.FuelGenerator.Authority_RepairDamage
// 0x0008 (0x0008 - 0x0000)
struct FuelGenerator_Authority_RepairDamage final
{
public:
	class ADBDPlayer*                             repairedBy;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Authority_RepairDamage) == 0x000008, "Wrong alignment on FuelGenerator_Authority_RepairDamage");
static_assert(sizeof(FuelGenerator_Authority_RepairDamage) == 0x000008, "Wrong size on FuelGenerator_Authority_RepairDamage");
static_assert(offsetof(FuelGenerator_Authority_RepairDamage, repairedBy) == 0x000000, "Member 'FuelGenerator_Authority_RepairDamage::repairedBy' has a wrong offset!");

// Function Spring2025.FuelGenerator.Authority_SetRepaired
// 0x0002 (0x0002 - 0x0000)
struct FuelGenerator_Authority_SetRepaired final
{
public:
	bool                                          showGeneratorCloneLoudNoise;                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          isAutoCompleted;                                   // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Authority_SetRepaired) == 0x000001, "Wrong alignment on FuelGenerator_Authority_SetRepaired");
static_assert(sizeof(FuelGenerator_Authority_SetRepaired) == 0x000002, "Wrong size on FuelGenerator_Authority_SetRepaired");
static_assert(offsetof(FuelGenerator_Authority_SetRepaired, showGeneratorCloneLoudNoise) == 0x000000, "Member 'FuelGenerator_Authority_SetRepaired::showGeneratorCloneLoudNoise' has a wrong offset!");
static_assert(offsetof(FuelGenerator_Authority_SetRepaired, isAutoCompleted) == 0x000001, "Member 'FuelGenerator_Authority_SetRepaired::isAutoCompleted' has a wrong offset!");

// Function Spring2025.FuelGenerator.Cosmetic_ClampTopActivationSingleLight
// 0x0010 (0x0010 - 0x0000)
struct FuelGenerator_Cosmetic_ClampTopActivationSingleLight final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0004(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Cosmetic_ClampTopActivationSingleLight) == 0x000004, "Wrong alignment on FuelGenerator_Cosmetic_ClampTopActivationSingleLight");
static_assert(sizeof(FuelGenerator_Cosmetic_ClampTopActivationSingleLight) == 0x000010, "Wrong size on FuelGenerator_Cosmetic_ClampTopActivationSingleLight");
static_assert(offsetof(FuelGenerator_Cosmetic_ClampTopActivationSingleLight, Distance) == 0x000000, "Member 'FuelGenerator_Cosmetic_ClampTopActivationSingleLight::Distance' has a wrong offset!");
static_assert(offsetof(FuelGenerator_Cosmetic_ClampTopActivationSingleLight, ParameterName) == 0x000004, "Member 'FuelGenerator_Cosmetic_ClampTopActivationSingleLight::ParameterName' has a wrong offset!");

// Function Spring2025.FuelGenerator.Cosmetic_OnBlockingStatusChanged
// 0x0001 (0x0001 - 0x0000)
struct FuelGenerator_Cosmetic_OnBlockingStatusChanged final
{
public:
	bool                                          IsBlocked;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Cosmetic_OnBlockingStatusChanged) == 0x000001, "Wrong alignment on FuelGenerator_Cosmetic_OnBlockingStatusChanged");
static_assert(sizeof(FuelGenerator_Cosmetic_OnBlockingStatusChanged) == 0x000001, "Wrong size on FuelGenerator_Cosmetic_OnBlockingStatusChanged");
static_assert(offsetof(FuelGenerator_Cosmetic_OnBlockingStatusChanged, IsBlocked) == 0x000000, "Member 'FuelGenerator_Cosmetic_OnBlockingStatusChanged::IsBlocked' has a wrong offset!");

// Function Spring2025.FuelGenerator.Cosmetic_OnDamageStart
// 0x0001 (0x0001 - 0x0000)
struct FuelGenerator_Cosmetic_OnDamageStart final
{
public:
	bool                                          intensified;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Cosmetic_OnDamageStart) == 0x000001, "Wrong alignment on FuelGenerator_Cosmetic_OnDamageStart");
static_assert(sizeof(FuelGenerator_Cosmetic_OnDamageStart) == 0x000001, "Wrong size on FuelGenerator_Cosmetic_OnDamageStart");
static_assert(offsetof(FuelGenerator_Cosmetic_OnDamageStart, intensified) == 0x000000, "Member 'FuelGenerator_Cosmetic_OnDamageStart::intensified' has a wrong offset!");

// Function Spring2025.FuelGenerator.Cosmetic_OnRepaired
// 0x0002 (0x0002 - 0x0000)
struct FuelGenerator_Cosmetic_OnRepaired final
{
public:
	bool                                          shouldShowGeneratorOutline;                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          isAutoCompleted;                                   // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Cosmetic_OnRepaired) == 0x000001, "Wrong alignment on FuelGenerator_Cosmetic_OnRepaired");
static_assert(sizeof(FuelGenerator_Cosmetic_OnRepaired) == 0x000002, "Wrong size on FuelGenerator_Cosmetic_OnRepaired");
static_assert(offsetof(FuelGenerator_Cosmetic_OnRepaired, shouldShowGeneratorOutline) == 0x000000, "Member 'FuelGenerator_Cosmetic_OnRepaired::shouldShowGeneratorOutline' has a wrong offset!");
static_assert(offsetof(FuelGenerator_Cosmetic_OnRepaired, isAutoCompleted) == 0x000001, "Member 'FuelGenerator_Cosmetic_OnRepaired::isAutoCompleted' has a wrong offset!");

// Function Spring2025.FuelGenerator.Cosmetic_OnRepairFinish
// 0x0010 (0x0010 - 0x0000)
struct FuelGenerator_Cosmetic_OnRepairFinish final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractor*                            Interactor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Cosmetic_OnRepairFinish) == 0x000008, "Wrong alignment on FuelGenerator_Cosmetic_OnRepairFinish");
static_assert(sizeof(FuelGenerator_Cosmetic_OnRepairFinish) == 0x000010, "Wrong size on FuelGenerator_Cosmetic_OnRepairFinish");
static_assert(offsetof(FuelGenerator_Cosmetic_OnRepairFinish, Player) == 0x000000, "Member 'FuelGenerator_Cosmetic_OnRepairFinish::Player' has a wrong offset!");
static_assert(offsetof(FuelGenerator_Cosmetic_OnRepairFinish, Interactor) == 0x000008, "Member 'FuelGenerator_Cosmetic_OnRepairFinish::Interactor' has a wrong offset!");

// Function Spring2025.FuelGenerator.Cosmetic_OnRepairStart
// 0x0008 (0x0008 - 0x0000)
struct FuelGenerator_Cosmetic_OnRepairStart final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Cosmetic_OnRepairStart) == 0x000008, "Wrong alignment on FuelGenerator_Cosmetic_OnRepairStart");
static_assert(sizeof(FuelGenerator_Cosmetic_OnRepairStart) == 0x000008, "Wrong size on FuelGenerator_Cosmetic_OnRepairStart");
static_assert(offsetof(FuelGenerator_Cosmetic_OnRepairStart, Player) == 0x000000, "Member 'FuelGenerator_Cosmetic_OnRepairStart::Player' has a wrong offset!");

// Function Spring2025.FuelGenerator.Cosmetic_OnUpdateChargeProgress
// 0x0004 (0x0004 - 0x0000)
struct FuelGenerator_Cosmetic_OnUpdateChargeProgress final
{
public:
	float                                         newPercentComplete;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Cosmetic_OnUpdateChargeProgress) == 0x000004, "Wrong alignment on FuelGenerator_Cosmetic_OnUpdateChargeProgress");
static_assert(sizeof(FuelGenerator_Cosmetic_OnUpdateChargeProgress) == 0x000004, "Wrong size on FuelGenerator_Cosmetic_OnUpdateChargeProgress");
static_assert(offsetof(FuelGenerator_Cosmetic_OnUpdateChargeProgress, newPercentComplete) == 0x000000, "Member 'FuelGenerator_Cosmetic_OnUpdateChargeProgress::newPercentComplete' has a wrong offset!");

// Function Spring2025.FuelGenerator.Multicast_BlockGenerator
// 0x0010 (0x0010 - 0x0000)
struct FuelGenerator_Multicast_BlockGenerator final
{
public:
	TArray<class ADBDPlayer*>                     repairers;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Multicast_BlockGenerator) == 0x000008, "Wrong alignment on FuelGenerator_Multicast_BlockGenerator");
static_assert(sizeof(FuelGenerator_Multicast_BlockGenerator) == 0x000010, "Wrong size on FuelGenerator_Multicast_BlockGenerator");
static_assert(offsetof(FuelGenerator_Multicast_BlockGenerator, repairers) == 0x000000, "Member 'FuelGenerator_Multicast_BlockGenerator::repairers' has a wrong offset!");

// Function Spring2025.FuelGenerator.Multicast_OnRepaired
// 0x0008 (0x0008 - 0x0000)
struct FuelGenerator_Multicast_OnRepaired final
{
public:
	bool                                          showGeneratorCloneLoudNoise;                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          isAutoCompleted;                                   // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         updatedRemainingGeneratorCount;                    // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Multicast_OnRepaired) == 0x000004, "Wrong alignment on FuelGenerator_Multicast_OnRepaired");
static_assert(sizeof(FuelGenerator_Multicast_OnRepaired) == 0x000008, "Wrong size on FuelGenerator_Multicast_OnRepaired");
static_assert(offsetof(FuelGenerator_Multicast_OnRepaired, showGeneratorCloneLoudNoise) == 0x000000, "Member 'FuelGenerator_Multicast_OnRepaired::showGeneratorCloneLoudNoise' has a wrong offset!");
static_assert(offsetof(FuelGenerator_Multicast_OnRepaired, isAutoCompleted) == 0x000001, "Member 'FuelGenerator_Multicast_OnRepaired::isAutoCompleted' has a wrong offset!");
static_assert(offsetof(FuelGenerator_Multicast_OnRepaired, updatedRemainingGeneratorCount) == 0x000004, "Member 'FuelGenerator_Multicast_OnRepaired::updatedRemainingGeneratorCount' has a wrong offset!");

// Function Spring2025.FuelGenerator.Multicast_SetRepairInteractionsObstructed
// 0x0010 (0x0010 - 0x0000)
struct FuelGenerator_Multicast_SetRepairInteractionsObstructed final
{
public:
	TArray<EGeneratorInteractableZone>            interactorZonesBlocked;                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_Multicast_SetRepairInteractionsObstructed) == 0x000008, "Wrong alignment on FuelGenerator_Multicast_SetRepairInteractionsObstructed");
static_assert(sizeof(FuelGenerator_Multicast_SetRepairInteractionsObstructed) == 0x000010, "Wrong size on FuelGenerator_Multicast_SetRepairInteractionsObstructed");
static_assert(offsetof(FuelGenerator_Multicast_SetRepairInteractionsObstructed, interactorZonesBlocked) == 0x000000, "Member 'FuelGenerator_Multicast_SetRepairInteractionsObstructed::interactorZonesBlocked' has a wrong offset!");

// Function Spring2025.FuelGenerator.OnChargeChanged
// 0x0010 (0x0010 - 0x0000)
struct FuelGenerator_OnChargeChanged final
{
public:
	class UChargeableComponent*                   ChargeableComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Percent;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FuelGenerator_OnChargeChanged) == 0x000008, "Wrong alignment on FuelGenerator_OnChargeChanged");
static_assert(sizeof(FuelGenerator_OnChargeChanged) == 0x000010, "Wrong size on FuelGenerator_OnChargeChanged");
static_assert(offsetof(FuelGenerator_OnChargeChanged, ChargeableComponent) == 0x000000, "Member 'FuelGenerator_OnChargeChanged::ChargeableComponent' has a wrong offset!");
static_assert(offsetof(FuelGenerator_OnChargeChanged, Percent) == 0x000008, "Member 'FuelGenerator_OnChargeChanged::Percent' has a wrong offset!");

// Function Spring2025.FuelGenerator.OnGeneratorBlockMontageEnded
// 0x0028 (0x0028 - 0x0000)
struct FuelGenerator_OnGeneratorBlockMontageEnded final
{
public:
	struct FAnimationMontageDescriptor            animMontageID;                                     // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
	bool                                          interrupted;                                       // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FuelGenerator_OnGeneratorBlockMontageEnded) == 0x000008, "Wrong alignment on FuelGenerator_OnGeneratorBlockMontageEnded");
static_assert(sizeof(FuelGenerator_OnGeneratorBlockMontageEnded) == 0x000028, "Wrong size on FuelGenerator_OnGeneratorBlockMontageEnded");
static_assert(offsetof(FuelGenerator_OnGeneratorBlockMontageEnded, animMontageID) == 0x000000, "Member 'FuelGenerator_OnGeneratorBlockMontageEnded::animMontageID' has a wrong offset!");
static_assert(offsetof(FuelGenerator_OnGeneratorBlockMontageEnded, interrupted) == 0x000020, "Member 'FuelGenerator_OnGeneratorBlockMontageEnded::interrupted' has a wrong offset!");

// Function Spring2025.FuelGenerator.OnRegressionStateChanged
// 0x0010 (0x0010 - 0x0000)
struct FuelGenerator_OnRegressionStateChanged final
{
public:
	bool                                          regressing;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             lastDamageChangeSource;                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_OnRegressionStateChanged) == 0x000008, "Wrong alignment on FuelGenerator_OnRegressionStateChanged");
static_assert(sizeof(FuelGenerator_OnRegressionStateChanged) == 0x000010, "Wrong size on FuelGenerator_OnRegressionStateChanged");
static_assert(offsetof(FuelGenerator_OnRegressionStateChanged, regressing) == 0x000000, "Member 'FuelGenerator_OnRegressionStateChanged::regressing' has a wrong offset!");
static_assert(offsetof(FuelGenerator_OnRegressionStateChanged, lastDamageChangeSource) == 0x000008, "Member 'FuelGenerator_OnRegressionStateChanged::lastDamageChangeSource' has a wrong offset!");

// Function Spring2025.FuelGenerator.PostAkEvent
// 0x0028 (0x0028 - 0x0000)
struct FuelGenerator_PostAkEvent final
{
public:
	class UAkAudioEvent*                          akEvent;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         callbackMask;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> postEventCallback; // 0x000C(0x0014)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FuelGenerator_PostAkEvent) == 0x000008, "Wrong alignment on FuelGenerator_PostAkEvent");
static_assert(sizeof(FuelGenerator_PostAkEvent) == 0x000028, "Wrong size on FuelGenerator_PostAkEvent");
static_assert(offsetof(FuelGenerator_PostAkEvent, akEvent) == 0x000000, "Member 'FuelGenerator_PostAkEvent::akEvent' has a wrong offset!");
static_assert(offsetof(FuelGenerator_PostAkEvent, callbackMask) == 0x000008, "Member 'FuelGenerator_PostAkEvent::callbackMask' has a wrong offset!");
static_assert(offsetof(FuelGenerator_PostAkEvent, postEventCallback) == 0x00000C, "Member 'FuelGenerator_PostAkEvent::postEventCallback' has a wrong offset!");
static_assert(offsetof(FuelGenerator_PostAkEvent, ReturnValue) == 0x000020, "Member 'FuelGenerator_PostAkEvent::ReturnValue' has a wrong offset!");

// Function Spring2025.FuelGenerator.SetIsAutoCompleted
// 0x0001 (0x0001 - 0x0000)
struct FuelGenerator_SetIsAutoCompleted final
{
public:
	bool                                          isAutoCompleted;                                   // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_SetIsAutoCompleted) == 0x000001, "Wrong alignment on FuelGenerator_SetIsAutoCompleted");
static_assert(sizeof(FuelGenerator_SetIsAutoCompleted) == 0x000001, "Wrong size on FuelGenerator_SetIsAutoCompleted");
static_assert(offsetof(FuelGenerator_SetIsAutoCompleted, isAutoCompleted) == 0x000000, "Member 'FuelGenerator_SetIsAutoCompleted::isAutoCompleted' has a wrong offset!");

// Function Spring2025.FuelGenerator.GetChargePercentComplete
// 0x0004 (0x0004 - 0x0000)
struct FuelGenerator_GetChargePercentComplete final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_GetChargePercentComplete) == 0x000004, "Wrong alignment on FuelGenerator_GetChargePercentComplete");
static_assert(sizeof(FuelGenerator_GetChargePercentComplete) == 0x000004, "Wrong size on FuelGenerator_GetChargePercentComplete");
static_assert(offsetof(FuelGenerator_GetChargePercentComplete, ReturnValue) == 0x000000, "Member 'FuelGenerator_GetChargePercentComplete::ReturnValue' has a wrong offset!");

// Function Spring2025.FuelGenerator.GetGeneratorChargeComponent
// 0x0008 (0x0008 - 0x0000)
struct FuelGenerator_GetGeneratorChargeComponent final
{
public:
	class UChargeableComponent*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_GetGeneratorChargeComponent) == 0x000008, "Wrong alignment on FuelGenerator_GetGeneratorChargeComponent");
static_assert(sizeof(FuelGenerator_GetGeneratorChargeComponent) == 0x000008, "Wrong size on FuelGenerator_GetGeneratorChargeComponent");
static_assert(offsetof(FuelGenerator_GetGeneratorChargeComponent, ReturnValue) == 0x000000, "Member 'FuelGenerator_GetGeneratorChargeComponent::ReturnValue' has a wrong offset!");

// Function Spring2025.FuelGenerator.GetIsAutoCompleted
// 0x0001 (0x0001 - 0x0000)
struct FuelGenerator_GetIsAutoCompleted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_GetIsAutoCompleted) == 0x000001, "Wrong alignment on FuelGenerator_GetIsAutoCompleted");
static_assert(sizeof(FuelGenerator_GetIsAutoCompleted) == 0x000001, "Wrong size on FuelGenerator_GetIsAutoCompleted");
static_assert(offsetof(FuelGenerator_GetIsAutoCompleted, ReturnValue) == 0x000000, "Member 'FuelGenerator_GetIsAutoCompleted::ReturnValue' has a wrong offset!");

// Function Spring2025.FuelGenerator.IsBeingDamagedByKiller
// 0x0001 (0x0001 - 0x0000)
struct FuelGenerator_IsBeingDamagedByKiller final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_IsBeingDamagedByKiller) == 0x000001, "Wrong alignment on FuelGenerator_IsBeingDamagedByKiller");
static_assert(sizeof(FuelGenerator_IsBeingDamagedByKiller) == 0x000001, "Wrong size on FuelGenerator_IsBeingDamagedByKiller");
static_assert(offsetof(FuelGenerator_IsBeingDamagedByKiller, ReturnValue) == 0x000000, "Member 'FuelGenerator_IsBeingDamagedByKiller::ReturnValue' has a wrong offset!");

// Function Spring2025.FuelGenerator.TriggerLoudNoiseIfNeeded
// 0x0008 (0x0008 - 0x0000)
struct FuelGenerator_TriggerLoudNoiseIfNeeded final
{
public:
	class AActor*                                 NoiseInstigator;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGenerator_TriggerLoudNoiseIfNeeded) == 0x000008, "Wrong alignment on FuelGenerator_TriggerLoudNoiseIfNeeded");
static_assert(sizeof(FuelGenerator_TriggerLoudNoiseIfNeeded) == 0x000008, "Wrong size on FuelGenerator_TriggerLoudNoiseIfNeeded");
static_assert(offsetof(FuelGenerator_TriggerLoudNoiseIfNeeded, NoiseInstigator) == 0x000000, "Member 'FuelGenerator_TriggerLoudNoiseIfNeeded::NoiseInstigator' has a wrong offset!");

// Function Spring2025.FuelGeneratorRevealerStatusEffect.OnRep_RevealedFuelGenerator
// 0x0008 (0x0008 - 0x0000)
struct FuelGeneratorRevealerStatusEffect_OnRep_RevealedFuelGenerator final
{
public:
	class AFuelGenerator*                         previousRevealedGenerator;                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FuelGeneratorRevealerStatusEffect_OnRep_RevealedFuelGenerator) == 0x000008, "Wrong alignment on FuelGeneratorRevealerStatusEffect_OnRep_RevealedFuelGenerator");
static_assert(sizeof(FuelGeneratorRevealerStatusEffect_OnRep_RevealedFuelGenerator) == 0x000008, "Wrong size on FuelGeneratorRevealerStatusEffect_OnRep_RevealedFuelGenerator");
static_assert(offsetof(FuelGeneratorRevealerStatusEffect_OnRep_RevealedFuelGenerator, previousRevealedGenerator) == 0x000000, "Member 'FuelGeneratorRevealerStatusEffect_OnRep_RevealedFuelGenerator::previousRevealedGenerator' has a wrong offset!");

// Function Spring2025.GameObjective_ActivatedGenerators_FuelGenerators.OnRep_FuelGeneratorCount
// 0x0004 (0x0004 - 0x0000)
struct GameObjective_ActivatedGenerators_FuelGenerators_OnRep_FuelGeneratorCount final
{
public:
	int32                                         previousCount;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameObjective_ActivatedGenerators_FuelGenerators_OnRep_FuelGeneratorCount) == 0x000004, "Wrong alignment on GameObjective_ActivatedGenerators_FuelGenerators_OnRep_FuelGeneratorCount");
static_assert(sizeof(GameObjective_ActivatedGenerators_FuelGenerators_OnRep_FuelGeneratorCount) == 0x000004, "Wrong size on GameObjective_ActivatedGenerators_FuelGenerators_OnRep_FuelGeneratorCount");
static_assert(offsetof(GameObjective_ActivatedGenerators_FuelGenerators_OnRep_FuelGeneratorCount, previousCount) == 0x000000, "Member 'GameObjective_ActivatedGenerators_FuelGenerators_OnRep_FuelGeneratorCount::previousCount' has a wrong offset!");

// Function Spring2025.GameObjective_ActivatedGenerators_FuelGenerators.OnRep_StandardGeneratorCount
// 0x0004 (0x0004 - 0x0000)
struct GameObjective_ActivatedGenerators_FuelGenerators_OnRep_StandardGeneratorCount final
{
public:
	int32                                         previousCount;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameObjective_ActivatedGenerators_FuelGenerators_OnRep_StandardGeneratorCount) == 0x000004, "Wrong alignment on GameObjective_ActivatedGenerators_FuelGenerators_OnRep_StandardGeneratorCount");
static_assert(sizeof(GameObjective_ActivatedGenerators_FuelGenerators_OnRep_StandardGeneratorCount) == 0x000004, "Wrong size on GameObjective_ActivatedGenerators_FuelGenerators_OnRep_StandardGeneratorCount");
static_assert(offsetof(GameObjective_ActivatedGenerators_FuelGenerators_OnRep_StandardGeneratorCount, previousCount) == 0x000000, "Member 'GameObjective_ActivatedGenerators_FuelGenerators_OnRep_StandardGeneratorCount::previousCount' has a wrong offset!");

// Function Spring2025.GameObjective_ActivatedGenerators_FuelGenerators.GetFuelGeneratorCount
// 0x0004 (0x0004 - 0x0000)
struct GameObjective_ActivatedGenerators_FuelGenerators_GetFuelGeneratorCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameObjective_ActivatedGenerators_FuelGenerators_GetFuelGeneratorCount) == 0x000004, "Wrong alignment on GameObjective_ActivatedGenerators_FuelGenerators_GetFuelGeneratorCount");
static_assert(sizeof(GameObjective_ActivatedGenerators_FuelGenerators_GetFuelGeneratorCount) == 0x000004, "Wrong size on GameObjective_ActivatedGenerators_FuelGenerators_GetFuelGeneratorCount");
static_assert(offsetof(GameObjective_ActivatedGenerators_FuelGenerators_GetFuelGeneratorCount, ReturnValue) == 0x000000, "Member 'GameObjective_ActivatedGenerators_FuelGenerators_GetFuelGeneratorCount::ReturnValue' has a wrong offset!");

// Function Spring2025.GameObjective_ActivatedGenerators_FuelGenerators.GetStandardGeneratorCount
// 0x0004 (0x0004 - 0x0000)
struct GameObjective_ActivatedGenerators_FuelGenerators_GetStandardGeneratorCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameObjective_ActivatedGenerators_FuelGenerators_GetStandardGeneratorCount) == 0x000004, "Wrong alignment on GameObjective_ActivatedGenerators_FuelGenerators_GetStandardGeneratorCount");
static_assert(sizeof(GameObjective_ActivatedGenerators_FuelGenerators_GetStandardGeneratorCount) == 0x000004, "Wrong size on GameObjective_ActivatedGenerators_FuelGenerators_GetStandardGeneratorCount");
static_assert(offsetof(GameObjective_ActivatedGenerators_FuelGenerators_GetStandardGeneratorCount, ReturnValue) == 0x000000, "Member 'GameObjective_ActivatedGenerators_FuelGenerators_GetStandardGeneratorCount::ReturnValue' has a wrong offset!");

// Function Spring2025.JerryCan.Cosmetic_OnChargeChanged
// 0x0004 (0x0004 - 0x0000)
struct JerryCan_Cosmetic_OnChargeChanged final
{
public:
	float                                         chargeValue;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JerryCan_Cosmetic_OnChargeChanged) == 0x000004, "Wrong alignment on JerryCan_Cosmetic_OnChargeChanged");
static_assert(sizeof(JerryCan_Cosmetic_OnChargeChanged) == 0x000004, "Wrong size on JerryCan_Cosmetic_OnChargeChanged");
static_assert(offsetof(JerryCan_Cosmetic_OnChargeChanged, chargeValue) == 0x000000, "Member 'JerryCan_Cosmetic_OnChargeChanged::chargeValue' has a wrong offset!");

// Function Spring2025.JerryCan.Cosmetic_OnFuelRemovalStarted
// 0x0010 (0x0010 - 0x0000)
struct JerryCan_Cosmetic_OnFuelRemovalStarted final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 fuelReceiver;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JerryCan_Cosmetic_OnFuelRemovalStarted) == 0x000008, "Wrong alignment on JerryCan_Cosmetic_OnFuelRemovalStarted");
static_assert(sizeof(JerryCan_Cosmetic_OnFuelRemovalStarted) == 0x000010, "Wrong size on JerryCan_Cosmetic_OnFuelRemovalStarted");
static_assert(offsetof(JerryCan_Cosmetic_OnFuelRemovalStarted, Player) == 0x000000, "Member 'JerryCan_Cosmetic_OnFuelRemovalStarted::Player' has a wrong offset!");
static_assert(offsetof(JerryCan_Cosmetic_OnFuelRemovalStarted, fuelReceiver) == 0x000008, "Member 'JerryCan_Cosmetic_OnFuelRemovalStarted::fuelReceiver' has a wrong offset!");

// Function Spring2025.JerryCan.Cosmetic_OnFuelRemovalStopped
// 0x0008 (0x0008 - 0x0000)
struct JerryCan_Cosmetic_OnFuelRemovalStopped final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JerryCan_Cosmetic_OnFuelRemovalStopped) == 0x000008, "Wrong alignment on JerryCan_Cosmetic_OnFuelRemovalStopped");
static_assert(sizeof(JerryCan_Cosmetic_OnFuelRemovalStopped) == 0x000008, "Wrong size on JerryCan_Cosmetic_OnFuelRemovalStopped");
static_assert(offsetof(JerryCan_Cosmetic_OnFuelRemovalStopped, Player) == 0x000000, "Member 'JerryCan_Cosmetic_OnFuelRemovalStopped::Player' has a wrong offset!");

// Function Spring2025.JerryCan.Cosmetic_OnJerryCanAcquired
// 0x0001 (0x0001 - 0x0000)
struct JerryCan_Cosmetic_OnJerryCanAcquired final
{
public:
	bool                                          IsAcquired;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JerryCan_Cosmetic_OnJerryCanAcquired) == 0x000001, "Wrong alignment on JerryCan_Cosmetic_OnJerryCanAcquired");
static_assert(sizeof(JerryCan_Cosmetic_OnJerryCanAcquired) == 0x000001, "Wrong size on JerryCan_Cosmetic_OnJerryCanAcquired");
static_assert(offsetof(JerryCan_Cosmetic_OnJerryCanAcquired, IsAcquired) == 0x000000, "Member 'JerryCan_Cosmetic_OnJerryCanAcquired::IsAcquired' has a wrong offset!");

// Function Spring2025.JerryCan.Cosmetic_OnPickedUpFromGround
// 0x0008 (0x0008 - 0x0000)
struct JerryCan_Cosmetic_OnPickedUpFromGround final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JerryCan_Cosmetic_OnPickedUpFromGround) == 0x000008, "Wrong alignment on JerryCan_Cosmetic_OnPickedUpFromGround");
static_assert(sizeof(JerryCan_Cosmetic_OnPickedUpFromGround) == 0x000008, "Wrong size on JerryCan_Cosmetic_OnPickedUpFromGround");
static_assert(offsetof(JerryCan_Cosmetic_OnPickedUpFromGround, Player) == 0x000000, "Member 'JerryCan_Cosmetic_OnPickedUpFromGround::Player' has a wrong offset!");

// Function Spring2025.JerryCan.Cosmetic_OnPickedUpFromPump
// 0x0008 (0x0008 - 0x0000)
struct JerryCan_Cosmetic_OnPickedUpFromPump final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JerryCan_Cosmetic_OnPickedUpFromPump) == 0x000008, "Wrong alignment on JerryCan_Cosmetic_OnPickedUpFromPump");
static_assert(sizeof(JerryCan_Cosmetic_OnPickedUpFromPump) == 0x000008, "Wrong size on JerryCan_Cosmetic_OnPickedUpFromPump");
static_assert(offsetof(JerryCan_Cosmetic_OnPickedUpFromPump, Player) == 0x000000, "Member 'JerryCan_Cosmetic_OnPickedUpFromPump::Player' has a wrong offset!");

// Function Spring2025.JerryCan.Multicast_OnEmptyJerryCanDropped
// 0x0001 (0x0001 - 0x0000)
struct JerryCan_Multicast_OnEmptyJerryCanDropped final
{
public:
	EItemDropType                                 dropType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JerryCan_Multicast_OnEmptyJerryCanDropped) == 0x000001, "Wrong alignment on JerryCan_Multicast_OnEmptyJerryCanDropped");
static_assert(sizeof(JerryCan_Multicast_OnEmptyJerryCanDropped) == 0x000001, "Wrong size on JerryCan_Multicast_OnEmptyJerryCanDropped");
static_assert(offsetof(JerryCan_Multicast_OnEmptyJerryCanDropped, dropType) == 0x000000, "Member 'JerryCan_Multicast_OnEmptyJerryCanDropped::dropType' has a wrong offset!");

// Function Spring2025.JerryCan.Multicast_OnJerryCanAcquired
// 0x0001 (0x0001 - 0x0000)
struct JerryCan_Multicast_OnJerryCanAcquired final
{
public:
	bool                                          IsAcquired;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JerryCan_Multicast_OnJerryCanAcquired) == 0x000001, "Wrong alignment on JerryCan_Multicast_OnJerryCanAcquired");
static_assert(sizeof(JerryCan_Multicast_OnJerryCanAcquired) == 0x000001, "Wrong size on JerryCan_Multicast_OnJerryCanAcquired");
static_assert(offsetof(JerryCan_Multicast_OnJerryCanAcquired, IsAcquired) == 0x000000, "Member 'JerryCan_Multicast_OnJerryCanAcquired::IsAcquired' has a wrong offset!");

// Function Spring2025.JerryCan.Multicast_OnJerryCanPickedUp
// 0x0010 (0x0010 - 0x0000)
struct JerryCan_Multicast_OnJerryCanPickedUp final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          wasPickedUpFromFuelPump;                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(JerryCan_Multicast_OnJerryCanPickedUp) == 0x000008, "Wrong alignment on JerryCan_Multicast_OnJerryCanPickedUp");
static_assert(sizeof(JerryCan_Multicast_OnJerryCanPickedUp) == 0x000010, "Wrong size on JerryCan_Multicast_OnJerryCanPickedUp");
static_assert(offsetof(JerryCan_Multicast_OnJerryCanPickedUp, Player) == 0x000000, "Member 'JerryCan_Multicast_OnJerryCanPickedUp::Player' has a wrong offset!");
static_assert(offsetof(JerryCan_Multicast_OnJerryCanPickedUp, wasPickedUpFromFuelPump) == 0x000008, "Member 'JerryCan_Multicast_OnJerryCanPickedUp::wasPickedUpFromFuelPump' has a wrong offset!");

// Function Spring2025.JerryCan.OnJerryCanChargePercentChange
// 0x0004 (0x0004 - 0x0000)
struct JerryCan_OnJerryCanChargePercentChange final
{
public:
	float                                         ChargePercent;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JerryCan_OnJerryCanChargePercentChange) == 0x000004, "Wrong alignment on JerryCan_OnJerryCanChargePercentChange");
static_assert(sizeof(JerryCan_OnJerryCanChargePercentChange) == 0x000004, "Wrong size on JerryCan_OnJerryCanChargePercentChange");
static_assert(offsetof(JerryCan_OnJerryCanChargePercentChange, ChargePercent) == 0x000000, "Member 'JerryCan_OnJerryCanChargePercentChange::ChargePercent' has a wrong offset!");

// Function Spring2025.JerryCan.OnRep_GroundState
// 0x0001 (0x0001 - 0x0000)
struct JerryCan_OnRep_GroundState final
{
public:
	EGroundState                                  previousState;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JerryCan_OnRep_GroundState) == 0x000001, "Wrong alignment on JerryCan_OnRep_GroundState");
static_assert(sizeof(JerryCan_OnRep_GroundState) == 0x000001, "Wrong size on JerryCan_OnRep_GroundState");
static_assert(offsetof(JerryCan_OnRep_GroundState, previousState) == 0x000000, "Member 'JerryCan_OnRep_GroundState::previousState' has a wrong offset!");

// Function Spring2025.JerryCanRunningBloodTrailComponent.OnCollectorRunningAndMoving
// 0x0001 (0x0001 - 0x0000)
struct JerryCanRunningBloodTrailComponent_OnCollectorRunningAndMoving final
{
public:
	bool                                          isRunningAndMoving;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JerryCanRunningBloodTrailComponent_OnCollectorRunningAndMoving) == 0x000001, "Wrong alignment on JerryCanRunningBloodTrailComponent_OnCollectorRunningAndMoving");
static_assert(sizeof(JerryCanRunningBloodTrailComponent_OnCollectorRunningAndMoving) == 0x000001, "Wrong size on JerryCanRunningBloodTrailComponent_OnCollectorRunningAndMoving");
static_assert(offsetof(JerryCanRunningBloodTrailComponent_OnCollectorRunningAndMoving, isRunningAndMoving) == 0x000000, "Member 'JerryCanRunningBloodTrailComponent_OnCollectorRunningAndMoving::isRunningAndMoving' has a wrong offset!");

// Function Spring2025.Spring2025EventCheatComponent.DBD_SetFuelGeneratorsPercentComplete
// 0x0004 (0x0004 - 0x0000)
struct Spring2025EventCheatComponent_DBD_SetFuelGeneratorsPercentComplete final
{
public:
	float                                         percentComplete;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spring2025EventCheatComponent_DBD_SetFuelGeneratorsPercentComplete) == 0x000004, "Wrong alignment on Spring2025EventCheatComponent_DBD_SetFuelGeneratorsPercentComplete");
static_assert(sizeof(Spring2025EventCheatComponent_DBD_SetFuelGeneratorsPercentComplete) == 0x000004, "Wrong size on Spring2025EventCheatComponent_DBD_SetFuelGeneratorsPercentComplete");
static_assert(offsetof(Spring2025EventCheatComponent_DBD_SetFuelGeneratorsPercentComplete, percentComplete) == 0x000000, "Member 'Spring2025EventCheatComponent_DBD_SetFuelGeneratorsPercentComplete::percentComplete' has a wrong offset!");

}

