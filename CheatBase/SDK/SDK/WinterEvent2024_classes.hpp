#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WinterEvent2024

#include "Basic.hpp"

#include "DBDBots_classes.hpp"
#include "Engine_classes.hpp"
#include "DataTableUtilities_structs.hpp"
#include "DeadByDaylight_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "NavigationSystem_classes.hpp"
#include "SnowmanWinterEvent_classes.hpp"
#include "WinterEvent2024_structs.hpp"
#include "DBDGameplay_classes.hpp"


namespace SDK
{

// Class WinterEvent2024.AISkill_FindInteractable_Snowpile
// 0x0000 (0x0318 - 0x0318)
class UAISkill_FindInteractable_Snowpile final : public UAISkill_FindInteractable
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AISkill_FindInteractable_Snowpile">();
	}
	static class UAISkill_FindInteractable_Snowpile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISkill_FindInteractable_Snowpile>();
	}
};
static_assert(alignof(UAISkill_FindInteractable_Snowpile) == 0x000008, "Wrong alignment on UAISkill_FindInteractable_Snowpile");
static_assert(sizeof(UAISkill_FindInteractable_Snowpile) == 0x000318, "Wrong size on UAISkill_FindInteractable_Snowpile");

// Class WinterEvent2024.AISkill_Interaction_DeployPortableSnowman
// 0x0008 (0x0288 - 0x0280)
class UAISkill_Interaction_DeployPortableSnowman final : public UAISkill_Interaction
{
public:
	float                                         MinOutOfSightTime;                                 // 0x0280(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinGeneratorDistance;                              // 0x0284(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AISkill_Interaction_DeployPortableSnowman">();
	}
	static class UAISkill_Interaction_DeployPortableSnowman* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISkill_Interaction_DeployPortableSnowman>();
	}
};
static_assert(alignof(UAISkill_Interaction_DeployPortableSnowman) == 0x000008, "Wrong alignment on UAISkill_Interaction_DeployPortableSnowman");
static_assert(sizeof(UAISkill_Interaction_DeployPortableSnowman) == 0x000288, "Wrong size on UAISkill_Interaction_DeployPortableSnowman");
static_assert(offsetof(UAISkill_Interaction_DeployPortableSnowman, MinOutOfSightTime) == 0x000280, "Member 'UAISkill_Interaction_DeployPortableSnowman::MinOutOfSightTime' has a wrong offset!");
static_assert(offsetof(UAISkill_Interaction_DeployPortableSnowman, MinGeneratorDistance) == 0x000284, "Member 'UAISkill_Interaction_DeployPortableSnowman::MinGeneratorDistance' has a wrong offset!");

// Class WinterEvent2024.CraftPortableSnowmanInteraction
// 0x0090 (0x0950 - 0x08C0)
class UCraftPortableSnowmanInteraction final : public UChargeableInteractionDefinition
{
public:
	class UChargeableComponent*                   _chargeable;                                       // 0x08C0(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _secondsToCharge;                                  // 0x08C8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _interactorCooldownDuration;                       // 0x08F0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_918[0x38];                                     // 0x0918(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_Chargeable();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CraftPortableSnowmanInteraction">();
	}
	static class UCraftPortableSnowmanInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCraftPortableSnowmanInteraction>();
	}
};
static_assert(alignof(UCraftPortableSnowmanInteraction) == 0x000010, "Wrong alignment on UCraftPortableSnowmanInteraction");
static_assert(sizeof(UCraftPortableSnowmanInteraction) == 0x000950, "Wrong size on UCraftPortableSnowmanInteraction");
static_assert(offsetof(UCraftPortableSnowmanInteraction, _chargeable) == 0x0008C0, "Member 'UCraftPortableSnowmanInteraction::_chargeable' has a wrong offset!");
static_assert(offsetof(UCraftPortableSnowmanInteraction, _secondsToCharge) == 0x0008C8, "Member 'UCraftPortableSnowmanInteraction::_secondsToCharge' has a wrong offset!");
static_assert(offsetof(UCraftPortableSnowmanInteraction, _interactorCooldownDuration) == 0x0008F0, "Member 'UCraftPortableSnowmanInteraction::_interactorCooldownDuration' has a wrong offset!");

// Class WinterEvent2024.DeployPortableSnowmanInteraction
// 0x0070 (0x07E0 - 0x0770)
class UDeployPortableSnowmanInteraction final : public UInteractionDefinition
{
public:
	struct FDBDTunableRowHandle                   _cooldownDuration;                                 // 0x0768(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_790[0x50];                                     // 0x0790(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeployPortableSnowmanInteraction">();
	}
	static class UDeployPortableSnowmanInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployPortableSnowmanInteraction>();
	}
};
static_assert(alignof(UDeployPortableSnowmanInteraction) == 0x000010, "Wrong alignment on UDeployPortableSnowmanInteraction");
static_assert(sizeof(UDeployPortableSnowmanInteraction) == 0x0007E0, "Wrong size on UDeployPortableSnowmanInteraction");
static_assert(offsetof(UDeployPortableSnowmanInteraction, _cooldownDuration) == 0x000768, "Member 'UDeployPortableSnowmanInteraction::_cooldownDuration' has a wrong offset!");

// Class WinterEvent2024.HideInSnowmanDecorator_Portable
// 0x00B0 (0x00E0 - 0x0030)
class UHideInSnowmanDecorator_Portable final : public UHideInSnowmanDecorator
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSecondaryInteractionProperties        _retrieveSnowmanProperties;                        // 0x0048(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                          _retrieveSnowmanRequested;                         // 0x0080(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _retrieveCooldownDuration;                         // 0x0088(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B0[0x30];                                      // 0x00B0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HideInSnowmanDecorator_Portable">();
	}
	static class UHideInSnowmanDecorator_Portable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHideInSnowmanDecorator_Portable>();
	}
};
static_assert(alignof(UHideInSnowmanDecorator_Portable) == 0x000008, "Wrong alignment on UHideInSnowmanDecorator_Portable");
static_assert(sizeof(UHideInSnowmanDecorator_Portable) == 0x0000E0, "Wrong size on UHideInSnowmanDecorator_Portable");
static_assert(offsetof(UHideInSnowmanDecorator_Portable, _retrieveSnowmanProperties) == 0x000048, "Member 'UHideInSnowmanDecorator_Portable::_retrieveSnowmanProperties' has a wrong offset!");
static_assert(offsetof(UHideInSnowmanDecorator_Portable, _retrieveSnowmanRequested) == 0x000080, "Member 'UHideInSnowmanDecorator_Portable::_retrieveSnowmanRequested' has a wrong offset!");
static_assert(offsetof(UHideInSnowmanDecorator_Portable, _retrieveCooldownDuration) == 0x000088, "Member 'UHideInSnowmanDecorator_Portable::_retrieveCooldownDuration' has a wrong offset!");

// Class WinterEvent2024.MovingSnowmanComponent
// 0x01F8 (0x0390 - 0x0198)
class UMovingSnowmanComponent final : public UActorNavMovementComponent
{
public:
	struct FDBDTunableRowHandle                   _walkSpeed;                                        // 0x0198(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _detectKillerRadius;                               // 0x01C0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _randomMoveDestinationRadius;                      // 0x01E8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _scaredBackDistance;                               // 0x0210(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _minimumTurnInPlaceDegree;                         // 0x0238(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _turnInPlaceRotateSpeed;                           // 0x0260(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _destinationAcceptanceRadius;                      // 0x0288(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _allowedBlockRetries;                              // 0x02B0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<EAlertMode, struct FAlertModeConfig>     _alertModeConfigs;                                 // 0x02D8(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSubclassOf<class UNavigationQueryFilter>     _navigationFilterClass;                            // 0x0328(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_330[0x40];                                     // 0x0330(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AKiller*>                        _authority_allKillers;                             // 0x0370(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class AKiller*>                        _authority_killersInDetectRadius;                  // 0x0380(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovingSnowmanComponent">();
	}
	static class UMovingSnowmanComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovingSnowmanComponent>();
	}
};
static_assert(alignof(UMovingSnowmanComponent) == 0x000008, "Wrong alignment on UMovingSnowmanComponent");
static_assert(sizeof(UMovingSnowmanComponent) == 0x000390, "Wrong size on UMovingSnowmanComponent");
static_assert(offsetof(UMovingSnowmanComponent, _walkSpeed) == 0x000198, "Member 'UMovingSnowmanComponent::_walkSpeed' has a wrong offset!");
static_assert(offsetof(UMovingSnowmanComponent, _detectKillerRadius) == 0x0001C0, "Member 'UMovingSnowmanComponent::_detectKillerRadius' has a wrong offset!");
static_assert(offsetof(UMovingSnowmanComponent, _randomMoveDestinationRadius) == 0x0001E8, "Member 'UMovingSnowmanComponent::_randomMoveDestinationRadius' has a wrong offset!");
static_assert(offsetof(UMovingSnowmanComponent, _scaredBackDistance) == 0x000210, "Member 'UMovingSnowmanComponent::_scaredBackDistance' has a wrong offset!");
static_assert(offsetof(UMovingSnowmanComponent, _minimumTurnInPlaceDegree) == 0x000238, "Member 'UMovingSnowmanComponent::_minimumTurnInPlaceDegree' has a wrong offset!");
static_assert(offsetof(UMovingSnowmanComponent, _turnInPlaceRotateSpeed) == 0x000260, "Member 'UMovingSnowmanComponent::_turnInPlaceRotateSpeed' has a wrong offset!");
static_assert(offsetof(UMovingSnowmanComponent, _destinationAcceptanceRadius) == 0x000288, "Member 'UMovingSnowmanComponent::_destinationAcceptanceRadius' has a wrong offset!");
static_assert(offsetof(UMovingSnowmanComponent, _allowedBlockRetries) == 0x0002B0, "Member 'UMovingSnowmanComponent::_allowedBlockRetries' has a wrong offset!");
static_assert(offsetof(UMovingSnowmanComponent, _alertModeConfigs) == 0x0002D8, "Member 'UMovingSnowmanComponent::_alertModeConfigs' has a wrong offset!");
static_assert(offsetof(UMovingSnowmanComponent, _navigationFilterClass) == 0x000328, "Member 'UMovingSnowmanComponent::_navigationFilterClass' has a wrong offset!");
static_assert(offsetof(UMovingSnowmanComponent, _authority_allKillers) == 0x000370, "Member 'UMovingSnowmanComponent::_authority_allKillers' has a wrong offset!");
static_assert(offsetof(UMovingSnowmanComponent, _authority_killersInDetectRadius) == 0x000380, "Member 'UMovingSnowmanComponent::_authority_killersInDetectRadius' has a wrong offset!");

// Class WinterEvent2024.MovingSnowman_PathFollowingComponent
// 0x0008 (0x02E8 - 0x02E0)
class UMovingSnowman_PathFollowingComponent final : public UActorPathFollowingComponent
{
public:
	class UCurveFloat*                            _decelerationCurve;                                // 0x02E0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovingSnowman_PathFollowingComponent">();
	}
	static class UMovingSnowman_PathFollowingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovingSnowman_PathFollowingComponent>();
	}
};
static_assert(alignof(UMovingSnowman_PathFollowingComponent) == 0x000008, "Wrong alignment on UMovingSnowman_PathFollowingComponent");
static_assert(sizeof(UMovingSnowman_PathFollowingComponent) == 0x0002E8, "Wrong size on UMovingSnowman_PathFollowingComponent");
static_assert(offsetof(UMovingSnowman_PathFollowingComponent, _decelerationCurve) == 0x0002E0, "Member 'UMovingSnowman_PathFollowingComponent::_decelerationCurve' has a wrong offset!");

// Class WinterEvent2024.NavigationQueryFilter_Snowman
// 0x0458 (0x04A8 - 0x0050)
class UNavigationQueryFilter_Snowman final : public UNavigationQueryFilter
{
public:
	TArray<TSubclassOf<class ANavLinkProxy>>      _unwalkableNavLinkClasses;                         // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_60[0x448];                                     // 0x0060(0x0448)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NavigationQueryFilter_Snowman">();
	}
	static class UNavigationQueryFilter_Snowman* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNavigationQueryFilter_Snowman>();
	}
};
static_assert(alignof(UNavigationQueryFilter_Snowman) == 0x000008, "Wrong alignment on UNavigationQueryFilter_Snowman");
static_assert(sizeof(UNavigationQueryFilter_Snowman) == 0x0004A8, "Wrong size on UNavigationQueryFilter_Snowman");
static_assert(offsetof(UNavigationQueryFilter_Snowman, _unwalkableNavLinkClasses) == 0x000050, "Member 'UNavigationQueryFilter_Snowman::_unwalkableNavLinkClasses' has a wrong offset!");

// Class WinterEvent2024.PortableSnowmanCoordinatorComponent
// 0x0138 (0x01F0 - 0x00B8)
class UPortableSnowmanCoordinatorComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x110];                                     // 0x00B8(0x0110)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USnowballPlayerComponent>   _snowballComponentClass;                           // 0x01C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UPortableSnowmanPlayerComponent> _portableSnowmanComponentClass;               // 0x01D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USnowballPlayerComponent*               _snowballComponent;                                // 0x01D8(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPortableSnowmanPlayerComponent*        _portableSnowmanComponent;                         // 0x01E0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1E8[0x8];                                      // 0x01E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_PortableSnowmanComponent();
	void OnRep_SnowballComponent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PortableSnowmanCoordinatorComponent">();
	}
	static class UPortableSnowmanCoordinatorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPortableSnowmanCoordinatorComponent>();
	}
};
static_assert(alignof(UPortableSnowmanCoordinatorComponent) == 0x000008, "Wrong alignment on UPortableSnowmanCoordinatorComponent");
static_assert(sizeof(UPortableSnowmanCoordinatorComponent) == 0x0001F0, "Wrong size on UPortableSnowmanCoordinatorComponent");
static_assert(offsetof(UPortableSnowmanCoordinatorComponent, _snowballComponentClass) == 0x0001C8, "Member 'UPortableSnowmanCoordinatorComponent::_snowballComponentClass' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanCoordinatorComponent, _portableSnowmanComponentClass) == 0x0001D0, "Member 'UPortableSnowmanCoordinatorComponent::_portableSnowmanComponentClass' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanCoordinatorComponent, _snowballComponent) == 0x0001D8, "Member 'UPortableSnowmanCoordinatorComponent::_snowballComponent' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanCoordinatorComponent, _portableSnowmanComponent) == 0x0001E0, "Member 'UPortableSnowmanCoordinatorComponent::_portableSnowmanComponent' has a wrong offset!");

// Class WinterEvent2024.PortableSnowmanPlayerComponent
// 0x0160 (0x0218 - 0x00B8)
class UPortableSnowmanPlayerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0xA8];                                      // 0x00B8(0x00A8)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDeployPortableSnowmanInteraction> _deployPortableSnowmanSurvivorInteractionClass; // 0x0160(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UHideInSnowmanInteraction>  _hideInSnowmanSurvivorInteractionClass;            // 0x0168(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UDeployPortableSnowmanInteraction> _deployPortableSnowmanKillerInteractionClass; // 0x0170(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UHideInSnowmanInteraction>  _hideInSnowmanKillerInteractionClass;              // 0x0178(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class ASnowman>                   _snowmanClass;                                     // 0x0180(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AMrMarch>                   _mrMarchClass;                                     // 0x0188(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHideInSnowmanDecorator_Portable*       _portableHideInSnowmanDecorator;                   // 0x0190(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDeployPortableSnowmanInteraction*      _deployPortableSnowmanInteraction;                 // 0x0198(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMrMarch*                               _mrMarch;                                          // 0x01A0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASnowman*                               _snowman;                                          // 0x01A8(0x0008)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _moveKillerForwardDistanceWhenSpawningAMrMarch;    // 0x01B0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D8[0x40];                                     // 0x01D8(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DBD_AddPortableSnowmanCharge();
	void Multicast_AddCharge_Cheat();
	void OnRep_DeployPortableSnowmanInteraction();
	void OnRep_Snowman();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PortableSnowmanPlayerComponent">();
	}
	static class UPortableSnowmanPlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPortableSnowmanPlayerComponent>();
	}
};
static_assert(alignof(UPortableSnowmanPlayerComponent) == 0x000008, "Wrong alignment on UPortableSnowmanPlayerComponent");
static_assert(sizeof(UPortableSnowmanPlayerComponent) == 0x000218, "Wrong size on UPortableSnowmanPlayerComponent");
static_assert(offsetof(UPortableSnowmanPlayerComponent, _deployPortableSnowmanSurvivorInteractionClass) == 0x000160, "Member 'UPortableSnowmanPlayerComponent::_deployPortableSnowmanSurvivorInteractionClass' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanPlayerComponent, _hideInSnowmanSurvivorInteractionClass) == 0x000168, "Member 'UPortableSnowmanPlayerComponent::_hideInSnowmanSurvivorInteractionClass' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanPlayerComponent, _deployPortableSnowmanKillerInteractionClass) == 0x000170, "Member 'UPortableSnowmanPlayerComponent::_deployPortableSnowmanKillerInteractionClass' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanPlayerComponent, _hideInSnowmanKillerInteractionClass) == 0x000178, "Member 'UPortableSnowmanPlayerComponent::_hideInSnowmanKillerInteractionClass' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanPlayerComponent, _snowmanClass) == 0x000180, "Member 'UPortableSnowmanPlayerComponent::_snowmanClass' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanPlayerComponent, _mrMarchClass) == 0x000188, "Member 'UPortableSnowmanPlayerComponent::_mrMarchClass' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanPlayerComponent, _portableHideInSnowmanDecorator) == 0x000190, "Member 'UPortableSnowmanPlayerComponent::_portableHideInSnowmanDecorator' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanPlayerComponent, _deployPortableSnowmanInteraction) == 0x000198, "Member 'UPortableSnowmanPlayerComponent::_deployPortableSnowmanInteraction' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanPlayerComponent, _mrMarch) == 0x0001A0, "Member 'UPortableSnowmanPlayerComponent::_mrMarch' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanPlayerComponent, _snowman) == 0x0001A8, "Member 'UPortableSnowmanPlayerComponent::_snowman' has a wrong offset!");
static_assert(offsetof(UPortableSnowmanPlayerComponent, _moveKillerForwardDistanceWhenSpawningAMrMarch) == 0x0001B0, "Member 'UPortableSnowmanPlayerComponent::_moveKillerForwardDistanceWhenSpawningAMrMarch' has a wrong offset!");

}

