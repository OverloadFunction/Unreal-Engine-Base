#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_VFX_PostProcess_Handler

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C
// 0x00E0 (0x0198 - 0x00B8)
class UBPC_VFX_PostProcess_Handler_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<struct FGameplayTag, class UMaterialInstanceDynamic*> PP_Active_Materials;                  // 0x00C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInterface*                     DA_Active_Material;                                // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class UMaterialInstance*> PostProcess_To_Spawn;                        // 0x0118(0x0050)(Edit, BlueprintVisible)
	struct FGameplayTag                           DA_Active_Tag;                                     // 0x0168(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Cosmetic_Helper_Name;                              // 0x0178(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UCameraComponent*                       PP_Player_Owner_Camera;                            // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             PP_Player_Owner_Actor;                             // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPC_VFX_PostProcess_Handler(int32 EntryPoint);
	void PP_Initialize_Material_Instance(const struct FGameplayTag& SystemToSpawn, class UMaterialInterface* Spawn_Material);
	void PP_Layer_Parameters_Update_Float(const struct FGameplayTag& MaterialInstanceTag, class FName ParameterName, double float_0);
	void PP_Blend_Weight_Add();
	void PP_Blend_Weight_Remove();
	void PP_Layer_Parameters_Update_Linear_Color(const struct FGameplayTag& MaterialInstanceTag, class FName ParameterName, const struct FLinearColor& LinearColor);
	void PP_Master_Parameters_Update_Linear_Color(const struct FGameplayTag& MaterialInstanceTag, class FName ParameterName, const struct FLinearColor& LinearColor);
	void PP_Master_Parameters_Update_Scalar(const struct FGameplayTag& MaterialInstanceTag, class FName ParameterName, double float_0);
	void PP_Material_Add(const struct FGameplayTag& MaterialInstanceTag, class UMaterialInterface* Spawn_Parameters);
	void PP_Material_Create_Instance();
	void PP_Material_Remove(const struct FGameplayTag& MaterialInstanceTag);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_VFX_PostProcess_Handler_C">();
	}
	static class UBPC_VFX_PostProcess_Handler_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_VFX_PostProcess_Handler_C>();
	}
};
static_assert(alignof(UBPC_VFX_PostProcess_Handler_C) == 0x000008, "Wrong alignment on UBPC_VFX_PostProcess_Handler_C");
static_assert(sizeof(UBPC_VFX_PostProcess_Handler_C) == 0x000198, "Wrong size on UBPC_VFX_PostProcess_Handler_C");
static_assert(offsetof(UBPC_VFX_PostProcess_Handler_C, UberGraphFrame) == 0x0000B8, "Member 'UBPC_VFX_PostProcess_Handler_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_PostProcess_Handler_C, PP_Active_Materials) == 0x0000C0, "Member 'UBPC_VFX_PostProcess_Handler_C::PP_Active_Materials' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_PostProcess_Handler_C, DA_Active_Material) == 0x000110, "Member 'UBPC_VFX_PostProcess_Handler_C::DA_Active_Material' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_PostProcess_Handler_C, PostProcess_To_Spawn) == 0x000118, "Member 'UBPC_VFX_PostProcess_Handler_C::PostProcess_To_Spawn' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_PostProcess_Handler_C, DA_Active_Tag) == 0x000168, "Member 'UBPC_VFX_PostProcess_Handler_C::DA_Active_Tag' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_PostProcess_Handler_C, Cosmetic_Helper_Name) == 0x000178, "Member 'UBPC_VFX_PostProcess_Handler_C::Cosmetic_Helper_Name' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_PostProcess_Handler_C, PP_Player_Owner_Camera) == 0x000188, "Member 'UBPC_VFX_PostProcess_Handler_C::PP_Player_Owner_Camera' has a wrong offset!");
static_assert(offsetof(UBPC_VFX_PostProcess_Handler_C, PP_Player_Owner_Actor) == 0x000190, "Member 'UBPC_VFX_PostProcess_Handler_C::PP_Player_Owner_Actor' has a wrong offset!");

}

