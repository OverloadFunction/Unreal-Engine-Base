#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK32

#include "Basic.hpp"

#include "TheK32_classes.hpp"
#include "TheK32_parameters.hpp"


namespace SDK
{

// Function TheK32.K32BaseProjectile.Cosmetic_OnProjectileHidden
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32BaseProjectile::Cosmetic_OnProjectileHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32BaseProjectile", "Cosmetic_OnProjectileHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32BaseProjectile.Cosmetic_OnProjectileVisible
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32BaseProjectile::Cosmetic_OnProjectileVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32BaseProjectile", "Cosmetic_OnProjectileVisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32BaseProjectile.OnRep_IsAcquiredFromPool
// (Final, Native, Private)
// Parameters:
// bool                                    oldIsAcquiredFromPool                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32BaseProjectile::OnRep_IsAcquiredFromPool(bool oldIsAcquiredFromPool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32BaseProjectile", "OnRep_IsAcquiredFromPool");

	Params::K32BaseProjectile_OnRep_IsAcquiredFromPool Parms{};

	Parms.oldIsAcquiredFromPool = oldIsAcquiredFromPool;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.InK32PodZoneLingeringEffect.Authority_OnKillerPodAcquiredChanged
// (Final, Native, Private)
// Parameters:
// const bool                              IsAcquired                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInK32PodZoneLingeringEffect::Authority_OnKillerPodAcquiredChanged(const bool IsAcquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InK32PodZoneLingeringEffect", "Authority_OnKillerPodAcquiredChanged");

	Params::InK32PodZoneLingeringEffect_Authority_OnKillerPodAcquiredChanged Parms{};

	Parms.IsAcquired = IsAcquired;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.InK32PodZoneLingeringEffect.Authority_OnKillerPodDisabledChanged
// (Final, Native, Private)
// Parameters:
// const bool                              IsDisabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInK32PodZoneLingeringEffect::Authority_OnKillerPodDisabledChanged(const bool IsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InK32PodZoneLingeringEffect", "Authority_OnKillerPodDisabledChanged");

	Params::InK32PodZoneLingeringEffect_Authority_OnKillerPodDisabledChanged Parms{};

	Parms.IsDisabled = IsDisabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32AnimInstance.OnGameEventReceived
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              GameplayTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK32AnimInstance::OnGameEventReceived(const struct FGameplayTag& GameplayTag, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32AnimInstance", "OnGameEventReceived");

	Params::K32AnimInstance_OnGameEventReceived Parms{};

	Parms.GameplayTag = std::move(GameplayTag);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32AnimInstance.ResetIsShootingPod
// (Final, Native, Protected, BlueprintCallable)

void UK32AnimInstance::ResetIsShootingPod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32AnimInstance", "ResetIsShootingPod");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32AssimilationAnimInstance.ResetIsDestroyedByEmp
// (Final, Native, Public, BlueprintCallable)

void UK32AssimilationAnimInstance::ResetIsDestroyedByEmp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32AssimilationAnimInstance", "ResetIsDestroyedByEmp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32AssimilationAnimInstance.ResetIsDestroyedByHook
// (Final, Native, Public, BlueprintCallable)

void UK32AssimilationAnimInstance::ResetIsDestroyedByHook()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32AssimilationAnimInstance", "ResetIsDestroyedByHook");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32Emp.Cosmetic_OnDropped
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32Emp::Cosmetic_OnDropped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "Cosmetic_OnDropped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32Emp.Cosmetic_OnEmpInteractionCancelled
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32Emp::Cosmetic_OnEmpInteractionCancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "Cosmetic_OnEmpInteractionCancelled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32Emp.Cosmetic_OnEmpInteractionFinished
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   numberOfAffectedTargets                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       interactingPlayer                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32Emp::Cosmetic_OnEmpInteractionFinished(int32 numberOfAffectedTargets, class ADBDPlayer* interactingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "Cosmetic_OnEmpInteractionFinished");

	Params::K32Emp_Cosmetic_OnEmpInteractionFinished Parms{};

	Parms.numberOfAffectedTargets = numberOfAffectedTargets;
	Parms.interactingPlayer = interactingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32Emp.Cosmetic_OnEmpInteractionStarted
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32Emp::Cosmetic_OnEmpInteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "Cosmetic_OnEmpInteractionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32Emp.Cosmetic_OnNumTargetsInRangeChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   numberOfAffectedTargets                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32Emp::Cosmetic_OnNumTargetsInRangeChanged(int32 numberOfAffectedTargets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "Cosmetic_OnNumTargetsInRangeChanged");

	Params::K32Emp_Cosmetic_OnNumTargetsInRangeChanged Parms{};

	Parms.numberOfAffectedTargets = numberOfAffectedTargets;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32Emp.Cosmetic_OnPickedUp
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32Emp::Cosmetic_OnPickedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "Cosmetic_OnPickedUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32Emp.Cosmetic_OnVisibilityChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    previousIsVisible                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32Emp::Cosmetic_OnVisibilityChanged(bool previousIsVisible, bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "Cosmetic_OnVisibilityChanged");

	Params::K32Emp_Cosmetic_OnVisibilityChanged Parms{};

	Parms.previousIsVisible = previousIsVisible;
	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32Emp.Multicast_UseEmp
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const int32                             numAffectedTargets                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       interactingPlayer                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32Emp::Multicast_UseEmp(const int32 numAffectedTargets, class ADBDPlayer* interactingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "Multicast_UseEmp");

	Params::K32Emp_Multicast_UseEmp Parms{};

	Parms.numAffectedTargets = numAffectedTargets;
	Parms.interactingPlayer = interactingPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32Emp.OnEmpInteractionEntered
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       interactingPlayer                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32Emp::OnEmpInteractionEntered(class ADBDPlayer* interactingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "OnEmpInteractionEntered");

	Params::K32Emp_OnEmpInteractionEntered Parms{};

	Parms.interactingPlayer = interactingPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32Emp.OnEmpInteractionFinished
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       interactingPlayer                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    hasInteractionStarted                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32Emp::OnEmpInteractionFinished(class ADBDPlayer* interactingPlayer, bool hasInteractionStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "OnEmpInteractionFinished");

	Params::K32Emp_OnEmpInteractionFinished Parms{};

	Parms.interactingPlayer = interactingPlayer;
	Parms.hasInteractionStarted = hasInteractionStarted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32Emp.OnRep_IsAcquiredFromPool
// (Final, Native, Private)

void AK32Emp::OnRep_IsAcquiredFromPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "OnRep_IsAcquiredFromPool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32Emp.OnRep_IsVisible
// (Final, Native, Private)
// Parameters:
// bool                                    previousIsVisible                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32Emp::OnRep_IsVisible(bool previousIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "OnRep_IsVisible");

	Params::K32Emp_OnRep_IsVisible Parms{};

	Parms.previousIsVisible = previousIsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32Emp.OnRep_NumTargetsInRange
// (Final, Native, Private)

void AK32Emp::OnRep_NumTargetsInRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "OnRep_NumTargetsInRange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32Emp.SetComponentContextProviders
// (Final, Native, Private)

void AK32Emp::SetComponentContextProviders()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Emp", "SetComponentContextProviders");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32ItemBox.Authority_OnItemPickup
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32ItemBox::Authority_OnItemPickup(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32ItemBox", "Authority_OnItemPickup");

	Params::K32ItemBox_Authority_OnItemPickup Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32ItemBox.Cosmetic_OnStateChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// EK32ItemBoxState                        newState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32ItemBox::Cosmetic_OnStateChanged(EK32ItemBoxState newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32ItemBox", "Cosmetic_OnStateChanged");

	Params::K32ItemBox_Cosmetic_OnStateChanged Parms{};

	Parms.newState = newState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32ItemBox.Cosmetic_OnSurvivorInteractingChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsInteracting                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32ItemBox::Cosmetic_OnSurvivorInteractingChanged(bool IsInteracting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32ItemBox", "Cosmetic_OnSurvivorInteractingChanged");

	Params::K32ItemBox_Cosmetic_OnSurvivorInteractingChanged Parms{};

	Parms.IsInteracting = IsInteracting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32ItemBox.Multicast_SetIsChargeTimeExtended
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const bool                              isAddonExtendingFirstActivationTimer                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32ItemBox::Multicast_SetIsChargeTimeExtended(const bool isAddonExtendingFirstActivationTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32ItemBox", "Multicast_SetIsChargeTimeExtended");

	Params::K32ItemBox_Multicast_SetIsChargeTimeExtended Parms{};

	Parms.isAddonExtendingFirstActivationTimer = isAddonExtendingFirstActivationTimer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32ItemBox.OnChargeableCompleteEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    COMPLETED                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            instigatorsForCompletion                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AK32ItemBox::OnChargeableCompleteEvent(bool COMPLETED, const TArray<class AActor*>& instigatorsForCompletion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32ItemBox", "OnChargeableCompleteEvent");

	Params::K32ItemBox_OnChargeableCompleteEvent Parms{};

	Parms.COMPLETED = COMPLETED;
	Parms.instigatorsForCompletion = std::move(instigatorsForCompletion);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32ItemBox.OnRep_IsSurvivorInteracting
// (Final, Native, Private)

void AK32ItemBox::OnRep_IsSurvivorInteracting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32ItemBox", "OnRep_IsSurvivorInteracting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32ItemBox.OnRep_SpawnedItem
// (Final, Native, Private)

void AK32ItemBox::OnRep_SpawnedItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32ItemBox", "OnRep_SpawnedItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32ItemBox.OnRep_State
// (Final, Native, Private)

void AK32ItemBox::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32ItemBox", "OnRep_State");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32ItemBoxManagerComponent.Authority_OnItemBoxDeactivated
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              GameplayTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK32ItemBoxManagerComponent::Authority_OnItemBoxDeactivated(const struct FGameplayTag& GameplayTag, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32ItemBoxManagerComponent", "Authority_OnItemBoxDeactivated");

	Params::K32ItemBoxManagerComponent_Authority_OnItemBoxDeactivated Parms{};

	Parms.GameplayTag = std::move(GameplayTag);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32ItemBoxManagerComponent.Authority_OnLevelReadyToPlay
// (Final, Native, Private)

void UK32ItemBoxManagerComponent::Authority_OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32ItemBoxManagerComponent", "Authority_OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32ItemBoxOutlineUpdateStrategy.OnDistanceStatValueUpdated
// (Final, Native, Private)
// Parameters:
// const float                             Distance                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32ItemBoxOutlineUpdateStrategy::OnDistanceStatValueUpdated(const float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32ItemBoxOutlineUpdateStrategy", "OnDistanceStatValueUpdated");

	Params::K32ItemBoxOutlineUpdateStrategy_OnDistanceStatValueUpdated Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32ItemBoxSpeedUpInteraction.OnLevelReadyToPlay
// (Final, Native, Private)

void UK32ItemBoxSpeedUpInteraction::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32ItemBoxSpeedUpInteraction", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPod.Authority_OnDisabledTimerDone
// (Final, Native, Private)

void AK32KillerPod::Authority_OnDisabledTimerDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Authority_OnDisabledTimerDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPod.Authority_OnPodDisabledPreEndingEffectStarted
// (Final, Native, Private)

void AK32KillerPod::Authority_OnPodDisabledPreEndingEffectStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Authority_OnPodDisabledPreEndingEffectStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPod.Cosmetic_IsBlockingPodSpawningChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const bool                              isBlocking                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             distanceBetweenPods                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPod::Cosmetic_IsBlockingPodSpawningChanged(const bool isBlocking, const float distanceBetweenPods)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Cosmetic_IsBlockingPodSpawningChanged");

	Params::K32KillerPod_Cosmetic_IsBlockingPodSpawningChanged Parms{};

	Parms.isBlocking = isBlocking;
	Parms.distanceBetweenPods = distanceBetweenPods;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerPod.Cosmetic_OnControlledByKillerChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FK32KillerPodSettings&     previousSettings                                       (Parm, NativeAccessSpecifierPublic)
// const struct FK32KillerPodSettings&     Settings                                               (Parm, NativeAccessSpecifierPublic)

void AK32KillerPod::Cosmetic_OnControlledByKillerChanged(const struct FK32KillerPodSettings& previousSettings, const struct FK32KillerPodSettings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Cosmetic_OnControlledByKillerChanged");

	Params::K32KillerPod_Cosmetic_OnControlledByKillerChanged Parms{};

	Parms.previousSettings = std::move(previousSettings);
	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerPod.Cosmetic_OnDestroyedByEmp
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       destroyingSurvivor                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPod::Cosmetic_OnDestroyedByEmp(class ADBDPlayer* destroyingSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Cosmetic_OnDestroyedByEmp");

	Params::K32KillerPod_Cosmetic_OnDestroyedByEmp Parms{};

	Parms.destroyingSurvivor = destroyingSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerPod.Cosmetic_OnDestroyedByManualRemoval
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32KillerPod::Cosmetic_OnDestroyedByManualRemoval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Cosmetic_OnDestroyedByManualRemoval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32KillerPod.Cosmetic_OnDestroyedByRecycle
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32KillerPod::Cosmetic_OnDestroyedByRecycle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Cosmetic_OnDestroyedByRecycle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32KillerPod.Cosmetic_OnDisabledChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FK32KillerPodSettings&     previousSettings                                       (Parm, NativeAccessSpecifierPublic)
// const struct FK32KillerPodSettings&     Settings                                               (Parm, NativeAccessSpecifierPublic)

void AK32KillerPod::Cosmetic_OnDisabledChanged(const struct FK32KillerPodSettings& previousSettings, const struct FK32KillerPodSettings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Cosmetic_OnDisabledChanged");

	Params::K32KillerPod_Cosmetic_OnDisabledChanged Parms{};

	Parms.previousSettings = std::move(previousSettings);
	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerPod.Cosmetic_OnKillerHearSoundsInPodActivated
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32KillerPod::Cosmetic_OnKillerHearSoundsInPodActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Cosmetic_OnKillerHearSoundsInPodActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32KillerPod.Cosmetic_OnKillerHearSoundsInPodDeactivated
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32KillerPod::Cosmetic_OnKillerHearSoundsInPodDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Cosmetic_OnKillerHearSoundsInPodDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32KillerPod.Cosmetic_OnSettingsChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FK32KillerPodSettings&     previousSettings                                       (Parm, NativeAccessSpecifierPublic)
// const struct FK32KillerPodSettings&     Settings                                               (Parm, NativeAccessSpecifierPublic)

void AK32KillerPod::Cosmetic_OnSettingsChanged(const struct FK32KillerPodSettings& previousSettings, const struct FK32KillerPodSettings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Cosmetic_OnSettingsChanged");

	Params::K32KillerPod_Cosmetic_OnSettingsChanged Parms{};

	Parms.previousSettings = std::move(previousSettings);
	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerPod.Multicast_OnDestroyedByEmp
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       destroyingSurvivor                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPod::Multicast_OnDestroyedByEmp(class ADBDPlayer* destroyingSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Multicast_OnDestroyedByEmp");

	Params::K32KillerPod_Multicast_OnDestroyedByEmp Parms{};

	Parms.destroyingSurvivor = destroyingSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPod.Multicast_OnDestroyedByManualRemoval
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void AK32KillerPod::Multicast_OnDestroyedByManualRemoval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Multicast_OnDestroyedByManualRemoval");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPod.Multicast_OnDestroyedByRecycle
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void AK32KillerPod::Multicast_OnDestroyedByRecycle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Multicast_OnDestroyedByRecycle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPod.Multicast_OnPodDisabled
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void AK32KillerPod::Multicast_OnPodDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "Multicast_OnPodDisabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPod.OnKillerLocallyObservedChanged
// (Final, Native, Private)
// Parameters:
// const bool                              isKillerLocallyObserved                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPod::OnKillerLocallyObservedChanged(const bool isKillerLocallyObserved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "OnKillerLocallyObservedChanged");

	Params::K32KillerPod_OnKillerLocallyObservedChanged Parms{};

	Parms.isKillerLocallyObserved = isKillerLocallyObserved;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPod.OnRep_IsAcquiredFromPool
// (Final, Native, Private)

void AK32KillerPod::OnRep_IsAcquiredFromPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "OnRep_IsAcquiredFromPool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPod.OnRep_Settings
// (Final, Native, Private)
// Parameters:
// const struct FK32KillerPodSettings&     previousSettings                                       (Parm, NativeAccessSpecifierPublic)

void AK32KillerPod::OnRep_Settings(const struct FK32KillerPodSettings& previousSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "OnRep_Settings");

	Params::K32KillerPod_OnRep_Settings Parms{};

	Parms.previousSettings = std::move(previousSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPod.OnVisibilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FK32KillerPodSettings&     previousSettings                                       (Parm, NativeAccessSpecifierPublic)
// const struct FK32KillerPodSettings&     Settings                                               (Parm, NativeAccessSpecifierPublic)

void AK32KillerPod::OnVisibilityChanged(const struct FK32KillerPodSettings& previousSettings, const struct FK32KillerPodSettings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "OnVisibilityChanged");

	Params::K32KillerPod_OnVisibilityChanged Parms{};

	Parms.previousSettings = std::move(previousSettings);
	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerPod.GetKiller
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKiller*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AKiller* AK32KillerPod::GetKiller() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "GetKiller");

	Params::K32KillerPod_GetKiller Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32KillerPod.GetSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FK32KillerPodSettings            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FK32KillerPodSettings AK32KillerPod::GetSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPod", "GetSettings");

	Params::K32KillerPod_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32KillerPodAimingCrosshairComponent.GetCurrentPodCamera
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class UCameraComponent*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCameraComponent* UK32KillerPodAimingCrosshairComponent::GetCurrentPodCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodAimingCrosshairComponent", "GetCurrentPodCamera");

	Params::K32KillerPodAimingCrosshairComponent_GetCurrentPodCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32KillerPodLockOnProgressComponent.Server_SetCrosshairState
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const EAimingCrosshairState             crosshairState                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerPodLockOnProgressComponent::Server_SetCrosshairState(const EAimingCrosshairState crosshairState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodLockOnProgressComponent", "Server_SetCrosshairState");

	Params::K32KillerPodLockOnProgressComponent_Server_SetCrosshairState Parms{};

	Parms.crosshairState = crosshairState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodLockOnProgressComponent.Server_SetLockOnState
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const ELockOnState                      State                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EAimingCrosshairState             crosshairState                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ASurvivor*                  survivorBeingLockedOn                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESurvivorLockedOnProgressState    survivorLockedOnProgressState                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerPodLockOnProgressComponent::Server_SetLockOnState(const ELockOnState State, const EAimingCrosshairState crosshairState, const class ASurvivor* survivorBeingLockedOn, const ESurvivorLockedOnProgressState survivorLockedOnProgressState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodLockOnProgressComponent", "Server_SetLockOnState");

	Params::K32KillerPodLockOnProgressComponent_Server_SetLockOnState Parms{};

	Parms.State = State;
	Parms.crosshairState = crosshairState;
	Parms.survivorBeingLockedOn = survivorBeingLockedOn;
	Parms.survivorLockedOnProgressState = survivorLockedOnProgressState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodLockOnProgressComponent.OnRep_CrosshairState
// (Final, Native, Private, Const)

void UK32KillerPodLockOnProgressComponent::OnRep_CrosshairState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodLockOnProgressComponent", "OnRep_CrosshairState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodLockOnProgressComponent.OnRep_Progress
// (Final, Native, Private, Const)

void UK32KillerPodLockOnProgressComponent::OnRep_Progress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodLockOnProgressComponent", "OnRep_Progress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodPool.Authority_OnDestroyPodDelayTimerDone
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       launchingSurvivor                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerPodPool::Authority_OnDestroyPodDelayTimerDone(class ADBDPlayer* launchingSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodPool", "Authority_OnDestroyPodDelayTimerDone");

	Params::K32KillerPodPool_Authority_OnDestroyPodDelayTimerDone Parms{};

	Parms.launchingSurvivor = launchingSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodPool.OnKillerPodAcquiredChanged
// (Final, Native, Private)
// Parameters:
// const bool                              IsAcquired                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerPodPool::OnKillerPodAcquiredChanged(const bool IsAcquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodPool", "OnKillerPodAcquiredChanged");

	Params::K32KillerPodPool_OnKillerPodAcquiredChanged Parms{};

	Parms.IsAcquired = IsAcquired;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodPool.OnKillerPodCreated
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerPodPool::OnKillerPodCreated(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodPool", "OnKillerPodCreated");

	Params::K32KillerPodPool_OnKillerPodCreated Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodPool.OnLevelReadyToPlay
// (Final, Native, Private)

void UK32KillerPodPool::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodPool", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodPool.OnLingeringLastControlledPodExpired
// (Final, Native, Private)

void UK32KillerPodPool::OnLingeringLastControlledPodExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodPool", "OnLingeringLastControlledPodExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodRestrictedZone.GetStaticMesh
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UStaticMeshComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMeshComponent* AK32KillerPodRestrictedZone::GetStaticMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodRestrictedZone", "GetStaticMesh");

	Params::K32KillerPodRestrictedZone_GetStaticMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TheK32.K32KillerPodSpawningComponent.Multicast_FireKillerProjectile
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UK32KillerPodSpawningComponent::Multicast_FireKillerProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodSpawningComponent", "Multicast_FireKillerProjectile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodSpawningComponent.OnIntroCompleted
// (Final, Native, Private)

void UK32KillerPodSpawningComponent::OnIntroCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodSpawningComponent", "OnIntroCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodSpawningComponent.Server_FireKillerProjectile
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const struct FK32KillerPodSpawningInputData&InputData                                              (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// const EK32KillerPodSpawningResult       expectedResult                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerPodSpawningComponent::Server_FireKillerProjectile(const struct FK32KillerPodSpawningInputData& InputData, const EK32KillerPodSpawningResult expectedResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodSpawningComponent", "Server_FireKillerProjectile");

	Params::K32KillerPodSpawningComponent_Server_FireKillerProjectile Parms{};

	Parms.InputData = std::move(InputData);
	Parms.expectedResult = expectedResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodSpawningComponent.Cosmetic_OnInvalidPodTriggers
// (BlueprintCosmetic, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const struct FVector&                   invalidLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerPodSpawningComponent::Cosmetic_OnInvalidPodTriggers(const struct FVector& invalidLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodSpawningComponent", "Cosmetic_OnInvalidPodTriggers");

	Params::K32KillerPodSpawningComponent_Cosmetic_OnInvalidPodTriggers Parms{};

	Parms.invalidLocation = std::move(invalidLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerPodSpawningIndicator.Cosmetic_OnSettingsChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FK32KillerPodSpawningIndicatorSettings&previousSettings                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FK32KillerPodSpawningIndicatorSettings&Settings                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AK32KillerPodSpawningIndicator::Cosmetic_OnSettingsChanged(const struct FK32KillerPodSpawningIndicatorSettings& previousSettings, const struct FK32KillerPodSpawningIndicatorSettings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodSpawningIndicator", "Cosmetic_OnSettingsChanged");

	Params::K32KillerPodSpawningIndicator_Cosmetic_OnSettingsChanged Parms{};

	Parms.previousSettings = std::move(previousSettings);
	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerPodSpawningIndicator.GetSettings
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FK32KillerPodSpawningIndicatorSettingsReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FK32KillerPodSpawningIndicatorSettings AK32KillerPodSpawningIndicator::GetSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodSpawningIndicator", "GetSettings");

	Params::K32KillerPodSpawningIndicator_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32KillerPodTargetIndicator.Cosmetic_OnSettingsChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FK32KillerPodTargetIndicatorSettings&previousSettings                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FK32KillerPodTargetIndicatorSettings&Settings                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AK32KillerPodTargetIndicator::Cosmetic_OnSettingsChanged(const struct FK32KillerPodTargetIndicatorSettings& previousSettings, const struct FK32KillerPodTargetIndicatorSettings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodTargetIndicator", "Cosmetic_OnSettingsChanged");

	Params::K32KillerPodTargetIndicator_Cosmetic_OnSettingsChanged Parms{};

	Parms.previousSettings = std::move(previousSettings);
	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerPodTargetIndicator.GetSettings
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FK32KillerPodTargetIndicatorSettingsReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FK32KillerPodTargetIndicatorSettings AK32KillerPodTargetIndicator::GetSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodTargetIndicator", "GetSettings");

	Params::K32KillerPodTargetIndicator_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32KillerPodTargetingComponent.Cosmetic_Local_NewKillerPodTargeted
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AK32KillerPod*                    newTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerPodTargetingComponent::Cosmetic_Local_NewKillerPodTargeted(class AK32KillerPod* newTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodTargetingComponent", "Cosmetic_Local_NewKillerPodTargeted");

	Params::K32KillerPodTargetingComponent_Cosmetic_Local_NewKillerPodTargeted Parms{};

	Parms.newTarget = newTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerPodVisionController.Authority_OnCollisionDisableTimerComplete
// (Final, Native, Private)

void AK32KillerPodVisionController::Authority_OnCollisionDisableTimerComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "Authority_OnCollisionDisableTimerComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionController.Authority_OnControlledPodDisabledChanged
// (Final, Native, Private)
// Parameters:
// const bool                              IsDisabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPodVisionController::Authority_OnControlledPodDisabledChanged(const bool IsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "Authority_OnControlledPodDisabledChanged");

	Params::K32KillerPodVisionController_Authority_OnControlledPodDisabledChanged Parms{};

	Parms.IsDisabled = IsDisabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionController.Cosmetic_Local_OnCurrentPodDisabledChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              IsDisabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPodVisionController::Cosmetic_Local_OnCurrentPodDisabledChanged(const bool IsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "Cosmetic_Local_OnCurrentPodDisabledChanged");

	Params::K32KillerPodVisionController_Cosmetic_Local_OnCurrentPodDisabledChanged Parms{};

	Parms.IsDisabled = IsDisabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerPodVisionController.Cosmetic_Local_OnReleasingControlOfPod
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32KillerPodVisionController::Cosmetic_Local_OnReleasingControlOfPod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "Cosmetic_Local_OnReleasingControlOfPod");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32KillerPodVisionController.Cosmetic_Local_OnTakingControlOfPod
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32KillerPodVisionController::Cosmetic_Local_OnTakingControlOfPod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "Cosmetic_Local_OnTakingControlOfPod");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32KillerPodVisionController.Multicast_OnControlledPodDisabledChanged
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// const bool                              IsDisabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPodVisionController::Multicast_OnControlledPodDisabledChanged(const bool IsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "Multicast_OnControlledPodDisabledChanged");

	Params::K32KillerPodVisionController_Multicast_OnControlledPodDisabledChanged Parms{};

	Parms.IsDisabled = IsDisabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionController.Multicast_SetCameraOrientation
// (Final, Net, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FRotator&                  NewOrientation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AK32KillerPodVisionController::Multicast_SetCameraOrientation(const struct FRotator& NewOrientation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "Multicast_SetCameraOrientation");

	Params::K32KillerPodVisionController_Multicast_SetCameraOrientation Parms{};

	Parms.NewOrientation = std::move(NewOrientation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionController.Multicast_SetKillerCollisionDisabledForSurvivors
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// const bool                              IsDisabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPodVisionController::Multicast_SetKillerCollisionDisabledForSurvivors(const bool IsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "Multicast_SetKillerCollisionDisabledForSurvivors");

	Params::K32KillerPodVisionController_Multicast_SetKillerCollisionDisabledForSurvivors Parms{};

	Parms.IsDisabled = IsDisabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionController.Multicast_SetLocationAndRotation
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPodVisionController::Multicast_SetLocationAndRotation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "Multicast_SetLocationAndRotation");

	Params::K32KillerPodVisionController_Multicast_SetLocationAndRotation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionController.OnControlledPodUnacquiredFromPool
// (Final, Native, Private)
// Parameters:
// const bool                              IsAcquired                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPodVisionController::OnControlledPodUnacquiredFromPool(const bool IsAcquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "OnControlledPodUnacquiredFromPool");

	Params::K32KillerPodVisionController_OnControlledPodUnacquiredFromPool Parms{};

	Parms.IsAcquired = IsAcquired;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionController.OnInteractionStarted
// (Final, Native, Private)
// Parameters:
// class UInteractionDefinition*           Interaction                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPodVisionController::OnInteractionStarted(class UInteractionDefinition* Interaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "OnInteractionStarted");

	Params::K32KillerPodVisionController_OnInteractionStarted Parms{};

	Parms.Interaction = Interaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionController.OnKillerLocallyObservedChanged
// (Final, Native, Private)
// Parameters:
// const bool                              isKillerLocallyObserved                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPodVisionController::OnKillerLocallyObservedChanged(const bool isKillerLocallyObserved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "OnKillerLocallyObservedChanged");

	Params::K32KillerPodVisionController_OnKillerLocallyObservedChanged Parms{};

	Parms.isKillerLocallyObserved = isKillerLocallyObserved;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionController.OnRep_HasVisionFromKillerPod
// (Final, Native, Private)

void AK32KillerPodVisionController::OnRep_HasVisionFromKillerPod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "OnRep_HasVisionFromKillerPod");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionController.Server_ReleaseControlOfPods
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void AK32KillerPodVisionController::Server_ReleaseControlOfPods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "Server_ReleaseControlOfPods");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionController.Server_SetCameraOrientation
// (Final, Net, Native, Event, Private, NetServer, HasDefaults)
// Parameters:
// const struct FRotator&                  NewOrientation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AK32KillerPodVisionController::Server_SetCameraOrientation(const struct FRotator& NewOrientation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "Server_SetCameraOrientation");

	Params::K32KillerPodVisionController_Server_SetCameraOrientation Parms{};

	Parms.NewOrientation = std::move(NewOrientation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionController.Server_TakeControlOfPod
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class AK32KillerPod*                    killerPodToBeControlled                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32KillerPodVisionController::Server_TakeControlOfPod(class AK32KillerPod* killerPodToBeControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionController", "Server_TakeControlOfPod");

	Params::K32KillerPodVisionController_Server_TakeControlOfPod Parms{};

	Parms.killerPodToBeControlled = killerPodToBeControlled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionLockOnComponent.Cosmetic_ShootPodProjectileAtSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class AK32KillerPod*              currentPod                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASurvivor*                        TargetSurvivor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerPodVisionLockOnComponent::Cosmetic_ShootPodProjectileAtSurvivor(const class AK32KillerPod* currentPod, class ASurvivor* TargetSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionLockOnComponent", "Cosmetic_ShootPodProjectileAtSurvivor");

	Params::K32KillerPodVisionLockOnComponent_Cosmetic_ShootPodProjectileAtSurvivor Parms{};

	Parms.currentPod = currentPod;
	Parms.TargetSurvivor = TargetSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerPodVisionLockOnComponent.Multicast_ShootPodProjectileAtSurvivor
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const class AK32KillerPod*              originKillerPod                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASurvivor*                        TargetSurvivor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerPodVisionLockOnComponent::Multicast_ShootPodProjectileAtSurvivor(const class AK32KillerPod* originKillerPod, class ASurvivor* TargetSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionLockOnComponent", "Multicast_ShootPodProjectileAtSurvivor");

	Params::K32KillerPodVisionLockOnComponent_Multicast_ShootPodProjectileAtSurvivor Parms{};

	Parms.originKillerPod = originKillerPod;
	Parms.TargetSurvivor = TargetSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionLockOnComponent.Server_LaunchAssimilationProjectile
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class ASurvivor*                        TargetSurvivor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK32KillerPod*                    currentPod                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerPodVisionLockOnComponent::Server_LaunchAssimilationProjectile(class ASurvivor* TargetSurvivor, class AK32KillerPod* currentPod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionLockOnComponent", "Server_LaunchAssimilationProjectile");

	Params::K32KillerPodVisionLockOnComponent_Server_LaunchAssimilationProjectile Parms{};

	Parms.TargetSurvivor = TargetSurvivor;
	Parms.currentPod = currentPod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerPodVisionLockOnComponent.Server_SetSurvivorBeingLockedOn
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class ASurvivor*                        TargetSurvivor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   lockOnRatio                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerPodVisionLockOnComponent::Server_SetSurvivorBeingLockedOn(class ASurvivor* TargetSurvivor, float lockOnRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerPodVisionLockOnComponent", "Server_SetSurvivorBeingLockedOn");

	Params::K32KillerPodVisionLockOnComponent_Server_SetSurvivorBeingLockedOn Parms{};

	Parms.TargetSurvivor = TargetSurvivor;
	Parms.lockOnRatio = lockOnRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerProjectileSpawnChargeableInteractionDefinition.Cosmetic_OnPodShot
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK32KillerProjectileSpawnChargeableInteractionDefinition::Cosmetic_OnPodShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerProjectileSpawnChargeableInteractionDefinition", "Cosmetic_OnPodShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32KillerProjectileSpawnChargeableInteractionDefinition.Server_SendKillerAimingAtSurvivorGameEvent
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const bool                              isAiming                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASurvivor*                        TargetSurvivor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerProjectileSpawnChargeableInteractionDefinition::Server_SendKillerAimingAtSurvivorGameEvent(const bool isAiming, class ASurvivor* TargetSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerProjectileSpawnChargeableInteractionDefinition", "Server_SendKillerAimingAtSurvivorGameEvent");

	Params::K32KillerProjectileSpawnChargeableInteractionDefinition_Server_SendKillerAimingAtSurvivorGameEvent Parms{};

	Parms.isAiming = isAiming;
	Parms.TargetSurvivor = TargetSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerToSurvivorTeleportInteractionDefinition.Cosmetic_DisableTeleportVignette
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerToSurvivorTeleportInteractionDefinition::Cosmetic_DisableTeleportVignette(class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerToSurvivorTeleportInteractionDefinition", "Cosmetic_DisableTeleportVignette");

	Params::K32KillerToSurvivorTeleportInteractionDefinition_Cosmetic_DisableTeleportVignette Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerToSurvivorTeleportInteractionDefinition.Cosmetic_EnableTeleportVignette
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerToSurvivorTeleportInteractionDefinition::Cosmetic_EnableTeleportVignette(class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerToSurvivorTeleportInteractionDefinition", "Cosmetic_EnableTeleportVignette");

	Params::K32KillerToSurvivorTeleportInteractionDefinition_Cosmetic_EnableTeleportVignette Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerToSurvivorTeleportInteractionDefinition.Cosmetic_OnTeleportEnd
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerToSurvivorTeleportInteractionDefinition::Cosmetic_OnTeleportEnd(class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerToSurvivorTeleportInteractionDefinition", "Cosmetic_OnTeleportEnd");

	Params::K32KillerToSurvivorTeleportInteractionDefinition_Cosmetic_OnTeleportEnd Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerToSurvivorTeleportInteractionDefinition.Cosmetic_OnTeleportStart
// (BlueprintCosmetic, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   teleportEndLocation                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   teleportStartLocation                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerToSurvivorTeleportInteractionDefinition::Cosmetic_OnTeleportStart(class AKiller* Killer, const struct FVector& teleportEndLocation, const struct FVector& teleportStartLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerToSurvivorTeleportInteractionDefinition", "Cosmetic_OnTeleportStart");

	Params::K32KillerToSurvivorTeleportInteractionDefinition_Cosmetic_OnTeleportStart Parms{};

	Parms.Killer = Killer;
	Parms.teleportEndLocation = std::move(teleportEndLocation);
	Parms.teleportStartLocation = std::move(teleportStartLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32KillerToSurvivorTeleportInteractionDefinition.Multicast_DestroyPallet
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class APallet*                          Pallet                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerToSurvivorTeleportInteractionDefinition::Multicast_DestroyPallet(class APallet* Pallet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerToSurvivorTeleportInteractionDefinition", "Multicast_DestroyPallet");

	Params::K32KillerToSurvivorTeleportInteractionDefinition_Multicast_DestroyPallet Parms{};

	Parms.Pallet = Pallet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerToSurvivorTeleportInteractionDefinition.Multicast_OnTeleportEnded
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerToSurvivorTeleportInteractionDefinition::Multicast_OnTeleportEnded(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerToSurvivorTeleportInteractionDefinition", "Multicast_OnTeleportEnded");

	Params::K32KillerToSurvivorTeleportInteractionDefinition_Multicast_OnTeleportEnded Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerToSurvivorTeleportInteractionDefinition.Multicast_OnTeleportStarted
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   teleportStartLocation                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   teleportEndLocation                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerToSurvivorTeleportInteractionDefinition::Multicast_OnTeleportStarted(class ADBDPlayer* Player, const struct FVector& teleportStartLocation, const struct FVector& teleportEndLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerToSurvivorTeleportInteractionDefinition", "Multicast_OnTeleportStarted");

	Params::K32KillerToSurvivorTeleportInteractionDefinition_Multicast_OnTeleportStarted Parms{};

	Parms.Player = Player;
	Parms.teleportStartLocation = std::move(teleportStartLocation);
	Parms.teleportEndLocation = std::move(teleportEndLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerToSurvivorTeleportInteractionDefinition.Multicast_SetTeleportTarget
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   teleportEndLocation                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   teleportStartLocation                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK32KillerPod*                    initiatedPod                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerToSurvivorTeleportInteractionDefinition::Multicast_SetTeleportTarget(class ASurvivor* Survivor, const struct FVector& teleportEndLocation, const struct FVector& teleportStartLocation, class AK32KillerPod* initiatedPod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerToSurvivorTeleportInteractionDefinition", "Multicast_SetTeleportTarget");

	Params::K32KillerToSurvivorTeleportInteractionDefinition_Multicast_SetTeleportTarget Parms{};

	Parms.Survivor = Survivor;
	Parms.teleportEndLocation = std::move(teleportEndLocation);
	Parms.teleportStartLocation = std::move(teleportStartLocation);
	Parms.initiatedPod = initiatedPod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerToSurvivorTeleportInteractionDefinition.OnKillerCollisionIngoreLingerComplete
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerToSurvivorTeleportInteractionDefinition::OnKillerCollisionIngoreLingerComplete(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerToSurvivorTeleportInteractionDefinition", "OnKillerCollisionIngoreLingerComplete");

	Params::K32KillerToSurvivorTeleportInteractionDefinition_OnKillerCollisionIngoreLingerComplete Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerToSurvivorTeleportInteractionDefinition.OnLevelReadyToPlay
// (Final, Native, Private)

void UK32KillerToSurvivorTeleportInteractionDefinition::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerToSurvivorTeleportInteractionDefinition", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerToSurvivorTeleportInteractionDefinition.Server_SetTeleportTarget
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK32KillerPod*                    initiatedPod                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerToSurvivorTeleportInteractionDefinition::Server_SetTeleportTarget(class ASurvivor* Survivor, class AK32KillerPod* initiatedPod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerToSurvivorTeleportInteractionDefinition", "Server_SetTeleportTarget");

	Params::K32KillerToSurvivorTeleportInteractionDefinition_Server_SetTeleportTarget Parms{};

	Parms.Survivor = Survivor;
	Parms.initiatedPod = initiatedPod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32KillerToSurvivorTeleportInteractionDefinition.StartTeleportOut
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32KillerToSurvivorTeleportInteractionDefinition::StartTeleportOut(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32KillerToSurvivorTeleportInteractionDefinition", "StartTeleportOut");

	Params::K32KillerToSurvivorTeleportInteractionDefinition_StartTeleportOut Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32OverclockStatusEffectBase.Multicast_DestroyPallet
// (Net, NetReliable, Native, Event, NetMulticast, Protected, Const)
// Parameters:
// class APallet*                          Pallet                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32OverclockStatusEffectBase::Multicast_DestroyPallet(class APallet* Pallet, class AKiller* Killer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32OverclockStatusEffectBase", "Multicast_DestroyPallet");

	Params::K32OverclockStatusEffectBase_Multicast_DestroyPallet Parms{};

	Parms.Pallet = Pallet;
	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32P01.GetExhaustionDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK32P01::GetExhaustionDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32P01", "GetExhaustionDurationAtLevel");

	Params::K32P01_GetExhaustionDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32P01SurvivorStatusEffect.Authority_OnSurvivorDamageStateChanged
// (Final, Native, Private)
// Parameters:
// EHealthState                            oldDamageState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHealthState                            newDamageState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32P01SurvivorStatusEffect::Authority_OnSurvivorDamageStateChanged(EHealthState oldDamageState, EHealthState newDamageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32P01SurvivorStatusEffect", "Authority_OnSurvivorDamageStateChanged");

	Params::K32P01SurvivorStatusEffect_Authority_OnSurvivorDamageStateChanged Parms{};

	Parms.oldDamageState = oldDamageState;
	Parms.newDamageState = newDamageState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32P02.GetHinderedEffectDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK32P02::GetHinderedEffectDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32P02", "GetHinderedEffectDurationAtLevel");

	Params::K32P02_GetHinderedEffectDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32P02.GetPerkCooldownAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK32P02::GetPerkCooldownAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32P02", "GetPerkCooldownAtLevel");

	Params::K32P02_GetPerkCooldownAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32P02.GetPerkRangeAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK32P02::GetPerkRangeAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32P02", "GetPerkRangeAtLevel");

	Params::K32P02_GetPerkRangeAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32P03.GetHastePercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK32P03::GetHastePercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32P03", "GetHastePercent");

	Params::K32P03_GetHastePercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32P03.GetStatusEffectDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK32P03::GetStatusEffectDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32P03", "GetStatusEffectDurationAtLevel");

	Params::K32P03_GetStatusEffectDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32Power.OnEmpAddedToPool
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32Power::OnEmpAddedToPool(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Power", "OnEmpAddedToPool");

	Params::K32Power_OnEmpAddedToPool Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32Power.OnPodAddedToPool
// (Final, Native, Private, Const)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32Power::OnPodAddedToPool(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32Power", "OnPodAddedToPool");

	Params::K32Power_OnPodAddedToPool Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32PowerStatusHandlerComponent.Authority_OnSurvivorAdded
// (Final, Native, Private)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32PowerStatusHandlerComponent::Authority_OnSurvivorAdded(class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32PowerStatusHandlerComponent", "Authority_OnSurvivorAdded");

	Params::K32PowerStatusHandlerComponent_Authority_OnSurvivorAdded Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32PowerStatusHandlerComponent.Cosmetic_OnAssimilationChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class ASurvivor*                  Survivor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              IsAssimilated                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32PowerStatusHandlerComponent::Cosmetic_OnAssimilationChanged(const class ASurvivor* Survivor, const bool IsAssimilated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32PowerStatusHandlerComponent", "Cosmetic_OnAssimilationChanged");

	Params::K32PowerStatusHandlerComponent_Cosmetic_OnAssimilationChanged Parms{};

	Parms.Survivor = Survivor;
	Parms.IsAssimilated = IsAssimilated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32PowerStatusHandlerComponent.Cosmetic_OnAssimilationSpreadingToSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class ASurvivor*                  originatingSurvivor                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ASurvivor*                  TargetSurvivor                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32PowerStatusHandlerComponent::Cosmetic_OnAssimilationSpreadingToSurvivor(const class ASurvivor* originatingSurvivor, const class ASurvivor* TargetSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32PowerStatusHandlerComponent", "Cosmetic_OnAssimilationSpreadingToSurvivor");

	Params::K32PowerStatusHandlerComponent_Cosmetic_OnAssimilationSpreadingToSurvivor Parms{};

	Parms.originatingSurvivor = originatingSurvivor;
	Parms.TargetSurvivor = TargetSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32PowerStatusHandlerComponent.Cosmetic_OnInRangeOfAssimilationSpreadingSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class ASurvivor*                  originatingSurvivor                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ASurvivor*                  TargetSurvivor                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32PowerStatusHandlerComponent::Cosmetic_OnInRangeOfAssimilationSpreadingSurvivor(const class ASurvivor* originatingSurvivor, const class ASurvivor* TargetSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32PowerStatusHandlerComponent", "Cosmetic_OnInRangeOfAssimilationSpreadingSurvivor");

	Params::K32PowerStatusHandlerComponent_Cosmetic_OnInRangeOfAssimilationSpreadingSurvivor Parms{};

	Parms.originatingSurvivor = originatingSurvivor;
	Parms.TargetSurvivor = TargetSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32PowerStatusHandlerComponent.Multicast_OnAssimilationSpreadingToSurvivor
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// const class ASurvivor*                  originatingSurvivor                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ASurvivor*                  TargetSurvivor                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32PowerStatusHandlerComponent::Multicast_OnAssimilationSpreadingToSurvivor(const class ASurvivor* originatingSurvivor, const class ASurvivor* TargetSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32PowerStatusHandlerComponent", "Multicast_OnAssimilationSpreadingToSurvivor");

	Params::K32PowerStatusHandlerComponent_Multicast_OnAssimilationSpreadingToSurvivor Parms{};

	Parms.originatingSurvivor = originatingSurvivor;
	Parms.TargetSurvivor = TargetSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32PowerStatusHandlerComponent.Multicast_OnInRangeOfAssimilationSpreadingSurvivor
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// const class ASurvivor*                  originatingSurvivor                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ASurvivor*                  TargetSurvivor                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32PowerStatusHandlerComponent::Multicast_OnInRangeOfAssimilationSpreadingSurvivor(const class ASurvivor* originatingSurvivor, const class ASurvivor* TargetSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32PowerStatusHandlerComponent", "Multicast_OnInRangeOfAssimilationSpreadingSurvivor");

	Params::K32PowerStatusHandlerComponent_Multicast_OnInRangeOfAssimilationSpreadingSurvivor Parms{};

	Parms.originatingSurvivor = originatingSurvivor;
	Parms.TargetSurvivor = TargetSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32PowerStatusHandlerComponent.Multicast_SurvivorScream
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK32PowerStatusHandlerComponent::Multicast_SurvivorScream(class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32PowerStatusHandlerComponent", "Multicast_SurvivorScream");

	Params::K32PowerStatusHandlerComponent_Multicast_SurvivorScream Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32PowerStatusHandlerComponent.OnIntroCompleted
// (Final, Native, Private)

void UK32PowerStatusHandlerComponent::OnIntroCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32PowerStatusHandlerComponent", "OnIntroCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32PowerStatusHandlerComponent.OnRep_SurvivorStatusList
// (Final, Native, Private)
// Parameters:
// const TArray<struct FK32SurvivorStatus>&oldSurvivorStatus                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UK32PowerStatusHandlerComponent::OnRep_SurvivorStatusList(const TArray<struct FK32SurvivorStatus>& oldSurvivorStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32PowerStatusHandlerComponent", "OnRep_SurvivorStatusList");

	Params::K32PowerStatusHandlerComponent_OnRep_SurvivorStatusList Parms{};

	Parms.oldSurvivorStatus = std::move(oldSurvivorStatus);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32SurvivorAnimInstance.ResetHasBeenAssimilatedByAnotherSurvivor
// (Final, Native, Protected, BlueprintCallable)

void UK32SurvivorAnimInstance::ResetHasBeenAssimilatedByAnotherSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorAnimInstance", "ResetHasBeenAssimilatedByAnotherSurvivor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32SurvivorAnimInstance.ResetHasBeenAssimilatedByKiller
// (Final, Native, Protected, BlueprintCallable)

void UK32SurvivorAnimInstance::ResetHasBeenAssimilatedByKiller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorAnimInstance", "ResetHasBeenAssimilatedByKiller");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32SurvivorAnimInstance.ResetHasBeenCleansedFromAssimilation
// (Final, Native, Protected, BlueprintCallable)

void UK32SurvivorAnimInstance::ResetHasBeenCleansedFromAssimilation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorAnimInstance", "ResetHasBeenCleansedFromAssimilation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32SurvivorCosmeticHelperActor.Cosmetic_OnIsEffectiveEmpInRangeChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              isEffectiveEmpInRange                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32SurvivorCosmeticHelperActor::Cosmetic_OnIsEffectiveEmpInRangeChanged(const bool isEffectiveEmpInRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorCosmeticHelperActor", "Cosmetic_OnIsEffectiveEmpInRangeChanged");

	Params::K32SurvivorCosmeticHelperActor_Cosmetic_OnIsEffectiveEmpInRangeChanged Parms{};

	Parms.isEffectiveEmpInRange = isEffectiveEmpInRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32SurvivorCosmeticHelperActor.Cosmetic_OnKillerAimsPodAtSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class ADBDPlayer*                 Killer                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32SurvivorCosmeticHelperActor::Cosmetic_OnKillerAimsPodAtSurvivor(const class ADBDPlayer* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorCosmeticHelperActor", "Cosmetic_OnKillerAimsPodAtSurvivor");

	Params::K32SurvivorCosmeticHelperActor_Cosmetic_OnKillerAimsPodAtSurvivor Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32SurvivorCosmeticHelperActor.Cosmetic_OnKillerLocksOnToSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              isTargetAssimilated                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32SurvivorCosmeticHelperActor::Cosmetic_OnKillerLocksOnToSurvivor(const bool isTargetAssimilated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorCosmeticHelperActor", "Cosmetic_OnKillerLocksOnToSurvivor");

	Params::K32SurvivorCosmeticHelperActor_Cosmetic_OnKillerLocksOnToSurvivor Parms{};

	Parms.isTargetAssimilated = isTargetAssimilated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32SurvivorCosmeticHelperActor.Cosmetic_OnKillerNoLongerAimsPodAtSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32SurvivorCosmeticHelperActor::Cosmetic_OnKillerNoLongerAimsPodAtSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorCosmeticHelperActor", "Cosmetic_OnKillerNoLongerAimsPodAtSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32SurvivorCosmeticHelperActor.Cosmetic_OnKillerNoLongerLocksOnToSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK32SurvivorCosmeticHelperActor::Cosmetic_OnKillerNoLongerLocksOnToSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorCosmeticHelperActor", "Cosmetic_OnKillerNoLongerLocksOnToSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK32.K32SurvivorCosmeticHelperActor.Cosmetic_OnTeleportStart
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   teleportStartLocation                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   teleportEndLocation                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32SurvivorCosmeticHelperActor::Cosmetic_OnTeleportStart(const struct FVector& teleportStartLocation, const struct FVector& teleportEndLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorCosmeticHelperActor", "Cosmetic_OnTeleportStart");

	Params::K32SurvivorCosmeticHelperActor_Cosmetic_OnTeleportStart Parms{};

	Parms.teleportStartLocation = std::move(teleportStartLocation);
	Parms.teleportEndLocation = std::move(teleportEndLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32SurvivorCosmeticHelperActor.GetNoseLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AK32SurvivorCosmeticHelperActor::GetNoseLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorCosmeticHelperActor", "GetNoseLocation");

	Params::K32SurvivorCosmeticHelperActor_GetNoseLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32SurvivorCosmeticHelperActor.OnKillerAimsPodAtSurvivor
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AK32SurvivorCosmeticHelperActor::OnKillerAimsPodAtSurvivor(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorCosmeticHelperActor", "OnKillerAimsPodAtSurvivor");

	Params::K32SurvivorCosmeticHelperActor_OnKillerAimsPodAtSurvivor Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32SurvivorCosmeticHelperActor.OnKillerLocksOnToSurvivor
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AK32SurvivorCosmeticHelperActor::OnKillerLocksOnToSurvivor(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorCosmeticHelperActor", "OnKillerLocksOnToSurvivor");

	Params::K32SurvivorCosmeticHelperActor_OnKillerLocksOnToSurvivor Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32SurvivorCosmeticHelperActor.OnKillerNoLongerAimsPodAtSurvivor
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AK32SurvivorCosmeticHelperActor::OnKillerNoLongerAimsPodAtSurvivor(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorCosmeticHelperActor", "OnKillerNoLongerAimsPodAtSurvivor");

	Params::K32SurvivorCosmeticHelperActor_OnKillerNoLongerAimsPodAtSurvivor Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32SurvivorCosmeticHelperActor.OnKillerNoLongerLocksOnToSurvivor
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AK32SurvivorCosmeticHelperActor::OnKillerNoLongerLocksOnToSurvivor(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorCosmeticHelperActor", "OnKillerNoLongerLocksOnToSurvivor");

	Params::K32SurvivorCosmeticHelperActor_OnKillerNoLongerLocksOnToSurvivor Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK32.K32SurvivorCosmeticHelperActor.OnSurvivorDisguisedOrUndisguised
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    isDisguised                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK32SurvivorCosmeticHelperActor::OnSurvivorDisguisedOrUndisguised(bool isDisguised)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K32SurvivorCosmeticHelperActor", "OnSurvivorDisguisedOrUndisguised");

	Params::K32SurvivorCosmeticHelperActor_OnSurvivorDisguisedOrUndisguised Parms{};

	Parms.isDisguised = isDisguised;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK32.K32Utilities.DoesEmpReach
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FVector&                   launchPosition                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   targetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   rangeSquared                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK32Utilities::DoesEmpReach(const struct FVector& launchPosition, const struct FVector& targetLocation, float rangeSquared)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K32Utilities", "DoesEmpReach");

	Params::K32Utilities_DoesEmpReach Parms{};

	Parms.launchPosition = std::move(launchPosition);
	Parms.targetLocation = std::move(targetLocation);
	Parms.rangeSquared = rangeSquared;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32Utilities.IsPodOutlineAndIndicatorVisible
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AKiller*                    Killer                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK32Utilities::IsPodOutlineAndIndicatorVisible(const class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K32Utilities", "IsPodOutlineAndIndicatorVisible");

	Params::K32Utilities_IsPodOutlineAndIndicatorVisible Parms{};

	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK32.K32Utilities.IsSurvivorAbleToBeAffectedByPower
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class ASurvivor*                  Survivor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AKiller*                    Killer                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK32Utilities::IsSurvivorAbleToBeAffectedByPower(const class ASurvivor* Survivor, const class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K32Utilities", "IsSurvivorAbleToBeAffectedByPower");

	Params::K32Utilities_IsSurvivorAbleToBeAffectedByPower Parms{};

	Parms.Survivor = Survivor;
	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

