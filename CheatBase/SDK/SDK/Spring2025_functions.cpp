#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Spring2025

#include "Basic.hpp"

#include "Spring2025_classes.hpp"
#include "Spring2025_parameters.hpp"


namespace SDK
{

// Function Spring2025.FuelGenerator.Authority_AddBlockingSource
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    Source                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::Authority_AddBlockingSource(const class UObject* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Authority_AddBlockingSource");

	Params::FuelGenerator_Authority_AddBlockingSource Parms{};

	Parms.Source = Source;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.Authority_OnChargeChanged
// (Final, Native, Private)
// Parameters:
// class UChargeableComponent*             ChargeableComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PercentCompletionChange                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalPercentComplete                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::Authority_OnChargeChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Authority_OnChargeChanged");

	Params::FuelGenerator_Authority_OnChargeChanged Parms{};

	Parms.ChargeableComponent = ChargeableComponent;
	Parms.PercentCompletionChange = PercentCompletionChange;
	Parms.TotalPercentComplete = TotalPercentComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.Authority_RepairDamage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*                       repairedBy                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::Authority_RepairDamage(class ADBDPlayer* repairedBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Authority_RepairDamage");

	Params::FuelGenerator_Authority_RepairDamage Parms{};

	Parms.repairedBy = repairedBy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.Authority_SetRepaired
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              showGeneratorCloneLoudNoise                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              isAutoCompleted                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::Authority_SetRepaired(const bool showGeneratorCloneLoudNoise, const bool isAutoCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Authority_SetRepaired");

	Params::FuelGenerator_Authority_SetRepaired Parms{};

	Parms.showGeneratorCloneLoudNoise = showGeneratorCloneLoudNoise;
	Parms.isAutoCompleted = isAutoCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.Cosmetic_ClampTopActivationSingleLight
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::Cosmetic_ClampTopActivationSingleLight(float Distance, class FName ParameterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_ClampTopActivationSingleLight");

	Params::FuelGenerator_Cosmetic_ClampTopActivationSingleLight Parms{};

	Parms.Distance = Distance;
	Parms.ParameterName = ParameterName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.FuelGenerator.Cosmetic_OnBlockingStatusChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const bool                              IsBlocked                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::Cosmetic_OnBlockingStatusChanged(const bool IsBlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_OnBlockingStatusChanged");

	Params::FuelGenerator_Cosmetic_OnBlockingStatusChanged Parms{};

	Parms.IsBlocked = IsBlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.FuelGenerator.Cosmetic_OnDamageEnd
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFuelGenerator::Cosmetic_OnDamageEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_OnDamageEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.FuelGenerator.Cosmetic_OnDamageStart
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    intensified                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::Cosmetic_OnDamageStart(bool intensified)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_OnDamageStart");

	Params::FuelGenerator_Cosmetic_OnDamageStart Parms{};

	Parms.intensified = intensified;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.FuelGenerator.Cosmetic_OnEndGameCollapseStart
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFuelGenerator::Cosmetic_OnEndGameCollapseStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_OnEndGameCollapseStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.FuelGenerator.Cosmetic_OnEntityBlockingAnimationEnded
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFuelGenerator::Cosmetic_OnEntityBlockingAnimationEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_OnEntityBlockingAnimationEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.FuelGenerator.Cosmetic_OnEscapeDoorActivated
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFuelGenerator::Cosmetic_OnEscapeDoorActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_OnEscapeDoorActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.FuelGenerator.Cosmetic_OnGeneratorReset
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFuelGenerator::Cosmetic_OnGeneratorReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_OnGeneratorReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.FuelGenerator.Cosmetic_OnPreWarmASMCache
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFuelGenerator::Cosmetic_OnPreWarmASMCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_OnPreWarmASMCache");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.FuelGenerator.Cosmetic_OnRepaired
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              shouldShowGeneratorOutline                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              isAutoCompleted                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::Cosmetic_OnRepaired(const bool shouldShowGeneratorOutline, const bool isAutoCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_OnRepaired");

	Params::FuelGenerator_Cosmetic_OnRepaired Parms{};

	Parms.shouldShowGeneratorOutline = shouldShowGeneratorOutline;
	Parms.isAutoCompleted = isAutoCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.FuelGenerator.Cosmetic_OnRepairFinish
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInteractor*                      Interactor                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::Cosmetic_OnRepairFinish(const class ADBDPlayer* Player, class UInteractor* Interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_OnRepairFinish");

	Params::FuelGenerator_Cosmetic_OnRepairFinish Parms{};

	Parms.Player = Player;
	Parms.Interactor = Interactor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.FuelGenerator.Cosmetic_OnRepairStart
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::Cosmetic_OnRepairStart(const class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_OnRepairStart");

	Params::FuelGenerator_Cosmetic_OnRepairStart Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.FuelGenerator.Cosmetic_OnUpdateChargeProgress
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   newPercentComplete                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::Cosmetic_OnUpdateChargeProgress(float newPercentComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Cosmetic_OnUpdateChargeProgress");

	Params::FuelGenerator_Cosmetic_OnUpdateChargeProgress Parms{};

	Parms.newPercentComplete = newPercentComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.FuelGenerator.Multicast_BlockGenerator
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const TArray<class ADBDPlayer*>&        repairers                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFuelGenerator::Multicast_BlockGenerator(const TArray<class ADBDPlayer*>& repairers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Multicast_BlockGenerator");

	Params::FuelGenerator_Multicast_BlockGenerator Parms{};

	Parms.repairers = std::move(repairers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.Multicast_OnRepaired
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const bool                              showGeneratorCloneLoudNoise                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              isAutoCompleted                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             updatedRemainingGeneratorCount                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::Multicast_OnRepaired(const bool showGeneratorCloneLoudNoise, const bool isAutoCompleted, const int32 updatedRemainingGeneratorCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Multicast_OnRepaired");

	Params::FuelGenerator_Multicast_OnRepaired Parms{};

	Parms.showGeneratorCloneLoudNoise = showGeneratorCloneLoudNoise;
	Parms.isAutoCompleted = isAutoCompleted;
	Parms.updatedRemainingGeneratorCount = updatedRemainingGeneratorCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.Multicast_SetRepairInteractionsObstructed
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const TArray<EGeneratorInteractableZone>&interactorZonesBlocked                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFuelGenerator::Multicast_SetRepairInteractionsObstructed(const TArray<EGeneratorInteractableZone>& interactorZonesBlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "Multicast_SetRepairInteractionsObstructed");

	Params::FuelGenerator_Multicast_SetRepairInteractionsObstructed Parms{};

	Parms.interactorZonesBlocked = std::move(interactorZonesBlocked);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.OnCaptureProbeSecondState
// (Event, Public, BlueprintEvent)

void AFuelGenerator::OnCaptureProbeSecondState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "OnCaptureProbeSecondState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.FuelGenerator.OnChargeChanged
// (Final, Native, Private)
// Parameters:
// class UChargeableComponent*             ChargeableComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::OnChargeChanged(class UChargeableComponent* ChargeableComponent, float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "OnChargeChanged");

	Params::FuelGenerator_OnChargeChanged Parms{};

	Parms.ChargeableComponent = ChargeableComponent;
	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.OnEscapeDoorActivated
// (Final, Native, Private)

void AFuelGenerator::OnEscapeDoorActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "OnEscapeDoorActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.OnGeneratorBlockMontageEnded
// (Final, Native, Private)
// Parameters:
// const struct FAnimationMontageDescriptor&animMontageID                                          (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                                    interrupted                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::OnGeneratorBlockMontageEnded(const struct FAnimationMontageDescriptor& animMontageID, bool interrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "OnGeneratorBlockMontageEnded");

	Params::FuelGenerator_OnGeneratorBlockMontageEnded Parms{};

	Parms.animMontageID = std::move(animMontageID);
	Parms.interrupted = interrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.OnRegressionStateChanged
// (Final, Native, Private)
// Parameters:
// const bool                              regressing                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       lastDamageChangeSource                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::OnRegressionStateChanged(const bool regressing, class ADBDPlayer* lastDamageChangeSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "OnRegressionStateChanged");

	Params::FuelGenerator_OnRegressionStateChanged Parms{};

	Parms.regressing = regressing;
	Parms.lastDamageChangeSource = lastDamageChangeSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.OnRep_IsBlocked
// (Final, Native, Private)

void AFuelGenerator::OnRep_IsBlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "OnRep_IsBlocked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.PostAkEvent
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    akEvent                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   callbackMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>&postEventCallback                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFuelGenerator::PostAkEvent(class UAkAudioEvent* akEvent, int32 callbackMask, const TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)>& postEventCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "PostAkEvent");

	Params::FuelGenerator_PostAkEvent Parms{};

	Parms.akEvent = akEvent;
	Parms.callbackMask = callbackMask;
	Parms.postEventCallback = postEventCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Spring2025.FuelGenerator.SetIsAutoCompleted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              isAutoCompleted                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::SetIsAutoCompleted(const bool isAutoCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "SetIsAutoCompleted");

	Params::FuelGenerator_SetIsAutoCompleted Parms{};

	Parms.isAutoCompleted = isAutoCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.StopDischarge
// (Final, Native, Private)

void AFuelGenerator::StopDischarge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "StopDischarge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGenerator.GetChargePercentComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFuelGenerator::GetChargePercentComplete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "GetChargePercentComplete");

	Params::FuelGenerator_GetChargePercentComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Spring2025.FuelGenerator.GetGeneratorChargeComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UChargeableComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UChargeableComponent* AFuelGenerator::GetGeneratorChargeComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "GetGeneratorChargeComponent");

	Params::FuelGenerator_GetGeneratorChargeComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Spring2025.FuelGenerator.GetIsAutoCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFuelGenerator::GetIsAutoCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "GetIsAutoCompleted");

	Params::FuelGenerator_GetIsAutoCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Spring2025.FuelGenerator.IsBeingDamagedByKiller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFuelGenerator::IsBeingDamagedByKiller() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "IsBeingDamagedByKiller");

	Params::FuelGenerator_IsBeingDamagedByKiller Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Spring2025.FuelGenerator.TriggerLoudNoiseIfNeeded
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class AActor*                           NoiseInstigator                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFuelGenerator::TriggerLoudNoiseIfNeeded(class AActor* NoiseInstigator) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGenerator", "TriggerLoudNoiseIfNeeded");

	Params::FuelGenerator_TriggerLoudNoiseIfNeeded Parms{};

	Parms.NoiseInstigator = NoiseInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGeneratorRevealerStatusEffect.OnRep_RevealedFuelGenerator
// (Final, Native, Private)
// Parameters:
// class AFuelGenerator*                   previousRevealedGenerator                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFuelGeneratorRevealerStatusEffect::OnRep_RevealedFuelGenerator(class AFuelGenerator* previousRevealedGenerator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGeneratorRevealerStatusEffect", "OnRep_RevealedFuelGenerator");

	Params::FuelGeneratorRevealerStatusEffect_OnRep_RevealedFuelGenerator Parms{};

	Parms.previousRevealedGenerator = previousRevealedGenerator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelGeneratorStopRegressionInteraction.OnRep_SpawnedChargeable
// (Final, Native, Private)

void UFuelGeneratorStopRegressionInteraction::OnRep_SpawnedChargeable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelGeneratorStopRegressionInteraction", "OnRep_SpawnedChargeable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.FuelPump.Cosmetic_OnFuelPumpBlocked
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFuelPump::Cosmetic_OnFuelPumpBlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FuelPump", "Cosmetic_OnFuelPumpBlocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.GameObjective_ActivatedGenerators_FuelGenerators.OnRep_FuelGeneratorCount
// (Final, Native, Private)
// Parameters:
// int32                                   previousCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGameObjective_ActivatedGenerators_FuelGenerators::OnRep_FuelGeneratorCount(int32 previousCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameObjective_ActivatedGenerators_FuelGenerators", "OnRep_FuelGeneratorCount");

	Params::GameObjective_ActivatedGenerators_FuelGenerators_OnRep_FuelGeneratorCount Parms{};

	Parms.previousCount = previousCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.GameObjective_ActivatedGenerators_FuelGenerators.OnRep_StandardGeneratorCount
// (Final, Native, Private)
// Parameters:
// int32                                   previousCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGameObjective_ActivatedGenerators_FuelGenerators::OnRep_StandardGeneratorCount(int32 previousCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameObjective_ActivatedGenerators_FuelGenerators", "OnRep_StandardGeneratorCount");

	Params::GameObjective_ActivatedGenerators_FuelGenerators_OnRep_StandardGeneratorCount Parms{};

	Parms.previousCount = previousCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.GameObjective_ActivatedGenerators_FuelGenerators.GetFuelGeneratorCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AGameObjective_ActivatedGenerators_FuelGenerators::GetFuelGeneratorCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameObjective_ActivatedGenerators_FuelGenerators", "GetFuelGeneratorCount");

	Params::GameObjective_ActivatedGenerators_FuelGenerators_GetFuelGeneratorCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Spring2025.GameObjective_ActivatedGenerators_FuelGenerators.GetStandardGeneratorCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AGameObjective_ActivatedGenerators_FuelGenerators::GetStandardGeneratorCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameObjective_ActivatedGenerators_FuelGenerators", "GetStandardGeneratorCount");

	Params::GameObjective_ActivatedGenerators_FuelGenerators_GetStandardGeneratorCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Spring2025.JerryCan.Cosmetic_OnChargeChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   chargeValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJerryCan::Cosmetic_OnChargeChanged(float chargeValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnChargeChanged");

	Params::JerryCan_Cosmetic_OnChargeChanged Parms{};

	Parms.chargeValue = chargeValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.JerryCan.Cosmetic_OnCollectorGreatFall
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AJerryCan::Cosmetic_OnCollectorGreatFall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnCollectorGreatFall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.JerryCan.Cosmetic_OnDisappearDelayStart
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AJerryCan::Cosmetic_OnDisappearDelayStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnDisappearDelayStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.JerryCan.Cosmetic_OnDroppedForcefully
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AJerryCan::Cosmetic_OnDroppedForcefully()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnDroppedForcefully");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.JerryCan.Cosmetic_OnDroppedOnGround
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AJerryCan::Cosmetic_OnDroppedOnGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnDroppedOnGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.JerryCan.Cosmetic_OnEmptyCanDroppedOnGround
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AJerryCan::Cosmetic_OnEmptyCanDroppedOnGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnEmptyCanDroppedOnGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.JerryCan.Cosmetic_OnFuelRemovalStarted
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           fuelReceiver                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJerryCan::Cosmetic_OnFuelRemovalStarted(const class ADBDPlayer* Player, class AActor* fuelReceiver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnFuelRemovalStarted");

	Params::JerryCan_Cosmetic_OnFuelRemovalStarted Parms{};

	Parms.Player = Player;
	Parms.fuelReceiver = fuelReceiver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.JerryCan.Cosmetic_OnFuelRemovalStopped
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJerryCan::Cosmetic_OnFuelRemovalStopped(const class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnFuelRemovalStopped");

	Params::JerryCan_Cosmetic_OnFuelRemovalStopped Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.JerryCan.Cosmetic_OnGoBackToPoolCanceled
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AJerryCan::Cosmetic_OnGoBackToPoolCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnGoBackToPoolCanceled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.JerryCan.Cosmetic_OnGoBackToPoolPending
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AJerryCan::Cosmetic_OnGoBackToPoolPending()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnGoBackToPoolPending");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.JerryCan.Cosmetic_OnJerryCanAcquired
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsAcquired                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJerryCan::Cosmetic_OnJerryCanAcquired(bool IsAcquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnJerryCanAcquired");

	Params::JerryCan_Cosmetic_OnJerryCanAcquired Parms{};

	Parms.IsAcquired = IsAcquired;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.JerryCan.Cosmetic_OnKickedByKiller
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AJerryCan::Cosmetic_OnKickedByKiller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnKickedByKiller");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.JerryCan.Cosmetic_OnPickedUpFromGround
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJerryCan::Cosmetic_OnPickedUpFromGround(const class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnPickedUpFromGround");

	Params::JerryCan_Cosmetic_OnPickedUpFromGround Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.JerryCan.Cosmetic_OnPickedUpFromPump
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJerryCan::Cosmetic_OnPickedUpFromPump(const class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnPickedUpFromPump");

	Params::JerryCan_Cosmetic_OnPickedUpFromPump Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Spring2025.JerryCan.Cosmetic_OnWentBackToPool
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AJerryCan::Cosmetic_OnWentBackToPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Cosmetic_OnWentBackToPool");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Spring2025.JerryCan.Multicast_OnEmptyJerryCanDropped
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// EItemDropType                           dropType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJerryCan::Multicast_OnEmptyJerryCanDropped(EItemDropType dropType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Multicast_OnEmptyJerryCanDropped");

	Params::JerryCan_Multicast_OnEmptyJerryCanDropped Parms{};

	Parms.dropType = dropType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.JerryCan.Multicast_OnJerryCanAcquired
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                                    IsAcquired                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJerryCan::Multicast_OnJerryCanAcquired(bool IsAcquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Multicast_OnJerryCanAcquired");

	Params::JerryCan_Multicast_OnJerryCanAcquired Parms{};

	Parms.IsAcquired = IsAcquired;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.JerryCan.Multicast_OnJerryCanPickedUp
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    wasPickedUpFromFuelPump                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJerryCan::Multicast_OnJerryCanPickedUp(const class ADBDPlayer* Player, bool wasPickedUpFromFuelPump)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "Multicast_OnJerryCanPickedUp");

	Params::JerryCan_Multicast_OnJerryCanPickedUp Parms{};

	Parms.Player = Player;
	Parms.wasPickedUpFromFuelPump = wasPickedUpFromFuelPump;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.JerryCan.OnJerryCanChargePercentChange
// (Final, Native, Private)
// Parameters:
// float                                   ChargePercent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJerryCan::OnJerryCanChargePercentChange(float ChargePercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "OnJerryCanChargePercentChange");

	Params::JerryCan_OnJerryCanChargePercentChange Parms{};

	Parms.ChargePercent = ChargePercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.JerryCan.OnRep_GroundState
// (Final, Native, Private)
// Parameters:
// EGroundState                            previousState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJerryCan::OnRep_GroundState(EGroundState previousState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCan", "OnRep_GroundState");

	Params::JerryCan_OnRep_GroundState Parms{};

	Parms.previousState = previousState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.JerryCanRunningBloodTrailComponent.OnCollectorRunningAndMoving
// (Final, Native, Private)
// Parameters:
// bool                                    isRunningAndMoving                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJerryCanRunningBloodTrailComponent::OnCollectorRunningAndMoving(bool isRunningAndMoving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JerryCanRunningBloodTrailComponent", "OnCollectorRunningAndMoving");

	Params::JerryCanRunningBloodTrailComponent_OnCollectorRunningAndMoving Parms{};

	Parms.isRunningAndMoving = isRunningAndMoving;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spring2025.Spring2025EventCheatComponent.DBD_SetFuelGeneratorsPercentComplete
// (Final, Exec, Native, Public, Const)
// Parameters:
// float                                   percentComplete                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpring2025EventCheatComponent::DBD_SetFuelGeneratorsPercentComplete(float percentComplete) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spring2025EventCheatComponent", "DBD_SetFuelGeneratorsPercentComplete");

	Params::Spring2025EventCheatComponent_DBD_SetFuelGeneratorsPercentComplete Parms{};

	Parms.percentComplete = percentComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

