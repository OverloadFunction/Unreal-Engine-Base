#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDInteraction

#include "Basic.hpp"

#include "DBDInteraction_classes.hpp"
#include "DBDInteraction_parameters.hpp"


namespace SDK
{

// Function DBDInteraction.BaseStalkModeInteraction.CanStalk
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBaseStalkModeInteraction::CanStalk() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseStalkModeInteraction", "CanStalk");

	Params::BaseStalkModeInteraction_CanStalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.BaseStalkModeInteraction.GetStalkerComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStalkerComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStalkerComponent* UBaseStalkModeInteraction::GetStalkerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseStalkModeInteraction", "GetStalkerComponent");

	Params::BaseStalkModeInteraction_GetStalkerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.CollectItemInteraction.GetItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACollectable*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACollectable* UCollectItemInteraction::GetItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollectItemInteraction", "GetItem");

	Params::CollectItemInteraction_GetItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.CollectItemInteraction.GetItemToReplace
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACollectable*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACollectable* UCollectItemInteraction::GetItemToReplace(const class ADBDPlayer* Player) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollectItemInteraction", "GetItemToReplace");

	Params::CollectItemInteraction_GetItemToReplace Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.BaseLockerInteraction.GetLocker
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ALocker*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ALocker* UBaseLockerInteraction::GetLocker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseLockerInteraction", "GetLocker");

	Params::BaseLockerInteraction_GetLocker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.BasicChargeableInteraction.OnRep_SpawnedChargeable
// (Final, Native, Private)

void UBasicChargeableInteraction::OnRep_SpawnedChargeable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BasicChargeableInteraction", "OnRep_SpawnedChargeable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDInteraction.BasicChargeableInteraction.GetChargeTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBasicChargeableInteraction::GetChargeTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BasicChargeableInteraction", "GetChargeTime");

	Params::BasicChargeableInteraction_GetChargeTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.SearchChestInteractionBase.FireChestScoreEvent
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USearchChestInteractionBase::FireChestScoreEvent(const class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SearchChestInteractionBase", "FireChestScoreEvent");

	Params::SearchChestInteractionBase_FireChestScoreEvent Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDInteraction.ThrowInteraction.InitThrowCancellationExitTime
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UThrowInteraction::InitThrowCancellationExitTime(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThrowInteraction", "InitThrowCancellationExitTime");

	Params::ThrowInteraction_InitThrowCancellationExitTime Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDInteraction.ThrowInteraction.HasCancelledThrow
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UThrowInteraction::HasCancelledThrow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThrowInteraction", "HasCancelledThrow");

	Params::ThrowInteraction_HasCancelledThrow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.HealInteraction.Authority_OnHealChargeApplied
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   IndividualChargeAmount                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalChargeAmount                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ChargeInstigator                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    WasCoop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHealInteraction::Authority_OnHealChargeApplied(float IndividualChargeAmount, float TotalChargeAmount, class AActor* ChargeInstigator, bool WasCoop, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HealInteraction", "Authority_OnHealChargeApplied");

	Params::HealInteraction_Authority_OnHealChargeApplied Parms{};

	Parms.IndividualChargeAmount = IndividualChargeAmount;
	Parms.TotalChargeAmount = TotalChargeAmount;
	Parms.ChargeInstigator = ChargeInstigator;
	Parms.WasCoop = WasCoop;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDInteraction.HealInteraction.Authority_OnPlayerHealed
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       healingPlayer                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       healedPlayer                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHealInteraction::Authority_OnPlayerHealed(class ADBDPlayer* healingPlayer, class ADBDPlayer* healedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HealInteraction", "Authority_OnPlayerHealed");

	Params::HealInteraction_Authority_OnPlayerHealed Parms{};

	Parms.healingPlayer = healingPlayer;
	Parms.healedPlayer = healedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDInteraction.HealInteraction.Authority_OnSurvivorHealed
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHealResult&               HealResult                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHealInteraction::Authority_OnSurvivorHealed(const struct FHealResult& HealResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HealInteraction", "Authority_OnSurvivorHealed");

	Params::HealInteraction_Authority_OnSurvivorHealed Parms{};

	Parms.HealResult = std::move(HealResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDInteraction.HealInteraction.GetHealScorePercent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHealInteraction::GetHealScorePercent(float Delta) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HealInteraction", "GetHealScorePercent");

	Params::HealInteraction_GetHealScorePercent Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.HealInteraction.GetTargetSurvivor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASurvivor*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASurvivor* UHealInteraction::GetTargetSurvivor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HealInteraction", "GetTargetSurvivor");

	Params::HealInteraction_GetTargetSurvivor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.HealInteraction.HasChargedMedkit
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHealInteraction::HasChargedMedkit(const class ADBDPlayer* Player) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HealInteraction", "HasChargedMedkit");

	Params::HealInteraction_HasChargedMedkit Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.GeneratorRepairInteraction.Authority_OnSkillCheckResponseAuthority
// (Final, Native, Private)
// Parameters:
// bool                                    Success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Bonus                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TriggerLoudNoise                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESkillCheckCustomType                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGeneratorRepairInteraction::Authority_OnSkillCheckResponseAuthority(bool Success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, ESkillCheckCustomType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneratorRepairInteraction", "Authority_OnSkillCheckResponseAuthority");

	Params::GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority Parms{};

	Parms.Success = Success;
	Parms.Bonus = Bonus;
	Parms.Player = Player;
	Parms.TriggerLoudNoise = TriggerLoudNoise;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDInteraction.GeneratorRepairInteraction.SetIsObstructed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    obstructed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGeneratorRepairInteraction::SetIsObstructed(bool obstructed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneratorRepairInteraction", "SetIsObstructed");

	Params::GeneratorRepairInteraction_SetIsObstructed Parms{};

	Parms.obstructed = obstructed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDInteraction.GeneratorRepairInteraction.GetInteractionChargeSpeedMultiplier_Implementation
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ADBDPlayer*                 Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGeneratorRepairInteraction::GetInteractionChargeSpeedMultiplier_Implementation(const class ADBDPlayer* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneratorRepairInteraction", "GetInteractionChargeSpeedMultiplier_Implementation");

	Params::GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.GeneratorRepairInteraction.GetOwningGenerator
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AGenerator*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AGenerator* UGeneratorRepairInteraction::GetOwningGenerator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneratorRepairInteraction", "GetOwningGenerator");

	Params::GeneratorRepairInteraction_GetOwningGenerator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.GeneratorRepairInteraction.IsBeingRepaired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGeneratorRepairInteraction::IsBeingRepaired() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneratorRepairInteraction", "IsBeingRepaired");

	Params::GeneratorRepairInteraction_IsBeingRepaired Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.GeneratorRepairInteraction.IsInteractionPossibleInternal
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGeneratorRepairInteraction::IsInteractionPossibleInternal(const class ADBDPlayer* Player) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneratorRepairInteraction", "IsInteractionPossibleInternal");

	Params::GeneratorRepairInteraction_IsInteractionPossibleInternal Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.GeneratorRepairInteraction.IsObstructed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGeneratorRepairInteraction::IsObstructed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneratorRepairInteraction", "IsObstructed");

	Params::GeneratorRepairInteraction_IsObstructed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.GeneratorToolboxRepairInteraction.GetInteractionTextWhenEmpty
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UGeneratorToolboxRepairInteraction::GetInteractionTextWhenEmpty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneratorToolboxRepairInteraction", "GetInteractionTextWhenEmpty");

	Params::GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.GeneratorToolboxRepairInteraction.HasChargedToolBox
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGeneratorToolboxRepairInteraction::HasChargedToolBox(const class ADBDPlayer* Player) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneratorToolboxRepairInteraction", "HasChargedToolBox");

	Params::GeneratorToolboxRepairInteraction_HasChargedToolBox Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.Unhook.NativeAddSnapPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  snapPoint                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnhook::NativeAddSnapPoint(class USceneComponent* snapPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Unhook", "NativeAddSnapPoint");

	Params::Unhook_NativeAddSnapPoint Parms{};

	Parms.snapPoint = snapPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDInteraction.Unhook.NativeGetHook
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMeatHook*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMeatHook* UUnhook::NativeGetHook() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Unhook", "NativeGetHook");

	Params::Unhook_NativeGetHook Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.AntiCampSelfUnhook.GetAntiCampTrapImmunityDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAntiCampSelfUnhook::GetAntiCampTrapImmunityDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntiCampSelfUnhook", "GetAntiCampTrapImmunityDuration");

	Params::AntiCampSelfUnhook_GetAntiCampTrapImmunityDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.BaseTotemInteraction.GetTotem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATotem*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATotem* UBaseTotemInteraction::GetTotem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTotemInteraction", "GetTotem");

	Params::BaseTotemInteraction_GetTotem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.BlessTotem.Cosmetic_OnInteractionFinished
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UBlessTotem::Cosmetic_OnInteractionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlessTotem", "Cosmetic_OnInteractionFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DBDInteraction.BlessTotem.Cosmetic_OnInteractionStarted
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UBlessTotem::Cosmetic_OnInteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlessTotem", "Cosmetic_OnInteractionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DBDInteraction.DestroyBreakableWallWithPowerInteraction.CustomizePropertiesForBlight
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDestroyBreakableWallWithPowerInteraction::CustomizePropertiesForBlight(class ADBDPlayer* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestroyBreakableWallWithPowerInteraction", "CustomizePropertiesForBlight");

	Params::DestroyBreakableWallWithPowerInteraction_CustomizePropertiesForBlight Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBDInteraction.DropInteraction.DispatchStunEvent
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDropInteraction::DispatchStunEvent(class AKiller* Killer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropInteraction", "DispatchStunEvent");

	Params::DropInteraction_DispatchStunEvent Parms{};

	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDInteraction.DropInteraction.GetSurvivor
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASurvivor*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASurvivor* UDropInteraction::GetSurvivor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropInteraction", "GetSurvivor");

	Params::DropInteraction_GetSurvivor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.DropInteraction.IsKillerCarryingOwner
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDropInteraction::IsKillerCarryingOwner(class AKiller* Killer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropInteraction", "IsKillerCarryingOwner");

	Params::DropInteraction_IsKillerCarryingOwner Parms{};

	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.DropItemInteraction.GetItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACollectable*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACollectable* UDropItemInteraction::GetItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DropItemInteraction", "GetItem");

	Params::DropItemInteraction_GetItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.GenericStunInteractionDefinition.DispatchStunEvent
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGenericStunInteractionDefinition::DispatchStunEvent(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GenericStunInteractionDefinition", "DispatchStunEvent");

	Params::GenericStunInteractionDefinition_DispatchStunEvent Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDInteraction.HookSurvivorDefinition.GetMeatHook
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMeatHook*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMeatHook* UHookSurvivorDefinition::GetMeatHook() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HookSurvivorDefinition", "GetMeatHook");

	Params::HookSurvivorDefinition_GetMeatHook Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.InstallBrandNewPartInteraction.Multicast_OnTriggerSkillCheck
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInstallBrandNewPartInteraction::Multicast_OnTriggerSkillCheck(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstallBrandNewPartInteraction", "Multicast_OnTriggerSkillCheck");

	Params::InstallBrandNewPartInteraction_Multicast_OnTriggerSkillCheck Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDInteraction.SeanceRitualInteraction.GetInteractionChargeSpeedMultiplier_Implementation
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ADBDPlayer*                 Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USeanceRitualInteraction::GetInteractionChargeSpeedMultiplier_Implementation(const class ADBDPlayer* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeanceRitualInteraction", "GetInteractionChargeSpeedMultiplier_Implementation");

	Params::SeanceRitualInteraction_GetInteractionChargeSpeedMultiplier_Implementation Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.SeanceRitualInteraction.GetOwningRitualSpot
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASeanceRitualSpot*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASeanceRitualSpot* USeanceRitualInteraction::GetOwningRitualSpot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeanceRitualInteraction", "GetOwningRitualSpot");

	Params::SeanceRitualInteraction_GetOwningRitualSpot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.SeanceRitualInteraction.IsInteractionPossibleInternal
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ADBDPlayer*                 Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USeanceRitualInteraction::IsInteractionPossibleInternal(const class ADBDPlayer* Player) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeanceRitualInteraction", "IsInteractionPossibleInternal");

	Params::SeanceRitualInteraction_IsInteractionPossibleInternal Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDInteraction.UnhookReplicationComponent.Multicast_SetPlayerBeingUnhooked
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class UUnhook*                          unhookInteraction                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASurvivor*                        playerBeingUnhooked                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnhookReplicationComponent::Multicast_SetPlayerBeingUnhooked(class UUnhook* unhookInteraction, class ASurvivor* playerBeingUnhooked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnhookReplicationComponent", "Multicast_SetPlayerBeingUnhooked");

	Params::UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked Parms{};

	Parms.unhookInteraction = unhookInteraction;
	Parms.playerBeingUnhooked = playerBeingUnhooked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

