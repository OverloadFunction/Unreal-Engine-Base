#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AnniversarySplash

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AnniversarySplash.WBP_AnniversarySplash_C
// 0x0130 (0x03D8 - 0x02A8)
class UWBP_AnniversarySplash_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TakeoverIn;                                        // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_bengale;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_bg_L;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_bg_R;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_birdBody;                                 // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_birdHead;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_birdWings;                                // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_bottomFingers;                            // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_doodleFire;                               // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_eyes;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_fan;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_fire_1;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_fire_2;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_fire_3;                                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_forkBallon;                               // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_frame;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_leg_1;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_leg_2;                                    // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_leg_3;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_leg_4;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_leg_5;                                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_leg_6;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_paper_L;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_paper_R;                                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_ribCage;                                  // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_ripPaper;                                 // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_skull;                                    // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_splatter;                                 // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_swirlsLarge_L;                            // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_swirlsLarge_R;                            // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_swirlsSmall_L;                            // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_swirlsSmall_R;                            // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_teeth;                                    // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_topFingers;                               // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_tower;                                    // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_vignette_L;                               // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Takeover_vignette_R;                               // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_AnniversarySplash(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AnniversarySplash_C">();
	}
	static class UWBP_AnniversarySplash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AnniversarySplash_C>();
	}
};
static_assert(alignof(UWBP_AnniversarySplash_C) == 0x000008, "Wrong alignment on UWBP_AnniversarySplash_C");
static_assert(sizeof(UWBP_AnniversarySplash_C) == 0x0003D8, "Wrong size on UWBP_AnniversarySplash_C");
static_assert(offsetof(UWBP_AnniversarySplash_C, UberGraphFrame) == 0x0002A8, "Member 'UWBP_AnniversarySplash_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, TakeoverIn) == 0x0002B0, "Member 'UWBP_AnniversarySplash_C::TakeoverIn' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_bengale) == 0x0002B8, "Member 'UWBP_AnniversarySplash_C::Takeover_bengale' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_bg_L) == 0x0002C0, "Member 'UWBP_AnniversarySplash_C::Takeover_bg_L' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_bg_R) == 0x0002C8, "Member 'UWBP_AnniversarySplash_C::Takeover_bg_R' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_birdBody) == 0x0002D0, "Member 'UWBP_AnniversarySplash_C::Takeover_birdBody' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_birdHead) == 0x0002D8, "Member 'UWBP_AnniversarySplash_C::Takeover_birdHead' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_birdWings) == 0x0002E0, "Member 'UWBP_AnniversarySplash_C::Takeover_birdWings' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_bottomFingers) == 0x0002E8, "Member 'UWBP_AnniversarySplash_C::Takeover_bottomFingers' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_doodleFire) == 0x0002F0, "Member 'UWBP_AnniversarySplash_C::Takeover_doodleFire' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_eyes) == 0x0002F8, "Member 'UWBP_AnniversarySplash_C::Takeover_eyes' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_fan) == 0x000300, "Member 'UWBP_AnniversarySplash_C::Takeover_fan' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_fire_1) == 0x000308, "Member 'UWBP_AnniversarySplash_C::Takeover_fire_1' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_fire_2) == 0x000310, "Member 'UWBP_AnniversarySplash_C::Takeover_fire_2' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_fire_3) == 0x000318, "Member 'UWBP_AnniversarySplash_C::Takeover_fire_3' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_forkBallon) == 0x000320, "Member 'UWBP_AnniversarySplash_C::Takeover_forkBallon' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_frame) == 0x000328, "Member 'UWBP_AnniversarySplash_C::Takeover_frame' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_leg_1) == 0x000330, "Member 'UWBP_AnniversarySplash_C::Takeover_leg_1' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_leg_2) == 0x000338, "Member 'UWBP_AnniversarySplash_C::Takeover_leg_2' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_leg_3) == 0x000340, "Member 'UWBP_AnniversarySplash_C::Takeover_leg_3' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_leg_4) == 0x000348, "Member 'UWBP_AnniversarySplash_C::Takeover_leg_4' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_leg_5) == 0x000350, "Member 'UWBP_AnniversarySplash_C::Takeover_leg_5' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_leg_6) == 0x000358, "Member 'UWBP_AnniversarySplash_C::Takeover_leg_6' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_paper_L) == 0x000360, "Member 'UWBP_AnniversarySplash_C::Takeover_paper_L' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_paper_R) == 0x000368, "Member 'UWBP_AnniversarySplash_C::Takeover_paper_R' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_ribCage) == 0x000370, "Member 'UWBP_AnniversarySplash_C::Takeover_ribCage' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_ripPaper) == 0x000378, "Member 'UWBP_AnniversarySplash_C::Takeover_ripPaper' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_skull) == 0x000380, "Member 'UWBP_AnniversarySplash_C::Takeover_skull' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_splatter) == 0x000388, "Member 'UWBP_AnniversarySplash_C::Takeover_splatter' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_swirlsLarge_L) == 0x000390, "Member 'UWBP_AnniversarySplash_C::Takeover_swirlsLarge_L' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_swirlsLarge_R) == 0x000398, "Member 'UWBP_AnniversarySplash_C::Takeover_swirlsLarge_R' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_swirlsSmall_L) == 0x0003A0, "Member 'UWBP_AnniversarySplash_C::Takeover_swirlsSmall_L' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_swirlsSmall_R) == 0x0003A8, "Member 'UWBP_AnniversarySplash_C::Takeover_swirlsSmall_R' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_teeth) == 0x0003B0, "Member 'UWBP_AnniversarySplash_C::Takeover_teeth' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_topFingers) == 0x0003B8, "Member 'UWBP_AnniversarySplash_C::Takeover_topFingers' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_tower) == 0x0003C0, "Member 'UWBP_AnniversarySplash_C::Takeover_tower' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_vignette_L) == 0x0003C8, "Member 'UWBP_AnniversarySplash_C::Takeover_vignette_L' has a wrong offset!");
static_assert(offsetof(UWBP_AnniversarySplash_C, Takeover_vignette_R) == 0x0003D0, "Member 'UWBP_AnniversarySplash_C::Takeover_vignette_R' has a wrong offset!");

}

