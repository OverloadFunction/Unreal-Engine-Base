#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_K39_SW01_Menu

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DeadByDaylight_structs.hpp"
#include "AB_K39_SW01_Menu_structs.hpp"
#include "Enum_MenuAnimationState_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DBDAnimation_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_K39_SW01_Menu.AB_K39_SW01_Menu_C
// 0x05B0 (0x0940 - 0x0390)
class UAB_K39_SW01_Menu_C final : public UBaseMenuAnimInstance
{
public:
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0390(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AB_K39_SW01_Menu::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;             // 0x0398(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03A0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x03A8(0x0008)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x03B0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x03D0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x03F0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0418(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0460(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x04A8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x04F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0538(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0580(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x05C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0610(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0630(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0678(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0698(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0760(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0780(0x0138)()
	EGameFlowStep                                 GameFlowStep;                                      // 0x08B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsArchiveRift;                                     // 0x08B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BA[0x6];                                      // 0x08BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Menu_BaseSlasher_C*                 BP_Menu_Base_Slasher;                              // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	Enum_MenuAnimationState                       MenuAnimationState;                                // 0x08C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9[0x7];                                      // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Mesh;                                              // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_8D8[0x8];                                      // 0x08D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             KillerTorsoBTransform;                             // 0x08E0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K39_SW01_Menu_AnimGraphNode_ModifyBone_4F09C41E4B5A728C4A0EDEA7E7814ED8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_K39_SW01_Menu_AnimGraphNode_TransitionResult_756D8350487D7259950785AECE18381F();
	void ExecuteUbergraph_AB_K39_SW01_Menu(int32 EntryPoint);
	void OnMenuAnimationStateChanged(Enum_MenuAnimationState State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_K39_SW01_Menu_C">();
	}
	static class UAB_K39_SW01_Menu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_K39_SW01_Menu_C>();
	}
};
static_assert(alignof(UAB_K39_SW01_Menu_C) == 0x000010, "Wrong alignment on UAB_K39_SW01_Menu_C");
static_assert(sizeof(UAB_K39_SW01_Menu_C) == 0x000940, "Wrong size on UAB_K39_SW01_Menu_C");
static_assert(offsetof(UAB_K39_SW01_Menu_C, UberGraphFrame) == 0x000390, "Member 'UAB_K39_SW01_Menu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, __AnimBlueprintMutables) == 0x000398, "Member 'UAB_K39_SW01_Menu_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimBlueprintExtension_PropertyAccess) == 0x0003A0, "Member 'UAB_K39_SW01_Menu_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimBlueprintExtension_Base) == 0x0003A8, "Member 'UAB_K39_SW01_Menu_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_ComponentToLocalSpace) == 0x0003B0, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_LocalToComponentSpace) == 0x0003D0, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_TransitionResult) == 0x0003F0, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_SequencePlayer_6) == 0x000418, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_BlendListByEnum) == 0x000460, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_SequencePlayer_5) == 0x0004A8, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_SequencePlayer_4) == 0x0004F0, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_SequencePlayer_3) == 0x000538, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_SequencePlayer_2) == 0x000580, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_SequencePlayer_1) == 0x0005C8, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_StateResult_1) == 0x000610, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_SequencePlayer) == 0x000630, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_StateResult) == 0x000678, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_StateMachine) == 0x000698, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_Root) == 0x000760, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, AnimGraphNode_ModifyBone) == 0x000780, "Member 'UAB_K39_SW01_Menu_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, GameFlowStep) == 0x0008B8, "Member 'UAB_K39_SW01_Menu_C::GameFlowStep' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, IsArchiveRift) == 0x0008B9, "Member 'UAB_K39_SW01_Menu_C::IsArchiveRift' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, BP_Menu_Base_Slasher) == 0x0008C0, "Member 'UAB_K39_SW01_Menu_C::BP_Menu_Base_Slasher' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, MenuAnimationState) == 0x0008C8, "Member 'UAB_K39_SW01_Menu_C::MenuAnimationState' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, Mesh) == 0x0008D0, "Member 'UAB_K39_SW01_Menu_C::Mesh' has a wrong offset!");
static_assert(offsetof(UAB_K39_SW01_Menu_C, KillerTorsoBTransform) == 0x0008E0, "Member 'UAB_K39_SW01_Menu_C::KillerTorsoBTransform' has a wrong offset!");

}

