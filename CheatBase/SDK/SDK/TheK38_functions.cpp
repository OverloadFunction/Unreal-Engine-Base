#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK38

#include "Basic.hpp"

#include "TheK38_classes.hpp"
#include "TheK38_parameters.hpp"


namespace SDK
{

// Function TheK38.K38ReturnToOwnerDogState.Authority_OnMoveCompleted
// (Final, Native, Private)
// Parameters:
// const struct FAIRequestID&              RequestID                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EPathFollowingResult                    Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38ReturnToOwnerDogState::Authority_OnMoveCompleted(const struct FAIRequestID& RequestID, EPathFollowingResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38ReturnToOwnerDogState", "Authority_OnMoveCompleted");

	Params::K38ReturnToOwnerDogState_Authority_OnMoveCompleted Parms{};

	Parms.RequestID = std::move(RequestID);
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DashFootprints.Cosmetic_Hide
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK38DashFootprints::Cosmetic_Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashFootprints", "Cosmetic_Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38DashFootprints.Cosmetic_Show
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK38DashFootprints::Cosmetic_Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashFootprints", "Cosmetic_Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38DashTarget.HideFootprints
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK38DashTarget::HideFootprints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashTarget", "HideFootprints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38DashTarget.HideTargetBeam
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK38DashTarget::HideTargetBeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashTarget", "HideTargetBeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38DashTarget.HideVaultOrPallet
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK38DashTarget::HideVaultOrPallet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashTarget", "HideVaultOrPallet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38DashTarget.ShowFootprints
// (BlueprintCosmetic, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<struct FTransform>&        footprintsTransforms                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AK38DashTarget::ShowFootprints(const TArray<struct FTransform>& footprintsTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashTarget", "ShowFootprints");

	Params::K38DashTarget_ShowFootprints Parms{};

	Parms.footprintsTransforms = std::move(footprintsTransforms);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38DashTarget.ShowTargetBeam
// (BlueprintCosmetic, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   Start                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   End                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EK38DogDashAimStatus                    aimStatus                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38DashTarget::ShowTargetBeam(const struct FVector& Start, const struct FVector& End, EK38DogDashAimStatus aimStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashTarget", "ShowTargetBeam");

	Params::K38DashTarget_ShowTargetBeam Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.aimStatus = aimStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38DashTarget.ShowVaultOrPallet
// (BlueprintCosmetic, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   vaultActorLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   StartLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   endLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isVault                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isPallet                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38DashTarget::ShowVaultOrPallet(const struct FVector& vaultActorLocation, const struct FRotator& Rotation, const struct FVector& StartLocation, const struct FVector& endLocation, bool isVault, bool isPallet, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashTarget", "ShowVaultOrPallet");

	Params::K38DashTarget_ShowVaultOrPallet Parms{};

	Parms.vaultActorLocation = std::move(vaultActorLocation);
	Parms.Rotation = std::move(Rotation);
	Parms.StartLocation = std::move(StartLocation);
	Parms.endLocation = std::move(endLocation);
	Parms.isVault = isVault;
	Parms.isPallet = isPallet;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Addon14ScreamEffect.IsScreamTimerActive
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK38Addon14ScreamEffect::IsScreamTimerActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Addon14ScreamEffect", "IsScreamTimerActive");

	Params::K38Addon14ScreamEffect_IsScreamTimerActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38AimPatrol.Cosmetic_OnPatrolChargeBegin
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK38AimPatrol::Cosmetic_OnPatrolChargeBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38AimPatrol", "Cosmetic_OnPatrolChargeBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38CheatComponent.DBD_K38ComeToMeDoggy
// (Final, Exec, Native, Private, Const)
// Parameters:
// const class FString&                    localPlayerId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38CheatComponent::DBD_K38ComeToMeDoggy(const class FString& localPlayerId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38CheatComponent", "DBD_K38ComeToMeDoggy");

	Params::K38CheatComponent_DBD_K38ComeToMeDoggy Parms{};

	Parms.localPlayerId = std::move(localPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38CheatComponent.DBD_K38DebugDogState
// (Final, Exec, Native, Private, Const)
// Parameters:
// float                                   timeToDisplayDebug                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38CheatComponent::DBD_K38DebugDogState(float timeToDisplayDebug) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38CheatComponent", "DBD_K38DebugDogState");

	Params::K38CheatComponent_DBD_K38DebugDogState Parms{};

	Parms.timeToDisplayDebug = timeToDisplayDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38CheatComponent.DBD_K38DebugSurvivorHeldByDogPath
// (Final, Exec, Native, Private, Const)
// Parameters:
// bool                                    isDebugActive                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38CheatComponent::DBD_K38DebugSurvivorHeldByDogPath(bool isDebugActive) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38CheatComponent", "DBD_K38DebugSurvivorHeldByDogPath");

	Params::K38CheatComponent_DBD_K38DebugSurvivorHeldByDogPath Parms{};

	Parms.isDebugActive = isDebugActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38CheatComponent.DBD_K38PlayDogMontage
// (Final, Exec, Native, Private, Const)
// Parameters:
// class FName                             MontageID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    localPlayerId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38CheatComponent::DBD_K38PlayDogMontage(class FName MontageID, float Duration, const class FString& localPlayerId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38CheatComponent", "DBD_K38PlayDogMontage");

	Params::K38CheatComponent_DBD_K38PlayDogMontage Parms{};

	Parms.MontageID = MontageID;
	Parms.Duration = Duration;
	Parms.localPlayerId = std::move(localPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38CheatComponent.DBD_K38TriggerDogStruggle
// (Final, Exec, Native, Private, Const)
// Parameters:
// const class FString&                    localPlayerId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38CheatComponent::DBD_K38TriggerDogStruggle(const class FString& localPlayerId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38CheatComponent", "DBD_K38TriggerDogStruggle");

	Params::K38CheatComponent_DBD_K38TriggerDogStruggle Parms{};

	Parms.localPlayerId = std::move(localPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38CheatComponent.DBD_K38TriggerDogTeleport
// (Final, Exec, Native, Private, Const)
// Parameters:
// const class FString&                    localPlayerId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38CheatComponent::DBD_K38TriggerDogTeleport(const class FString& localPlayerId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38CheatComponent", "DBD_K38TriggerDogTeleport");

	Params::K38CheatComponent_DBD_K38TriggerDogTeleport Parms{};

	Parms.localPlayerId = std::move(localPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DashDogState.Authority_OnProximityDashHitboxBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UK38DashDogState::Authority_OnProximityDashHitboxBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashDogState", "Authority_OnProximityDashHitboxBeginOverlap");

	Params::K38DashDogState_Authority_OnProximityDashHitboxBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DashDogState.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UK38DashDogState::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashDogState", "OnBeginOverlap");

	Params::K38DashDogState_OnBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DashRedirectComponent.FadeToWhiteKiller
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   fadeDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DashRedirectComponent::FadeToWhiteKiller(float fadeDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashRedirectComponent", "FadeToWhiteKiller");

	Params::K38DashRedirectComponent_FadeToWhiteKiller Parms{};

	Parms.fadeDuration = fadeDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38DashRedirectComponent.OnPawnControllerSet
// (Final, Native, Private)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      OldController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      NewController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DashRedirectComponent::OnPawnControllerSet(class APawn* Pawn, class AController* OldController, class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashRedirectComponent", "OnPawnControllerSet");

	Params::K38DashRedirectComponent_OnPawnControllerSet Parms{};

	Parms.Pawn = Pawn;
	Parms.OldController = OldController;
	Parms.NewController = NewController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DashRedirectComponent.Server_UpdateCurrentAimDirection
// (Net, Native, Event, Protected, NetServer)
// Parameters:
// const struct FVector_NetQuantizeNormal& Direction                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DashRedirectComponent::Server_UpdateCurrentAimDirection(const struct FVector_NetQuantizeNormal& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashRedirectComponent", "Server_UpdateCurrentAimDirection");

	Params::K38DashRedirectComponent_Server_UpdateCurrentAimDirection Parms{};

	Parms.Direction = std::move(Direction);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DashRedirectComponent.GetDog
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AK38Dog*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK38Dog* UK38DashRedirectComponent::GetDog() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashRedirectComponent", "GetDog");

	Params::K38DashRedirectComponent_GetDog Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38DashRedirectComponent.GetOwningPlayer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKiller*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AKiller* UK38DashRedirectComponent::GetOwningPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DashRedirectComponent", "GetOwningPlayer");

	Params::K38DashRedirectComponent_GetOwningPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38Dog.Authority_OnDogMovementModeChange
// (Final, Native, Private)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           PrevMovementMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   PreviousCustomMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Authority_OnDogMovementModeChange(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Authority_OnDogMovementModeChange");

	Params::K38Dog_Authority_OnDogMovementModeChange Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38Dog.Cosmetic_BindK38Signals
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK38Dog::Cosmetic_BindK38Signals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_BindK38Signals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38Dog.Cosmetic_DrawCollisionRangeCircle
// (BlueprintCosmetic, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   circleCenter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Cosmetic_DrawCollisionRangeCircle(const struct FVector& circleCenter, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_DrawCollisionRangeCircle");

	Params::K38Dog_Cosmetic_DrawCollisionRangeCircle Parms{};

	Parms.circleCenter = std::move(circleCenter);
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Dog.Cosmetic_DrawDetectionRangeCircle
// (BlueprintCosmetic, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   circleCenter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isInPatrolIdleState                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Cosmetic_DrawDetectionRangeCircle(const struct FVector& circleCenter, float Radius, bool isInPatrolIdleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_DrawDetectionRangeCircle");

	Params::K38Dog_Cosmetic_DrawDetectionRangeCircle Parms{};

	Parms.circleCenter = std::move(circleCenter);
	Parms.Radius = Radius;
	Parms.isInPatrolIdleState = isInPatrolIdleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Dog.Cosmetic_EndCollisionRangeCircle
// (BlueprintCosmetic, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   circleCenter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Cosmetic_EndCollisionRangeCircle(const struct FVector& circleCenter, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_EndCollisionRangeCircle");

	Params::K38Dog_Cosmetic_EndCollisionRangeCircle Parms{};

	Parms.circleCenter = std::move(circleCenter);
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Dog.Cosmetic_OnDogInjuredSurvivorDoingInteracton
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK38Dog*                          dog                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHealthState                            newDamageState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Cosmetic_OnDogInjuredSurvivorDoingInteracton(class ASurvivor* Survivor, class AK38Dog* dog, EHealthState newDamageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_OnDogInjuredSurvivorDoingInteracton");

	Params::K38Dog_Cosmetic_OnDogInjuredSurvivorDoingInteracton Parms{};

	Parms.Survivor = Survivor;
	Parms.dog = dog;
	Parms.newDamageState = newDamageState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Dog.Cosmetic_OnDogSnapToKillerForMori
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK38Dog::Cosmetic_OnDogSnapToKillerForMori()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_OnDogSnapToKillerForMori");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38Dog.Cosmetic_OnDogTeleport
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// EK38DogTeleportReasons                  Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    showVFX                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Cosmetic_OnDogTeleport(EK38DogTeleportReasons Reason, bool showVFX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_OnDogTeleport");

	Params::K38Dog_Cosmetic_OnDogTeleport Parms{};

	Parms.Reason = Reason;
	Parms.showVFX = showVFX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Dog.Cosmetic_OnDogTeleportStartFade
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// EK38DogTeleportReasons                  Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Cosmetic_OnDogTeleportStartFade(EK38DogTeleportReasons Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_OnDogTeleportStartFade");

	Params::K38Dog_Cosmetic_OnDogTeleportStartFade Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Dog.Cosmetic_OnRedirectActivated
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK38Dog::Cosmetic_OnRedirectActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_OnRedirectActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38Dog.Cosmetic_OnRedirectTick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   elapsedDurationPercent                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Cosmetic_OnRedirectTick(float elapsedDurationPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_OnRedirectTick");

	Params::K38Dog_Cosmetic_OnRedirectTick Parms{};

	Parms.elapsedDurationPercent = elapsedDurationPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Dog.Cosmetic_RedirectFadeToBlack
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   fadeDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Cosmetic_RedirectFadeToBlack(float fadeDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_RedirectFadeToBlack");

	Params::K38Dog_Cosmetic_RedirectFadeToBlack Parms{};

	Parms.fadeDuration = fadeDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Dog.Cosmetic_StartAimingRedirect
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK38Dog::Cosmetic_StartAimingRedirect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_StartAimingRedirect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38Dog.Cosmetic_StartCollisionRangeCircle
// (BlueprintCosmetic, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   circleCenter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Cosmetic_StartCollisionRangeCircle(const struct FVector& circleCenter, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_StartCollisionRangeCircle");

	Params::K38Dog_Cosmetic_StartCollisionRangeCircle Parms{};

	Parms.circleCenter = std::move(circleCenter);
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Dog.Cosmetic_StartDetectionRangeCircle
// (BlueprintCosmetic, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   circleCenter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isInPatrolIdleState                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Cosmetic_StartDetectionRangeCircle(const struct FVector& circleCenter, float Radius, bool isInPatrolIdleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_StartDetectionRangeCircle");

	Params::K38Dog_Cosmetic_StartDetectionRangeCircle Parms{};

	Parms.circleCenter = std::move(circleCenter);
	Parms.Radius = Radius;
	Parms.isInPatrolIdleState = isInPatrolIdleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Dog.Cosmetic_StopAimingRedirect
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK38Dog::Cosmetic_StopAimingRedirect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_StopAimingRedirect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38Dog.Cosmetic_StopDetectionRangeCircle
// (BlueprintCosmetic, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   circleCenter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isInPatrolIdleState                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Cosmetic_StopDetectionRangeCircle(const struct FVector& circleCenter, float Radius, bool isInPatrolIdleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Cosmetic_StopDetectionRangeCircle");

	Params::K38Dog_Cosmetic_StopDetectionRangeCircle Parms{};

	Parms.circleCenter = std::move(circleCenter);
	Parms.Radius = Radius;
	Parms.isInPatrolIdleState = isInPatrolIdleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Dog.Multicast_CosmeticOnDogInjuredSurivor
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Multicast_CosmeticOnDogInjuredSurivor(class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Multicast_CosmeticOnDogInjuredSurivor");

	Params::K38Dog_Multicast_CosmeticOnDogInjuredSurivor Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38Dog.Multicast_PlayDogMontage
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAnimationMontageDescriptor&MontageID                                              (Parm, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    addFPVTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::Multicast_PlayDogMontage(bool Enable, const struct FAnimationMontageDescriptor& MontageID, float Duration, bool addFPVTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "Multicast_PlayDogMontage");

	Params::K38Dog_Multicast_PlayDogMontage Parms{};

	Parms.Enable = Enable;
	Parms.MontageID = std::move(MontageID);
	Parms.Duration = Duration;
	Parms.addFPVTag = addFPVTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38Dog.OnLevelReadyToPlay
// (Final, Native, Private)

void AK38Dog::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38Dog.OnRep_HeldSurvivor
// (Final, Native, Private)

void AK38Dog::OnRep_HeldSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "OnRep_HeldSurvivor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38Dog.OnStateChanged
// (Final, Native, Private)
// Parameters:
// const struct FGameplayTag&              oldState                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              newState                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Dog::OnStateChanged(const struct FGameplayTag& oldState, const struct FGameplayTag& newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "OnStateChanged");

	Params::K38Dog_OnStateChanged Parms{};

	Parms.oldState = std::move(oldState);
	Parms.newState = std::move(newState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38Dog.GetAudioComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAkComponent*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAkComponent* AK38Dog::GetAudioComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "GetAudioComponent");

	Params::K38Dog_GetAudioComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38Dog.GetLeftFootGroundDetector
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBaseGroundDetectorComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBaseGroundDetectorComponent* AK38Dog::GetLeftFootGroundDetector() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "GetLeftFootGroundDetector");

	Params::K38Dog_GetLeftFootGroundDetector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38Dog.GetLeftFrontFootGroundDetector
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBaseGroundDetectorComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBaseGroundDetectorComponent* AK38Dog::GetLeftFrontFootGroundDetector() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "GetLeftFrontFootGroundDetector");

	Params::K38Dog_GetLeftFrontFootGroundDetector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38Dog.GetRightFootGroundDetector
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBaseGroundDetectorComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBaseGroundDetectorComponent* AK38Dog::GetRightFootGroundDetector() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "GetRightFootGroundDetector");

	Params::K38Dog_GetRightFootGroundDetector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38Dog.GetRightFrontFootGroundDetector
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBaseGroundDetectorComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBaseGroundDetectorComponent* AK38Dog::GetRightFrontFootGroundDetector() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Dog", "GetRightFrontFootGroundDetector");

	Params::K38Dog_GetRightFrontFootGroundDetector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38DogAnimInstance.OnIntroCompleted
// (Final, Native, Private)

void UK38DogAnimInstance::OnIntroCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogAnimInstance", "OnIntroCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogCompanionAbility.Cosmetic_ShowDashPath
// (BlueprintCosmetic, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<struct FVector>&           Positions                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UK38DogCompanionAbility::Cosmetic_ShowDashPath(const TArray<struct FVector>& Positions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogCompanionAbility", "Cosmetic_ShowDashPath");

	Params::K38DogCompanionAbility_Cosmetic_ShowDashPath Parms{};

	Parms.Positions = std::move(Positions);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38DogCompanionAbility.Multicast_CosmeticEndRedirect
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                                    Success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DogCompanionAbility::Multicast_CosmeticEndRedirect(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogCompanionAbility", "Multicast_CosmeticEndRedirect");

	Params::K38DogCompanionAbility_Multicast_CosmeticEndRedirect Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogCompanionAbility.Multicast_GiveDashCommand
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UK38DogCompanionAbility::Multicast_GiveDashCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogCompanionAbility", "Multicast_GiveDashCommand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogCompanionAbility.Multicast_GivePatrolCommand
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FVector&                   targetLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DogCompanionAbility::Multicast_GivePatrolCommand(const struct FVector& targetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogCompanionAbility", "Multicast_GivePatrolCommand");

	Params::K38DogCompanionAbility_Multicast_GivePatrolCommand Parms{};

	Parms.targetLocation = std::move(targetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogCompanionAbility.OnRep_Dog
// (Final, Native, Private)

void UK38DogCompanionAbility::OnRep_Dog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogCompanionAbility", "OnRep_Dog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogCompanionAbility.OnRep_GroundTarget
// (Final, Native, Private)

void UK38DogCompanionAbility::OnRep_GroundTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogCompanionAbility", "OnRep_GroundTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogCompanionAbility.Server_RequestDashCommand
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults)
// Parameters:
// const struct FVector&                   StartLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DogCompanionAbility::Server_RequestDashCommand(const struct FVector& StartLocation, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogCompanionAbility", "Server_RequestDashCommand");

	Params::K38DogCompanionAbility_Server_RequestDashCommand Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.Direction = std::move(Direction);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogCompanionAbility.Server_RequestPatrolCommand
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults)
// Parameters:
// const struct FVector&                   targetLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DogCompanionAbility::Server_RequestPatrolCommand(const struct FVector& targetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogCompanionAbility", "Server_RequestPatrolCommand");

	Params::K38DogCompanionAbility_Server_RequestPatrolCommand Parms{};

	Parms.targetLocation = std::move(targetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogCompanionAbility.Server_RequestRedirectCommand
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults)
// Parameters:
// const struct FVector&                   Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DogCompanionAbility::Server_RequestRedirectCommand(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogCompanionAbility", "Server_RequestRedirectCommand");

	Params::K38DogCompanionAbility_Server_RequestRedirectCommand Parms{};

	Parms.Direction = std::move(Direction);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogCompanionAbility.Server_RequestStopRedirectCommand
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void UK38DogCompanionAbility::Server_RequestStopRedirectCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogCompanionAbility", "Server_RequestStopRedirectCommand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogFollowKillerComponent.Authority_OnDogMovementModeChange
// (Final, Native, Private)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           PrevMovementMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   PreviousCustomMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DogFollowKillerComponent::Authority_OnDogMovementModeChange(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogFollowKillerComponent", "Authority_OnDogMovementModeChange");

	Params::K38DogFollowKillerComponent_Authority_OnDogMovementModeChange Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogFollowKillerComponent.Authority_OnKillerMovementModeChange
// (Final, Native, Private)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           PrevMovementMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   PreviousCustomMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DogFollowKillerComponent::Authority_OnKillerMovementModeChange(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogFollowKillerComponent", "Authority_OnKillerMovementModeChange");

	Params::K38DogFollowKillerComponent_Authority_OnKillerMovementModeChange Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogFollowKillerComponent.Authority_OnMoveCompleted
// (Final, Native, Private)
// Parameters:
// const struct FAIRequestID&              RequestID                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EPathFollowingResult                    Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DogFollowKillerComponent::Authority_OnMoveCompleted(const struct FAIRequestID& RequestID, EPathFollowingResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogFollowKillerComponent", "Authority_OnMoveCompleted");

	Params::K38DogFollowKillerComponent_Authority_OnMoveCompleted Parms{};

	Parms.RequestID = std::move(RequestID);
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogFollowKillerComponent.OnRep_CanBePetByKiller
// (Final, Native, Private)

void UK38DogFollowKillerComponent::OnRep_CanBePetByKiller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogFollowKillerComponent", "OnRep_CanBePetByKiller");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogPathPreviewComponent.OnRep_PathPoints
// (Final, Native, Private)

void UK38DogPathPreviewComponent::OnRep_PathPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogPathPreviewComponent", "OnRep_PathPoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogSlipStreamComponent.OnRep_Killer
// (Final, Native, Private)

void UK38DogSlipStreamComponent::OnRep_Killer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogSlipStreamComponent", "OnRep_Killer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogSlipStreamComponent.OnRep_KillerIsOnPatrolPath
// (Final, Native, Private)

void UK38DogSlipStreamComponent::OnRep_KillerIsOnPatrolPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogSlipStreamComponent", "OnRep_KillerIsOnPatrolPath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogTeleportComponent.Multicast_OnDogTeleportEnd
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FVector&                   StartLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   endLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EK38DogTeleportReasons            Reason                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    skipCosmeticCall                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DogTeleportComponent::Multicast_OnDogTeleportEnd(const struct FVector& StartLocation, const struct FVector& endLocation, const EK38DogTeleportReasons Reason, bool skipCosmeticCall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogTeleportComponent", "Multicast_OnDogTeleportEnd");

	Params::K38DogTeleportComponent_Multicast_OnDogTeleportEnd Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.endLocation = std::move(endLocation);
	Parms.Reason = Reason;
	Parms.skipCosmeticCall = skipCosmeticCall;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38DogTeleportComponent.Multicast_OnDogTeleportStart
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FVector&                   StartLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   endLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EK38DogTeleportReasons            Reason                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38DogTeleportComponent::Multicast_OnDogTeleportStart(const struct FVector& StartLocation, const struct FVector& endLocation, const EK38DogTeleportReasons Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38DogTeleportComponent", "Multicast_OnDogTeleportStart");

	Params::K38DogTeleportComponent_Multicast_OnDogTeleportStart Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.endLocation = std::move(endLocation);
	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38GroundTarget.Cosmetic_OnGroundTargetTooCloseToKillerToDeployChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    tooCloseToKillerToDeploy                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38GroundTarget::Cosmetic_OnGroundTargetTooCloseToKillerToDeployChanged(bool tooCloseToKillerToDeploy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38GroundTarget", "Cosmetic_OnGroundTargetTooCloseToKillerToDeployChanged");

	Params::K38GroundTarget_Cosmetic_OnGroundTargetTooCloseToKillerToDeployChanged Parms{};

	Parms.tooCloseToKillerToDeploy = tooCloseToKillerToDeploy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38GroundTarget.Cosmetic_OnGroundTargetVisibilityChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38GroundTarget::Cosmetic_OnGroundTargetVisibilityChanged(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38GroundTarget", "Cosmetic_OnGroundTargetVisibilityChanged");

	Params::K38GroundTarget_Cosmetic_OnGroundTargetVisibilityChanged Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38GroundTarget.Cosmetic_SetIsGroundTargetPositionValid
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    isGroundTargetPlacementValid                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38GroundTarget::Cosmetic_SetIsGroundTargetPositionValid(bool isGroundTargetPlacementValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38GroundTarget", "Cosmetic_SetIsGroundTargetPositionValid");

	Params::K38GroundTarget_Cosmetic_SetIsGroundTargetPositionValid Parms{};

	Parms.isGroundTargetPlacementValid = isGroundTargetPlacementValid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38GroundTarget.Multicast_SetTargetLocation
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// const struct FVector_NetQuantize&       targetLocation                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isValidLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38GroundTarget::Multicast_SetTargetLocation(const struct FVector_NetQuantize& targetLocation, bool isValidLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38GroundTarget", "Multicast_SetTargetLocation");

	Params::K38GroundTarget_Multicast_SetTargetLocation Parms{};

	Parms.targetLocation = std::move(targetLocation);
	Parms.isValidLocation = isValidLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38GroundTarget.OnLocallyObservedChanged
// (Final, Native, Private)
// Parameters:
// const bool                              isPlayerLocallyObserved                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38GroundTarget::OnLocallyObservedChanged(const bool isPlayerLocallyObserved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38GroundTarget", "OnLocallyObservedChanged");

	Params::K38GroundTarget_OnLocallyObservedChanged Parms{};

	Parms.isPlayerLocallyObserved = isPlayerLocallyObserved;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38GroundTarget.OnRep_Activated
// (Final, Native, Private)

void AK38GroundTarget::OnRep_Activated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38GroundTarget", "OnRep_Activated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38GroundTarget.OnRep_HiddenWhileAimAssistArrowVisible
// (Final, Native, Private)

void AK38GroundTarget::OnRep_HiddenWhileAimAssistArrowVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38GroundTarget", "OnRep_HiddenWhileAimAssistArrowVisible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38GroundTarget.OnRep_InMarkerVisibleToAllMode
// (Final, Native, Private)

void AK38GroundTarget::OnRep_InMarkerVisibleToAllMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38GroundTarget", "OnRep_InMarkerVisibleToAllMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38GroundTarget.Server_SetTargetLocation
// (Final, Net, Native, Event, Private, NetServer)
// Parameters:
// const struct FVector_NetQuantize&       targetLocation                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isValidLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38GroundTarget::Server_SetTargetLocation(const struct FVector_NetQuantize& targetLocation, bool isValidLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38GroundTarget", "Server_SetTargetLocation");

	Params::K38GroundTarget_Server_SetTargetLocation Parms{};

	Parms.targetLocation = std::move(targetLocation);
	Parms.isValidLocation = isValidLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38GroundTarget.GetGroundTargetDistancePercentToKiller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AK38GroundTarget::GetGroundTargetDistancePercentToKiller() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38GroundTarget", "GetGroundTargetDistancePercentToKiller");

	Params::K38GroundTarget_GetGroundTargetDistancePercentToKiller Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38GroundTarget.GetGroundTargetDistanceToKiller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AK38GroundTarget::GetGroundTargetDistanceToKiller() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38GroundTarget", "GetGroundTargetDistanceToKiller");

	Params::K38GroundTarget_GetGroundTargetDistanceToKiller Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38HoldingSurvivorDogState.Authority_OnSurvivorHeldGameStateChanged
// (Final, Native, Private)
// Parameters:
// class ADBDPlayerState*                  PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EGameState                        GameState                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38HoldingSurvivorDogState::Authority_OnSurvivorHeldGameStateChanged(class ADBDPlayerState* PlayerState, const EGameState GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38HoldingSurvivorDogState", "Authority_OnSurvivorHeldGameStateChanged");

	Params::K38HoldingSurvivorDogState_Authority_OnSurvivorHeldGameStateChanged Parms{};

	Parms.PlayerState = PlayerState;
	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38IntroDogState.Authority_OnIntroCompleted
// (Final, Native, Private)

void UK38IntroDogState::Authority_OnIntroCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38IntroDogState", "Authority_OnIntroCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38KillerInstinctLingeringEffect.Authority_OnSurvivorCrouchChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              GameEvent                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK38KillerInstinctLingeringEffect::Authority_OnSurvivorCrouchChanged(const struct FGameplayTag& GameEvent, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38KillerInstinctLingeringEffect", "Authority_OnSurvivorCrouchChanged");

	Params::K38KillerInstinctLingeringEffect_Authority_OnSurvivorCrouchChanged Parms{};

	Parms.GameEvent = std::move(GameEvent);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38KillerInstinctLingeringEffect.OnRep_IsInDogDetectionRadius
// (Final, Native, Private)

void UK38KillerInstinctLingeringEffect::OnRep_IsInDogDetectionRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38KillerInstinctLingeringEffect", "OnRep_IsInDogDetectionRadius");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38MoveToTargetLocationDogState.Authority_OnMoveCompleted
// (Final, Native, Private)
// Parameters:
// const struct FAIRequestID&              RequestID                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EPathFollowingResult                    Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38MoveToTargetLocationDogState::Authority_OnMoveCompleted(const struct FAIRequestID& RequestID, EPathFollowingResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38MoveToTargetLocationDogState", "Authority_OnMoveCompleted");

	Params::K38MoveToTargetLocationDogState_Authority_OnMoveCompleted Parms{};

	Parms.RequestID = std::move(RequestID);
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38ObjectiveAimAssistTarget.Cosmetic_OnAimAssistObjectiveSelected
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           selectedObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38ObjectiveAimAssistTarget::Cosmetic_OnAimAssistObjectiveSelected(class AActor* selectedObject, class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38ObjectiveAimAssistTarget", "Cosmetic_OnAimAssistObjectiveSelected");

	Params::K38ObjectiveAimAssistTarget_Cosmetic_OnAimAssistObjectiveSelected Parms{};

	Parms.selectedObject = selectedObject;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38ObjectiveAimAssistTarget.Multicast_SetSelectedObjective
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// class AActor*                           newSelectedObjective                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38ObjectiveAimAssistTarget::Multicast_SetSelectedObjective(class AActor* newSelectedObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38ObjectiveAimAssistTarget", "Multicast_SetSelectedObjective");

	Params::K38ObjectiveAimAssistTarget_Multicast_SetSelectedObjective Parms{};

	Parms.newSelectedObjective = newSelectedObjective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38ObjectiveAimAssistTarget.Server_SetSelectedObjective
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AActor*                           newSelectedObjective                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38ObjectiveAimAssistTarget::Server_SetSelectedObjective(class AActor* newSelectedObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38ObjectiveAimAssistTarget", "Server_SetSelectedObjective");

	Params::K38ObjectiveAimAssistTarget_Server_SetSelectedObjective Parms{};

	Parms.newSelectedObjective = newSelectedObjective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38P01.Cosmetic_OnStaggeringLanding
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38P01::Cosmetic_OnStaggeringLanding(class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38P01", "Cosmetic_OnStaggeringLanding");

	Params::K38P01_Cosmetic_OnStaggeringLanding Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38P01.Multicast_OnK38P01Landing
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class AKiller*                          Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38P01::Multicast_OnK38P01Landing(class AKiller* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38P01", "Multicast_OnK38P01Landing");

	Params::K38P01_Multicast_OnK38P01Landing Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38P02.Authority_OnSurvivorHookedOnScourgeHook
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameEventData&            GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK38P02::Authority_OnSurvivorHookedOnScourgeHook(const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38P02", "Authority_OnSurvivorHookedOnScourgeHook");

	Params::K38P02_Authority_OnSurvivorHookedOnScourgeHook Parms{};

	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38P02.Cosmetic_NewScourgeHookEvent
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMeatHook*                        Hook                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38P02::Cosmetic_NewScourgeHookEvent(class AKiller* Killer, class AMeatHook* Hook)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38P02", "Cosmetic_NewScourgeHookEvent");

	Params::K38P02_Cosmetic_NewScourgeHookEvent Parms{};

	Parms.Killer = Killer;
	Parms.Hook = Hook;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38P02.Multicast_NewScourgeHookEvent
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMeatHook*                        Hook                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38P02::Multicast_NewScourgeHookEvent(class AKiller* Killer, class AMeatHook* Hook)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38P02", "Multicast_NewScourgeHookEvent");

	Params::K38P02_Multicast_NewScourgeHookEvent Parms{};

	Parms.Killer = Killer;
	Parms.Hook = Hook;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38P02.GetGeneratorRevealDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK38P02::GetGeneratorRevealDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38P02", "GetGeneratorRevealDurationAtLevel");

	Params::K38P02_GetGeneratorRevealDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38P03.Authority_OnSelfHealInteractionFinished
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    hasInteractionStarted                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38P03::Authority_OnSelfHealInteractionFinished(class ADBDPlayer* Player, bool hasInteractionStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38P03", "Authority_OnSelfHealInteractionFinished");

	Params::K38P03_Authority_OnSelfHealInteractionFinished Parms{};

	Parms.Player = Player;
	Parms.hasInteractionStarted = hasInteractionStarted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38P03.Multicast_ActivateSkillCheck
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38P03::Multicast_ActivateSkillCheck(class ADBDPlayer* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38P03", "Multicast_ActivateSkillCheck");

	Params::K38P03_Multicast_ActivateSkillCheck Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38P03.GetBrokenStatusDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK38P03::GetBrokenStatusDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38P03", "GetBrokenStatusDurationAtLevel");

	Params::K38P03_GetBrokenStatusDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38PatrolPathNode.Cosmetic_OnFollowPatrolPathChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    patrolPathFollowed                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38PatrolPathNode::Cosmetic_OnFollowPatrolPathChanged(bool patrolPathFollowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38PatrolPathNode", "Cosmetic_OnFollowPatrolPathChanged");

	Params::K38PatrolPathNode_Cosmetic_OnFollowPatrolPathChanged Parms{};

	Parms.patrolPathFollowed = patrolPathFollowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38PatrolPathNode.Cosmetic_PrepareForRemoval
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK38PatrolPathNode::Cosmetic_PrepareForRemoval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38PatrolPathNode", "Cosmetic_PrepareForRemoval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38PatrolPathNode.OnPatrolPathFollowedChanged
// (Final, Native, Public)
// Parameters:
// bool                                    isOnPatrolPath                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38PatrolPathNode::OnPatrolPathFollowedChanged(bool isOnPatrolPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38PatrolPathNode", "OnPatrolPathFollowedChanged");

	Params::K38PatrolPathNode_OnPatrolPathFollowedChanged Parms{};

	Parms.isOnPatrolPath = isOnPatrolPath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38PatrolPathNode.OnPreviousNodePositionSet
// (Event, Protected, BlueprintEvent)

void AK38PatrolPathNode::OnPreviousNodePositionSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38PatrolPathNode", "OnPreviousNodePositionSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38PatrolPathNode.IsFirstNode
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AK38PatrolPathNode::IsFirstNode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38PatrolPathNode", "IsFirstNode");

	Params::K38PatrolPathNode_IsFirstNode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38PetTheDogInteraction.Cosmetic_OnPetTheDogChargeBegin
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK38PetTheDogInteraction::Cosmetic_OnPetTheDogChargeBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38PetTheDogInteraction", "Cosmetic_OnPetTheDogChargeBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38Power.Cosmetic_OnAimCommandSwitched
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    Killer                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    switchToPatrol                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnAimCommandSwitched(const class AKiller* Killer, bool switchToPatrol)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnAimCommandSwitched");

	Params::K38Power_Cosmetic_OnAimCommandSwitched Parms{};

	Parms.Killer = Killer;
	Parms.switchToPatrol = switchToPatrol;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnAimDashActivated
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnAimDashActivated(const class AKiller* killerPlayer, const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnAimDashActivated");

	Params::K38Power_Cosmetic_OnAimDashActivated Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnAimDashChargeCancelled
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnAimDashChargeCancelled(const class AKiller* killerPlayer, const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnAimDashChargeCancelled");

	Params::K38Power_Cosmetic_OnAimDashChargeCancelled Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnAimDashChargeComplete
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnAimDashChargeComplete(const class AKiller* killerPlayer, const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnAimDashChargeComplete");

	Params::K38Power_Cosmetic_OnAimDashChargeComplete Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnAimPatrolActivated
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnAimPatrolActivated(const class AKiller* killerPlayer, const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnAimPatrolActivated");

	Params::K38Power_Cosmetic_OnAimPatrolActivated Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnAimPatrolChargeCancelled
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnAimPatrolChargeCancelled(const class AKiller* killerPlayer, const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnAimPatrolChargeCancelled");

	Params::K38Power_Cosmetic_OnAimPatrolChargeCancelled Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnAimPatrolChargeComplete
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnAimPatrolChargeComplete(const class AKiller* killerPlayer, const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnAimPatrolChargeComplete");

	Params::K38Power_Cosmetic_OnAimPatrolChargeComplete Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnAimReady
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    Killer                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnAimReady(const class AKiller* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnAimReady");

	Params::K38Power_Cosmetic_OnAimReady Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnKillerEffectActivated
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ASurvivor*                  Survivor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnKillerEffectActivated(const class AK38Dog* dog, const class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnKillerEffectActivated");

	Params::K38Power_Cosmetic_OnKillerEffectActivated Parms{};

	Parms.dog = dog;
	Parms.Survivor = Survivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnKillerRecallDog
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnKillerRecallDog(const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnKillerRecallDog");

	Params::K38Power_Cosmetic_OnKillerRecallDog Parms{};

	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnPatrolDetectionRadiusMax
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnPatrolDetectionRadiusMax(const class AKiller* killerPlayer, const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnPatrolDetectionRadiusMax");

	Params::K38Power_Cosmetic_OnPatrolDetectionRadiusMax Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnRedirectActivated
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnRedirectActivated(const class AKiller* killerPlayer, const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnRedirectActivated");

	Params::K38Power_Cosmetic_OnRedirectActivated Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnRedirectCancelled
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnRedirectCancelled(const class AKiller* killerPlayer, const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnRedirectCancelled");

	Params::K38Power_Cosmetic_OnRedirectCancelled Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnRedirectDogStruggleInteractionCooldownComplete
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AKiller*                          killerPlayer                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnRedirectDogStruggleInteractionCooldownComplete(class AKiller* killerPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnRedirectDogStruggleInteractionCooldownComplete");

	Params::K38Power_Cosmetic_OnRedirectDogStruggleInteractionCooldownComplete Parms{};

	Parms.killerPlayer = killerPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnRedirectDogStruggleTargetLocationChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AKiller*                          killerPlayer                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnRedirectDogStruggleTargetLocationChanged(class AKiller* killerPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnRedirectDogStruggleTargetLocationChanged");

	Params::K38Power_Cosmetic_OnRedirectDogStruggleTargetLocationChanged Parms{};

	Parms.killerPlayer = killerPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnRedirectStarted
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnRedirectStarted(const class AKiller* killerPlayer, const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnRedirectStarted");

	Params::K38Power_Cosmetic_OnRedirectStarted Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnSlipStreamChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   lastSlipStreamPoints                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   currentSlipStreamPoints                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   maxSlipStreamPoints                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnSlipStreamChanged(float lastSlipStreamPoints, float currentSlipStreamPoints, float maxSlipStreamPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnSlipStreamChanged");

	Params::K38Power_Cosmetic_OnSlipStreamChanged Parms{};

	Parms.lastSlipStreamPoints = lastSlipStreamPoints;
	Parms.currentSlipStreamPoints = currentSlipStreamPoints;
	Parms.maxSlipStreamPoints = maxSlipStreamPoints;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnSlipStreamDisabled
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK38Power::Cosmetic_OnSlipStreamDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnSlipStreamDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38Power.Cosmetic_OnSlipStreamEnabled
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK38Power::Cosmetic_OnSlipStreamEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnSlipStreamEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38Power.Cosmetic_OnSlipStreamPathFollowedChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    onPath                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnSlipStreamPathFollowedChanged(bool onPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnSlipStreamPathFollowedChanged");

	Params::K38Power_Cosmetic_OnSlipStreamPathFollowedChanged Parms{};

	Parms.onPath = onPath;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnSlipStreamReachedMax
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK38Power::Cosmetic_OnSlipStreamReachedMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnSlipStreamReachedMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38Power.Cosmetic_OnSlipStreamReachedMaxFirstTime
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK38Power::Cosmetic_OnSlipStreamReachedMaxFirstTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnSlipStreamReachedMaxFirstTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38Power.Cosmetic_OnSlipStreamReachedZero
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK38Power::Cosmetic_OnSlipStreamReachedZero()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnSlipStreamReachedZero");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38Power.Cosmetic_OnStartAimDashCharge
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnStartAimDashCharge(const class AKiller* killerPlayer, const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnStartAimDashCharge");

	Params::K38Power_Cosmetic_OnStartAimDashCharge Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_OnStartAimPatrolCharge
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AK38Dog*                    dog                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_OnStartAimPatrolCharge(const class AKiller* killerPlayer, const class AK38Dog* dog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_OnStartAimPatrolCharge");

	Params::K38Power_Cosmetic_OnStartAimPatrolCharge Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.dog = dog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.Cosmetic_RedirectFadeToWhite
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const class AKiller*                    killerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38Power::Cosmetic_RedirectFadeToWhite(const class AKiller* killerPlayer, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "Cosmetic_RedirectFadeToWhite");

	Params::K38Power_Cosmetic_RedirectFadeToWhite Parms{};

	Parms.killerPlayer = killerPlayer;
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38Power.GetK38DogActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AK38Dog*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK38Dog* AK38Power::GetK38DogActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38Power", "GetK38DogActor");

	Params::K38Power_GetK38DogActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38PowerAddon20.OnDogStateChanged
// (Final, Native, Private)
// Parameters:
// const struct FGameplayTag&              oldState                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              newState                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38PowerAddon20::OnDogStateChanged(const struct FGameplayTag& oldState, const struct FGameplayTag& newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38PowerAddon20", "OnDogStateChanged");

	Params::K38PowerAddon20_OnDogStateChanged Parms{};

	Parms.oldState = std::move(oldState);
	Parms.newState = std::move(newState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38PowerAddon20.OnPatrolPathFollowedChanged
// (Final, Native, Private)
// Parameters:
// bool                                    isOnPatrolPath                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38PowerAddon20::OnPatrolPathFollowedChanged(bool isOnPatrolPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38PowerAddon20", "OnPatrolPathFollowedChanged");

	Params::K38PowerAddon20_OnPatrolPathFollowedChanged Parms{};

	Parms.isOnPatrolPath = isOnPatrolPath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38SurvivorCosmeticHelperActor.Cosmetic_OnDetectedStatusEffectActiveChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK38SurvivorCosmeticHelperActor::Cosmetic_OnDetectedStatusEffectActiveChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorCosmeticHelperActor", "Cosmetic_OnDetectedStatusEffectActiveChanged");

	Params::K38SurvivorCosmeticHelperActor_Cosmetic_OnDetectedStatusEffectActiveChanged Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38SurvivorHeldByDogComponent.Cosmetic_DogStartsPullingSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK38SurvivorHeldByDogComponent::Cosmetic_DogStartsPullingSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorHeldByDogComponent", "Cosmetic_DogStartsPullingSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38SurvivorHeldByDogComponent.Cosmetic_DogStopsPullingSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK38SurvivorHeldByDogComponent::Cosmetic_DogStopsPullingSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorHeldByDogComponent", "Cosmetic_DogStopsPullingSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38SurvivorHeldByDogComponent.Cosmetic_OnStruggleEnded
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AK38Dog*                          previouslyAttachedDog                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38SurvivorHeldByDogComponent::Cosmetic_OnStruggleEnded(class AK38Dog* previouslyAttachedDog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorHeldByDogComponent", "Cosmetic_OnStruggleEnded");

	Params::K38SurvivorHeldByDogComponent_Cosmetic_OnStruggleEnded Parms{};

	Parms.previouslyAttachedDog = previouslyAttachedDog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38SurvivorHeldByDogComponent.Cosmetic_OnStruggleStarted
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK38SurvivorHeldByDogComponent::Cosmetic_OnStruggleStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorHeldByDogComponent", "Cosmetic_OnStruggleStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38SurvivorHeldByDogComponent.Cosmetic_OnSurvivorFightBack
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK38SurvivorHeldByDogComponent::Cosmetic_OnSurvivorFightBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorHeldByDogComponent", "Cosmetic_OnSurvivorFightBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38SurvivorHeldByDogComponent.Cosmetic_OnSurvivorStopFightingBack
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK38SurvivorHeldByDogComponent::Cosmetic_OnSurvivorStopFightingBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorHeldByDogComponent", "Cosmetic_OnSurvivorStopFightingBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK38.K38SurvivorHeldByDogComponent.OnRep_AudioIsFightingBack
// (Final, Native, Private)
// Parameters:
// bool                                    OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38SurvivorHeldByDogComponent::OnRep_AudioIsFightingBack(bool OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorHeldByDogComponent", "OnRep_AudioIsFightingBack");

	Params::K38SurvivorHeldByDogComponent_OnRep_AudioIsFightingBack Parms{};

	Parms.OldValue = OldValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38SurvivorHeldByDogComponent.OnRep_AudioIsPulling
// (Final, Native, Private)
// Parameters:
// bool                                    OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38SurvivorHeldByDogComponent::OnRep_AudioIsPulling(bool OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorHeldByDogComponent", "OnRep_AudioIsPulling");

	Params::K38SurvivorHeldByDogComponent_OnRep_AudioIsPulling Parms{};

	Parms.OldValue = OldValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38SurvivorHeldByDogComponent.OnRep_DogHoldingSurvivor
// (Final, Native, Private)
// Parameters:
// class AK38Dog*                          OldValue                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38SurvivorHeldByDogComponent::OnRep_DogHoldingSurvivor(class AK38Dog* OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorHeldByDogComponent", "OnRep_DogHoldingSurvivor");

	Params::K38SurvivorHeldByDogComponent_OnRep_DogHoldingSurvivor Parms{};

	Parms.OldValue = OldValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38SurvivorHeldByDogComponent.Server_SetFightingBack
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// bool                                    isFightingBack                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38SurvivorHeldByDogComponent::Server_SetFightingBack(bool isFightingBack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorHeldByDogComponent", "Server_SetFightingBack");

	Params::K38SurvivorHeldByDogComponent_Server_SetFightingBack Parms{};

	Parms.isFightingBack = isFightingBack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38SurvivorHeldByDogComponent.GetDogHoldingSurvivor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AK38Dog*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK38Dog* UK38SurvivorHeldByDogComponent::GetDogHoldingSurvivor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorHeldByDogComponent", "GetDogHoldingSurvivor");

	Params::K38SurvivorHeldByDogComponent_GetDogHoldingSurvivor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38SurvivorHeldByDogComponent.GetSurvivor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASurvivor*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASurvivor* UK38SurvivorHeldByDogComponent::GetSurvivor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorHeldByDogComponent", "GetSurvivor");

	Params::K38SurvivorHeldByDogComponent_GetSurvivor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK38.K38SurvivorStatusComponent.Cosmetic_OnK38DetectionKillerEffectEnd
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38SurvivorStatusComponent::Cosmetic_OnK38DetectionKillerEffectEnd(class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorStatusComponent", "Cosmetic_OnK38DetectionKillerEffectEnd");

	Params::K38SurvivorStatusComponent_Cosmetic_OnK38DetectionKillerEffectEnd Parms{};

	Parms.Survivor = Survivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38SurvivorStatusComponent.Cosmetic_OnK38DetectionKillerEffectStart
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASurvivor*                        Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38SurvivorStatusComponent::Cosmetic_OnK38DetectionKillerEffectStart(class ASurvivor* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorStatusComponent", "Cosmetic_OnK38DetectionKillerEffectStart");

	Params::K38SurvivorStatusComponent_Cosmetic_OnK38DetectionKillerEffectStart Parms{};

	Parms.Survivor = Survivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK38.K38SurvivorStatusComponent.Multicast_ApplyKillerEffectToSurvivor
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AKiller*                          Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    applyEffect                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    keepCosmeticEffectActive                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK38SurvivorStatusComponent::Multicast_ApplyKillerEffectToSurvivor(class AKiller* Killer, bool applyEffect, float Duration, bool keepCosmeticEffectActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38SurvivorStatusComponent", "Multicast_ApplyKillerEffectToSurvivor");

	Params::K38SurvivorStatusComponent_Multicast_ApplyKillerEffectToSurvivor Parms{};

	Parms.Killer = Killer;
	Parms.applyEffect = applyEffect;
	Parms.Duration = Duration;
	Parms.keepCosmeticEffectActive = keepCosmeticEffectActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK38.K38VaultingDogState.Authority_OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UK38VaultingDogState::Authority_OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K38VaultingDogState", "Authority_OnBeginOverlap");

	Params::K38VaultingDogState_Authority_OnBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

