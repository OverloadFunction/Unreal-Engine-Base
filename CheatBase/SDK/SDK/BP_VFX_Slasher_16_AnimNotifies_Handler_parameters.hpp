#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VFX_Slasher_16_AnimNotifies_Handler

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_VFX_Slasher_16_AnimNotifies_Handler.BP_VFX_Slasher_16_AnimNotifies_Handler_C.HandleAnimNotify
// 0x0178 (0x0178 - 0x0000)
struct BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   NotifyName;                                        // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Slasher_Character_C*                BP_Slasher_Character;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AKiller*                                My_Slasher;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDBasePlayer*                         K2Node_DynamicCast_AsDBDBase_Player;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AKiller*                                K2Node_DynamicCast_AsKiller;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivor*                              CallFunc_GetSurvivorBeingKilled_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Effect_General_C> K2Node_DynamicCast_AsBPI_Effect_General;           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_DetectObstruction_physicalMaterialOut;    // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DetectObstruction_positionOut;            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DetectObstruction_normalOut;              // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DetectObstruction_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify) == 0x000008, "Wrong alignment on BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify");
static_assert(sizeof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify) == 0x000178, "Wrong size on BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, Player) == 0x000000, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::Player' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, NotifyName) == 0x000008, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::NotifyName' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, ReturnValue) == 0x000014, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, BP_Slasher_Character) == 0x000018, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::BP_Slasher_Character' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, My_Slasher) == 0x000020, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::My_Slasher' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, K2Node_SwitchName_CmpSuccess) == 0x000028, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, K2Node_DynamicCast_AsDBDBase_Player) == 0x000030, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::K2Node_DynamicCast_AsDBDBase_Player' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, K2Node_DynamicCast_AsKiller) == 0x000040, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::K2Node_DynamicCast_AsKiller' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_GetSurvivorBeingKilled_ReturnValue) == 0x000050, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_GetSurvivorBeingKilled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, K2Node_DynamicCast_AsBPI_Effect_General) == 0x000060, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::K2Node_DynamicCast_AsBPI_Effect_General' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_DetectObstruction_physicalMaterialOut) == 0x000078, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_DetectObstruction_physicalMaterialOut' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_DetectObstruction_positionOut) == 0x000080, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_DetectObstruction_positionOut' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_DetectObstruction_normalOut) == 0x000098, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_DetectObstruction_normalOut' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_DetectObstruction_ReturnValue) == 0x0000B0, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_DetectObstruction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000B8, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000D0, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_BreakRotator_Roll) == 0x0000E8, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_BreakRotator_Pitch) == 0x0000EC, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_BreakRotator_Yaw) == 0x0000F0, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F8, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000110, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000118, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_MakeRotator_ReturnValue) == 0x000120, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_IsValid_ReturnValue_2) == 0x000138, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_GetSocketLocation_ReturnValue) == 0x000140, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000158, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000170, "Member 'BP_VFX_Slasher_16_AnimNotifies_Handler_C_HandleAnimNotify::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");

}

