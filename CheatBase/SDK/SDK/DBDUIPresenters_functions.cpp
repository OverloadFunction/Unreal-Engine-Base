#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDUIPresenters

#include "Basic.hpp"

#include "DBDUIPresenters_classes.hpp"
#include "DBDUIPresenters_parameters.hpp"


namespace SDK
{

// Function DBDUIPresenters.Presenter.GetIgnoredPresentationRequirementFunctionOptions
// (Final, Native, Protected)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UPresenter::GetIgnoredPresentationRequirementFunctionOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Presenter", "GetIgnoredPresentationRequirementFunctionOptions");

	Params::Presenter_GetIgnoredPresentationRequirementFunctionOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.Presenter.OnContextChanged
// (Native, Protected)
// Parameters:
// EContext                                Context                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPresenter::OnContextChanged(EContext Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Presenter", "OnContextChanged");

	Params::Presenter_OnContextChanged Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.Presenter.OnContextFocus
// (Native, Protected)
// Parameters:
// EContext                                Context                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPresenter::OnContextFocus(EContext Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Presenter", "OnContextFocus");

	Params::Presenter_OnContextFocus Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.Presenter.OnContextUnfocus
// (Native, Protected)
// Parameters:
// EContext                                Context                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPresenter::OnContextUnfocus(EContext Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Presenter", "OnContextUnfocus");

	Params::Presenter_OnContextUnfocus Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.Presenter.IsContextReady
// (Final, Native, Protected, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPresenter::IsContextReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Presenter", "IsContextReady");

	Params::Presenter_IsContextReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.Presenter.ShouldPresent
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPresenter::ShouldPresent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Presenter", "ShouldPresent");

	Params::Presenter_ShouldPresent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.HudPresenter.IsHudReady
// (Final, Native, Private)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHudPresenter::IsHudReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudPresenter", "IsHudReady");

	Params::HudPresenter_IsHudReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.HudPresenter.OnLocallyObservedChanged
// (Native, Protected)

void UHudPresenter::OnLocallyObservedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudPresenter", "OnLocallyObservedChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudPresenter.OnPawnPossessed
// (Final, Native, Private)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHudPresenter::OnPawnPossessed(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudPresenter", "OnPawnPossessed");

	Params::HudPresenter_OnPawnPossessed Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudPresenter.OnPawnUnpossessed
// (Final, Native, Private)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHudPresenter::OnPawnUnpossessed(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudPresenter", "OnPawnUnpossessed");

	Params::HudPresenter_OnPawnUnpossessed Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudPresenter.IsGameStateReady
// (Final, Native, Protected, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHudPresenter::IsGameStateReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudPresenter", "IsGameStateReady");

	Params::HudPresenter_IsGameStateReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.HudPresenter.IsPendingPawnReady
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHudPresenter::IsPendingPawnReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudPresenter", "IsPendingPawnReady");

	Params::HudPresenter_IsPendingPawnReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.HudPresenter.IsPlayerStateReady
// (Final, Native, Protected, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHudPresenter::IsPlayerStateReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudPresenter", "IsPlayerStateReady");

	Params::HudPresenter_IsPlayerStateReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.HudPresenter.IsVisibleForCurrentGameMode
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHudPresenter::IsVisibleForCurrentGameMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudPresenter", "IsVisibleForCurrentGameMode");

	Params::HudPresenter_IsVisibleForCurrentGameMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.HudEventProgressionPresenter.OnEventHauntTargetChanged
// (Final, Native, Private)
// Parameters:
// const int32                             Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHudEventProgressionPresenter::OnEventHauntTargetChanged(const int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudEventProgressionPresenter", "OnEventHauntTargetChanged");

	Params::HudEventProgressionPresenter_OnEventHauntTargetChanged Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudEventProgressionPresenter.OnEventInVoidZoneChanged
// (Final, Native, Private)
// Parameters:
// const bool                              Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHudEventProgressionPresenter::OnEventInVoidZoneChanged(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudEventProgressionPresenter", "OnEventInVoidZoneChanged");

	Params::HudEventProgressionPresenter_OnEventInVoidZoneChanged Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudEventProgressionPresenter.OnEventIsChannelingHauntChanged
// (Final, Native, Private)
// Parameters:
// const bool                              Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHudEventProgressionPresenter::OnEventIsChannelingHauntChanged(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudEventProgressionPresenter", "OnEventIsChannelingHauntChanged");

	Params::HudEventProgressionPresenter_OnEventIsChannelingHauntChanged Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudEventProgressionPresenter.OnEventProgressChanged
// (Final, Native, Private)
// Parameters:
// const int32                             Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHudEventProgressionPresenter::OnEventProgressChanged(const int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudEventProgressionPresenter", "OnEventProgressChanged");

	Params::HudEventProgressionPresenter_OnEventProgressChanged Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudEventProgressionPresenter.OnEventProgressionDataInitialized
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHudEventProgression2023ViewData&EventProgressionData                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHudEventProgressionPresenter::OnEventProgressionDataInitialized(const struct FHudEventProgression2023ViewData& EventProgressionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudEventProgressionPresenter", "OnEventProgressionDataInitialized");

	Params::HudEventProgressionPresenter_OnEventProgressionDataInitialized Parms{};

	Parms.EventProgressionData = std::move(EventProgressionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.AlertsPresenter.CanStartRewardSequence
// (Final, Native, Private)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAlertsPresenter::CanStartRewardSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AlertsPresenter", "CanStartRewardSequence");

	Params::AlertsPresenter_CanStartRewardSequence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.AlertsPresenter.OnRewardAlertSequenceCompleted
// (Final, Native, Private)

void UAlertsPresenter::OnRewardAlertSequenceCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AlertsPresenter", "OnRewardAlertSequenceCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.AlertsPresenter.HasPendingViewData
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAlertsPresenter::HasPendingViewData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AlertsPresenter", "HasPendingViewData");

	Params::AlertsPresenter_HasPendingViewData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.AnimationPreviewPresenter.OnContextEnter
// (Final, Native, Private)
// Parameters:
// EContext                                Context                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimationPreviewPresenter::OnContextEnter(EContext Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimationPreviewPresenter", "OnContextEnter");

	Params::AnimationPreviewPresenter_OnContextEnter Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.AnimationPreviewPresenter.OnContextLeave
// (Final, Native, Private)
// Parameters:
// EContext                                Context                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimationPreviewPresenter::OnContextLeave(EContext Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimationPreviewPresenter", "OnContextLeave");

	Params::AnimationPreviewPresenter_OnContextLeave Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.AnimationPreviewPresenter.IsContextEntered
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnimationPreviewPresenter::IsContextEntered() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimationPreviewPresenter", "IsContextEntered");

	Params::AnimationPreviewPresenter_IsContextEntered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.SubPresenter.OnPresenterStartAsyncOperation
// (Native, Public)

void USubPresenter::OnPresenterStartAsyncOperation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubPresenter", "OnPresenterStartAsyncOperation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.SubPresenter.OnPresenterStopAsyncOperation
// (Native, Public)

void USubPresenter::OnPresenterStopAsyncOperation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubPresenter", "OnPresenterStopAsyncOperation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveCompendiumSubPresenter.OnTomeSelected
// (Final, Native, Protected)
// Parameters:
// const class FString&                    tomeId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveCompendiumSubPresenter::OnTomeSelected(const class FString& tomeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveCompendiumSubPresenter", "OnTomeSelected");

	Params::ArchiveCompendiumSubPresenter_OnTomeSelected Parms{};

	Parms.tomeId = std::move(tomeId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveImageViewerPresenter.OnArchivesVoiceOverAutoplay
// (Final, Native, Private)
// Parameters:
// bool                                    autoplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveImageViewerPresenter::OnArchivesVoiceOverAutoplay(bool autoplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveImageViewerPresenter", "OnArchivesVoiceOverAutoplay");

	Params::ArchiveImageViewerPresenter_OnArchivesVoiceOverAutoplay Parms{};

	Parms.autoplay = autoplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveImageViewerPresenter.OnArchivesVoiceOverPlayed
// (Final, Native, Private)
// Parameters:
// bool                                    Playing                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveImageViewerPresenter::OnArchivesVoiceOverPlayed(bool Playing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveImageViewerPresenter", "OnArchivesVoiceOverPlayed");

	Params::ArchiveImageViewerPresenter_OnArchivesVoiceOverPlayed Parms{};

	Parms.Playing = Playing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveImageViewerPresenter.OnBackAction
// (Final, Native, Private)

void UArchiveImageViewerPresenter::OnBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveImageViewerPresenter", "OnBackAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveImageViewerPresenter.OnImageViewerVoiceOverAutoplay
// (Final, Native, Private)
// Parameters:
// bool                                    autoplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveImageViewerPresenter::OnImageViewerVoiceOverAutoplay(bool autoplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveImageViewerPresenter", "OnImageViewerVoiceOverAutoplay");

	Params::ArchiveImageViewerPresenter_OnImageViewerVoiceOverAutoplay Parms{};

	Parms.autoplay = autoplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveImageViewerPresenter.OnImageViewerVoiceOverPlayed
// (Final, Native, Private)

void UArchiveImageViewerPresenter::OnImageViewerVoiceOverPlayed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveImageViewerPresenter", "OnImageViewerVoiceOverPlayed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveImageViewerPresenter.OnTextVisibilityChanged
// (Final, Native, Private)

void UArchiveImageViewerPresenter::OnTextVisibilityChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveImageViewerPresenter", "OnTextVisibilityChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveImageViewerPresenter.CanShowFullScreenMode
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UArchiveImageViewerPresenter::CanShowFullScreenMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveImageViewerPresenter", "CanShowFullScreenMode");

	Params::ArchiveImageViewerPresenter_CanShowFullScreenMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.ArchiveJournalSubPresenter.OnAutoplayChanged
// (Final, Native, Private)
// Parameters:
// bool                                    autoplayActive                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   entryIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveJournalSubPresenter::OnAutoplayChanged(bool autoplayActive, int32 entryIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveJournalSubPresenter", "OnAutoplayChanged");

	Params::ArchiveJournalSubPresenter_OnAutoplayChanged Parms{};

	Parms.autoplayActive = autoplayActive;
	Parms.entryIndex = entryIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveJournalSubPresenter.OnClickPlayButton
// (Final, Native, Private)
// Parameters:
// int32                                   entryIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveJournalSubPresenter::OnClickPlayButton(int32 entryIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveJournalSubPresenter", "OnClickPlayButton");

	Params::ArchiveJournalSubPresenter_OnClickPlayButton Parms{};

	Parms.entryIndex = entryIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveJournalSubPresenter.OnEntrySelected
// (Final, Native, Private)
// Parameters:
// const int32                             entryIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveJournalSubPresenter::OnEntrySelected(const int32 entryIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveJournalSubPresenter", "OnEntrySelected");

	Params::ArchiveJournalSubPresenter_OnEntrySelected Parms{};

	Parms.entryIndex = entryIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveJournalSubPresenter.OnImageViewerVoiceOverAutoplay
// (Final, Native, Private)
// Parameters:
// bool                                    autoplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveJournalSubPresenter::OnImageViewerVoiceOverAutoplay(bool autoplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveJournalSubPresenter", "OnImageViewerVoiceOverAutoplay");

	Params::ArchiveJournalSubPresenter_OnImageViewerVoiceOverAutoplay Parms{};

	Parms.autoplay = autoplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveJournalSubPresenter.OnImageViewerVoiceOverPlayed
// (Final, Native, Private)

void UArchiveJournalSubPresenter::OnImageViewerVoiceOverPlayed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveJournalSubPresenter", "OnImageViewerVoiceOverPlayed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveJournalSubPresenter.OnPlayCinematic
// (Final, Native, Private)
// Parameters:
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveJournalSubPresenter::OnPlayCinematic(const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveJournalSubPresenter", "OnPlayCinematic");

	Params::ArchiveJournalSubPresenter_OnPlayCinematic Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveJournalSubPresenter.OnShowImageViewer
// (Final, Native, Private)

void UArchiveJournalSubPresenter::OnShowImageViewer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveJournalSubPresenter", "OnShowImageViewer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveJournalSubPresenter.OnVignetteSelected
// (Final, Native, Private)
// Parameters:
// const class FString&                    vignetteId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveJournalSubPresenter::OnVignetteSelected(const class FString& vignetteId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveJournalSubPresenter", "OnVignetteSelected");

	Params::ArchiveJournalSubPresenter_OnVignetteSelected Parms{};

	Parms.vignetteId = std::move(vignetteId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.BasePopupPresenter.OnContextEnter
// (Final, Native, Protected)
// Parameters:
// EContext                                Context                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBasePopupPresenter::OnContextEnter(EContext Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BasePopupPresenter", "OnContextEnter");

	Params::BasePopupPresenter_OnContextEnter Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.BasePopupPresenter.OnContextLeave
// (Final, Native, Protected)
// Parameters:
// EContext                                Context                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBasePopupPresenter::OnContextLeave(EContext Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BasePopupPresenter", "OnContextLeave");

	Params::BasePopupPresenter_OnContextLeave Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.BasePopupPresenter.IsContextEntered
// (Final, Native, Protected, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBasePopupPresenter::IsContextEntered() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BasePopupPresenter", "IsContextEntered");

	Params::BasePopupPresenter_IsContextEntered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.GenericPopupPresenter.OnAction
// (Native, Protected)
// Parameters:
// EPopupButtonType                        popupAction                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGenericPopupPresenter::OnAction(EPopupButtonType popupAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GenericPopupPresenter", "OnAction");

	Params::GenericPopupPresenter_OnAction Parms{};

	Parms.popupAction = popupAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.GenericPopupPresenter.OnAppResumed
// (Final, Native, Protected)
// Parameters:
// bool                                    isAppResumed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGenericPopupPresenter::OnAppResumed(bool isAppResumed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GenericPopupPresenter", "OnAppResumed");

	Params::GenericPopupPresenter_OnAppResumed Parms{};

	Parms.isAppResumed = isAppResumed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.GenericPopupPresenter.OnBack
// (Native, Protected)

void UGenericPopupPresenter::OnBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GenericPopupPresenter", "OnBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchivePassPurchasePopupPresenter.OnArchivePackPurchaseClicked
// (Final, Native, Private)

void UArchivePassPurchasePopupPresenter::OnArchivePackPurchaseClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchivePassPurchasePopupPresenter", "OnArchivePackPurchaseClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveQuestMapSubPresenter.GetCurrentLevel
// (Final, Native, Private)

void UArchiveQuestMapSubPresenter::GetCurrentLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveQuestMapSubPresenter", "GetCurrentLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveQuestMapSubPresenter.NavigateToNextLevelAfterUnlock
// (Final, Native, Private)

void UArchiveQuestMapSubPresenter::NavigateToNextLevelAfterUnlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveQuestMapSubPresenter", "NavigateToNextLevelAfterUnlock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveQuestMapSubPresenter.OnLevelSelected
// (Final, Native, Private)
// Parameters:
// const int32                             LevelIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveQuestMapSubPresenter::OnLevelSelected(const int32 LevelIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveQuestMapSubPresenter", "OnLevelSelected");

	Params::ArchiveQuestMapSubPresenter_OnLevelSelected Parms{};

	Parms.LevelIndex = LevelIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveQuestMapSubPresenter.OnNodeSelected
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// const class FName&                      NodeId                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerRole                             Role                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 Position                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveQuestMapSubPresenter::OnNodeSelected(const class FName& NodeId, EPlayerRole Role, const struct FVector2D& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveQuestMapSubPresenter", "OnNodeSelected");

	Params::ArchiveQuestMapSubPresenter_OnNodeSelected Parms{};

	Parms.NodeId = NodeId;
	Parms.Role = Role;
	Parms.Position = std::move(Position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveQuestMapSubPresenter.OnPlayerCardUpdated
// (Final, Native, Private)
// Parameters:
// const class FString&                    badgeId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    bannerId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveQuestMapSubPresenter::OnPlayerCardUpdated(const class FString& badgeId, const class FString& bannerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveQuestMapSubPresenter", "OnPlayerCardUpdated");

	Params::ArchiveQuestMapSubPresenter_OnPlayerCardUpdated Parms{};

	Parms.badgeId = std::move(badgeId);
	Parms.bannerId = std::move(bannerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveQuestMapSubPresenter.OnQuestNodeHovered
// (Final, Native, Private)
// Parameters:
// EPlayerRole                             Role                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveQuestMapSubPresenter::OnQuestNodeHovered(EPlayerRole Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveQuestMapSubPresenter", "OnQuestNodeHovered");

	Params::ArchiveQuestMapSubPresenter_OnQuestNodeHovered Parms{};

	Parms.Role = Role;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveQuestMapSubPresenter.OnQuestNodeUnhovered
// (Final, Native, Private)
// Parameters:
// EPlayerRole                             Role                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveQuestMapSubPresenter::OnQuestNodeUnhovered(EPlayerRole Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveQuestMapSubPresenter", "OnQuestNodeUnhovered");

	Params::ArchiveQuestMapSubPresenter_OnQuestNodeUnhovered Parms{};

	Parms.Role = Role;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveQuestMapSubPresenter.OnTomeLevelRewardAnimationDone
// (Final, Native, Private)

void UArchiveQuestMapSubPresenter::OnTomeLevelRewardAnimationDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveQuestMapSubPresenter", "OnTomeLevelRewardAnimationDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveQuestMapSubPresenter.OnTomeMapCreated
// (Final, Native, Private)

void UArchiveQuestMapSubPresenter::OnTomeMapCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveQuestMapSubPresenter", "OnTomeMapCreated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveQuestMapSubPresenter.UpdateTomeLevels
// (Final, Native, Private)

void UArchiveQuestMapSubPresenter::UpdateTomeLevels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveQuestMapSubPresenter", "UpdateTomeLevels");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchivesPresenter.OnBackButtonClicked
// (Final, Native, Private)

void UArchivesPresenter::OnBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchivesPresenter", "OnBackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchivesPresenter.OnChallengeReminderClicked
// (Final, Native, Private)
// Parameters:
// EPlayerRole                             Role                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchivesPresenter::OnChallengeReminderClicked(EPlayerRole Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchivesPresenter", "OnChallengeReminderClicked");

	Params::ArchivesPresenter_OnChallengeReminderClicked Parms{};

	Parms.Role = Role;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchivesPresenter.OnChallengeReminderSlotSelected
// (Final, Native, Private)
// Parameters:
// EPlayerRole                             Role                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchivesPresenter::OnChallengeReminderSlotSelected(EPlayerRole Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchivesPresenter", "OnChallengeReminderSlotSelected");

	Params::ArchivesPresenter_OnChallengeReminderSlotSelected Parms{};

	Parms.Role = Role;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchivesPresenter.OnHideImageViewer
// (Final, Native, Private)

void UArchivesPresenter::OnHideImageViewer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchivesPresenter", "OnHideImageViewer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchivesPresenter.OnInfoButtonClicked
// (Final, Native, Private)

void UArchivesPresenter::OnInfoButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchivesPresenter", "OnInfoButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchivesPresenter.OnSettingsButtonClicked
// (Final, Native, Private)

void UArchivesPresenter::OnSettingsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchivesPresenter", "OnSettingsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchivesPresenter.OnShowImageViewer
// (Final, Native, Private)
// Parameters:
// bool                                    voiceOverIsPlaying                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchivesPresenter::OnShowImageViewer(bool voiceOverIsPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchivesPresenter", "OnShowImageViewer");

	Params::ArchivesPresenter_OnShowImageViewer Parms{};

	Parms.voiceOverIsPlaying = voiceOverIsPlaying;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchivesPresenter.OnSlotSelectorClosed
// (Final, Native, Private)

void UArchivesPresenter::OnSlotSelectorClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchivesPresenter", "OnSlotSelectorClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveTierPurchasePopupPresenter.OnConfirmPurchase
// (Final, Native, Protected)
// Parameters:
// int32                                   tiersToPurchaseNumber                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isPurchasingInfiniteTiers                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveTierPurchasePopupPresenter::OnConfirmPurchase(int32 tiersToPurchaseNumber, bool isPurchasingInfiniteTiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveTierPurchasePopupPresenter", "OnConfirmPurchase");

	Params::ArchiveTierPurchasePopupPresenter_OnConfirmPurchase Parms{};

	Parms.tiersToPurchaseNumber = tiersToPurchaseNumber;
	Parms.isPurchasingInfiniteTiers = isPurchasingInfiniteTiers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ArchiveTomeSubPresenter.OnMenuTabSelected
// (Final, Native, Public)
// Parameters:
// EArchiveTomeMenuState                   menuState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArchiveTomeSubPresenter::OnMenuTabSelected(EArchiveTomeMenuState menuState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArchiveTomeSubPresenter", "OnMenuTabSelected");

	Params::ArchiveTomeSubPresenter_OnMenuTabSelected Parms{};

	Parms.menuState = menuState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.AuricCellsPresenter.OnBackAction
// (Final, Native, Private)

void UAuricCellsPresenter::OnBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuricCellsPresenter", "OnBackAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.AuricCellsPresenter.OnBuyAction
// (Final, Native, Private)
// Parameters:
// class FName                             bundleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAuricCellsPresenter::OnBuyAction(class FName bundleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuricCellsPresenter", "OnBuyAction");

	Params::AuricCellsPresenter_OnBuyAction Parms{};

	Parms.bundleId = bundleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.AuricCellsPresenter.OnPremiumTransactionCompleted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    Success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPremiumPurchaseCompleteData&purchaseCompleteData                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAuricCellsPresenter::OnPremiumTransactionCompleted(bool Success, class FName ItemId, const struct FPremiumPurchaseCompleteData& purchaseCompleteData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuricCellsPresenter", "OnPremiumTransactionCompleted");

	Params::AuricCellsPresenter_OnPremiumTransactionCompleted Parms{};

	Parms.Success = Success;
	Parms.ItemId = ItemId;
	Parms.purchaseCompleteData = std::move(purchaseCompleteData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.AuricCellsPresenter.OnSupportACreatorAction
// (Final, Native, Private)

void UAuricCellsPresenter::OnSupportACreatorAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AuricCellsPresenter", "OnSupportACreatorAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.BloodPointBulkSpendingPopupPresenter.OnLevelTextChanged
// (Final, Native, Protected, Const)
// Parameters:
// const int32                             enteredNumber                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBloodPointBulkSpendingPopupPresenter::OnLevelTextChanged(const int32 enteredNumber) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BloodPointBulkSpendingPopupPresenter", "OnLevelTextChanged");

	Params::BloodPointBulkSpendingPopupPresenter_OnLevelTextChanged Parms{};

	Parms.enteredNumber = enteredNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.BotLoadoutPresenter.OnBotLoadoutPresetSelected
// (Final, Native, Private)
// Parameters:
// const int32                             presetId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBotLoadoutPresenter::OnBotLoadoutPresetSelected(const int32 presetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BotLoadoutPresenter", "OnBotLoadoutPresetSelected");

	Params::BotLoadoutPresenter_OnBotLoadoutPresetSelected Parms{};

	Parms.presetId = presetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.BotLoadoutPresenter.OnCharacterSelectionDropdownVisibilityChanged
// (Final, Native, Private)
// Parameters:
// const bool                              isDropdownVisible                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBotLoadoutPresenter::OnCharacterSelectionDropdownVisibilityChanged(const bool isDropdownVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BotLoadoutPresenter", "OnCharacterSelectionDropdownVisibilityChanged");

	Params::BotLoadoutPresenter_OnCharacterSelectionDropdownVisibilityChanged Parms{};

	Parms.isDropdownVisible = isDropdownVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.BotLoadoutPresenter.OnLoadoutInventorySlotClick
// (Final, Native, Private)
// Parameters:
// const ELoadoutSlot                      slotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       ItemId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBotLoadoutPresenter::OnLoadoutInventorySlotClick(const ELoadoutSlot slotIndex, const class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BotLoadoutPresenter", "OnLoadoutInventorySlotClick");

	Params::BotLoadoutPresenter_OnLoadoutInventorySlotClick Parms{};

	Parms.slotIndex = slotIndex;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.BotLoadoutPresenter.OnLoadoutSlotSelected
// (Final, Native, Private)
// Parameters:
// const ELoadoutSlot                      slotSelected                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBotLoadoutPresenter::OnLoadoutSlotSelected(const ELoadoutSlot slotSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BotLoadoutPresenter", "OnLoadoutSlotSelected");

	Params::BotLoadoutPresenter_OnLoadoutSlotSelected Parms{};

	Parms.slotSelected = slotSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.BotLoadoutPresenter.OnSelectedCharacterChanged
// (Final, Native, Private)
// Parameters:
// int32                                   SelectedCharacterIndex                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBotLoadoutPresenter::OnSelectedCharacterChanged(int32 SelectedCharacterIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BotLoadoutPresenter", "OnSelectedCharacterChanged");

	Params::BotLoadoutPresenter_OnSelectedCharacterChanged Parms{};

	Parms.SelectedCharacterIndex = SelectedCharacterIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.BotLoadoutPresenter.OnSearchBarTextChanged
// (Final, Native, Private, Const)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBotLoadoutPresenter::OnSearchBarTextChanged(const class FString& String) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BotLoadoutPresenter", "OnSearchBarTextChanged");

	Params::BotLoadoutPresenter_OnSearchBarTextChanged Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuChallengeSetSubPresenter.SetChallengeSetState
// (Final, Native, Public)
// Parameters:
// const EChallengesMenuChallengeSetState  State                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengesMenuChallengeSetSubPresenter::SetChallengeSetState(const EChallengesMenuChallengeSetState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuChallengeSetSubPresenter", "SetChallengeSetState");

	Params::ChallengesMenuChallengeSetSubPresenter_SetChallengeSetState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuPresenter.OnBackButtonClicked
// (Final, Native, Private)

void UChallengesMenuPresenter::OnBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuPresenter", "OnBackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuPresenter.OnChallengeSetSelected
// (Final, Native, Private)
// Parameters:
// const class FString&                    ChallengeSetId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    eventFrameLabel                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengesMenuPresenter::OnChallengeSetSelected(const class FString& ChallengeSetId, const class FString& eventFrameLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuPresenter", "OnChallengeSetSelected");

	Params::ChallengesMenuPresenter_OnChallengeSetSelected Parms{};

	Parms.ChallengeSetId = std::move(ChallengeSetId);
	Parms.eventFrameLabel = std::move(eventFrameLabel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuPresenter.OnGoToEventButtonClicked
// (Final, Native, Private)

void UChallengesMenuPresenter::OnGoToEventButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuPresenter", "OnGoToEventButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuPresenter.OnGoToRiftPassButtonClicked
// (Final, Native, Private)

void UChallengesMenuPresenter::OnGoToRiftPassButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuPresenter", "OnGoToRiftPassButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuPresenter.OnInfoButtonClicked
// (Final, Native, Private)

void UChallengesMenuPresenter::OnInfoButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuPresenter", "OnInfoButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuPresenter.OnSettingsButtonClicked
// (Final, Native, Private)

void UChallengesMenuPresenter::OnSettingsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuPresenter", "OnSettingsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuPresenter.RefreshChallengesList
// (Final, Native, Private)

void UChallengesMenuPresenter::RefreshChallengesList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuPresenter", "RefreshChallengesList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuRewardTrackSubPresenter.OnRewardCurrencyClicked
// (Final, Native, Protected)
// Parameters:
// ECurrencyType                           currencyType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengesMenuRewardTrackSubPresenter::OnRewardCurrencyClicked(ECurrencyType currencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuRewardTrackSubPresenter", "OnRewardCurrencyClicked");

	Params::ChallengesMenuRewardTrackSubPresenter_OnRewardCurrencyClicked Parms{};

	Parms.currencyType = currencyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuRewardTrackSubPresenter.OnRewardItemClicked
// (Final, Native, Protected)
// Parameters:
// class FName                             ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengesMenuRewardTrackSubPresenter::OnRewardItemClicked(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuRewardTrackSubPresenter", "OnRewardItemClicked");

	Params::ChallengesMenuRewardTrackSubPresenter_OnRewardItemClicked Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuRitualsSubPresenter.OnChallengeCardSelected
// (Final, Native, Private)
// Parameters:
// const class FString&                    ChallengeId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengesMenuRitualsSubPresenter::OnChallengeCardSelected(const class FString& ChallengeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuRitualsSubPresenter", "OnChallengeCardSelected");

	Params::ChallengesMenuRitualsSubPresenter_OnChallengeCardSelected Parms{};

	Parms.ChallengeId = std::move(ChallengeId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuRitualsSubPresenter.OnChallengeFollowClicked
// (Final, Native, Private)
// Parameters:
// const class FString&                    ChallengeId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengesMenuRitualsSubPresenter::OnChallengeFollowClicked(const class FString& ChallengeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuRitualsSubPresenter", "OnChallengeFollowClicked");

	Params::ChallengesMenuRitualsSubPresenter_OnChallengeFollowClicked Parms{};

	Parms.ChallengeId = std::move(ChallengeId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuRitualsSubPresenter.OnSearchBarTextChanged
// (Final, Native, Private)
// Parameters:
// const class FString&                    enteredText                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengesMenuRitualsSubPresenter::OnSearchBarTextChanged(const class FString& enteredText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuRitualsSubPresenter", "OnSearchBarTextChanged");

	Params::ChallengesMenuRitualsSubPresenter_OnSearchBarTextChanged Parms{};

	Parms.enteredText = std::move(enteredText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuRitualsSubPresenter.OnSortingChanged
// (Final, Native, Private)
// Parameters:
// ESortingOption                          SortingOption                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESortingOrder                           sortingOrder                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengesMenuRitualsSubPresenter::OnSortingChanged(ESortingOption SortingOption, ESortingOrder sortingOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuRitualsSubPresenter", "OnSortingChanged");

	Params::ChallengesMenuRitualsSubPresenter_OnSortingChanged Parms{};

	Parms.SortingOption = SortingOption;
	Parms.sortingOrder = sortingOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengesMenuRitualsSubPresenter.RefreshChallengesList
// (Final, Native, Public)

void UChallengesMenuRitualsSubPresenter::RefreshChallengesList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengesMenuRitualsSubPresenter", "RefreshChallengesList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengeTrackerPresenter.BindToQuestRepetitionEvents
// (Final, Native, Private)

void UChallengeTrackerPresenter::BindToQuestRepetitionEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeTrackerPresenter", "BindToQuestRepetitionEvents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChallengeTrackerPresenter.OnQuestEventRepetitionValueChanged
// (Final, Native, Private)
// Parameters:
// const int32                             Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    questEventIdTracked                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    challengeOrNodeId                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallengeTrackerPresenter::OnQuestEventRepetitionValueChanged(const int32 Value, const class FString& questEventIdTracked, const class FString& challengeOrNodeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeTrackerPresenter", "OnQuestEventRepetitionValueChanged");

	Params::ChallengeTrackerPresenter_OnQuestEventRepetitionValueChanged Parms{};

	Parms.Value = Value;
	Parms.questEventIdTracked = std::move(questEventIdTracked);
	Parms.challengeOrNodeId = std::move(challengeOrNodeId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChatSubPresenter.OnChatVisibilityToggled
// (Final, Native, Private)
// Parameters:
// const bool                              IsVisible                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatSubPresenter::OnChatVisibilityToggled(const bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatSubPresenter", "OnChatVisibilityToggled");

	Params::ChatSubPresenter_OnChatVisibilityToggled Parms{};

	Parms.IsVisible = IsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ChatSubPresenter.OnTextCommited
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UChatSubPresenter::OnTextCommited(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatSubPresenter", "OnTextCommited");

	Params::ChatSubPresenter_OnTextCommited Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CinematicPresenter.DBD_ChangeVideoPlaybackMode
// (Final, Exec, Native, Private)
// Parameters:
// const class FString&                    Mode                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCinematicPresenter::DBD_ChangeVideoPlaybackMode(const class FString& Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CinematicPresenter", "DBD_ChangeVideoPlaybackMode");

	Params::CinematicPresenter_DBD_ChangeVideoPlaybackMode Parms{};

	Parms.Mode = std::move(Mode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CinematicPresenter.DBD_ChangeVideoVolume
// (Final, Exec, Native, Private)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCinematicPresenter::DBD_ChangeVideoVolume(float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CinematicPresenter", "DBD_ChangeVideoVolume");

	Params::CinematicPresenter_DBD_ChangeVideoVolume Parms{};

	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CinematicPresenter.DBD_StopVideoPlayer
// (Final, Exec, Native, Private)

void UCinematicPresenter::DBD_StopVideoPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CinematicPresenter", "DBD_StopVideoPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CinematicPresenter.MuteGameAudio
// (Final, Native, Public)
// Parameters:
// const bool                              shouldMute                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCinematicPresenter::MuteGameAudio(const bool shouldMute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CinematicPresenter", "MuteGameAudio");

	Params::CinematicPresenter_MuteGameAudio Parms{};

	Parms.shouldMute = shouldMute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CinematicPresenter.OnPlaybackDone
// (Final, Native, Public)

void UCinematicPresenter::OnPlaybackDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CinematicPresenter", "OnPlaybackDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CinematicPresenter.OnPlaybackStarted
// (Final, Native, Public)

void UCinematicPresenter::OnPlaybackStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CinematicPresenter", "OnPlaybackStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CinematicPresenter.OnSkipButtonClicked
// (Final, Native, Public)

void UCinematicPresenter::OnSkipButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CinematicPresenter", "OnSkipButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CinematicPresenter.OnSubtitlesUpdated
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TArray<class FString>&            Subtitles                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCinematicPresenter::OnSubtitlesUpdated(const TArray<class FString>& Subtitles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CinematicPresenter", "OnSubtitlesUpdated");

	Params::CinematicPresenter_OnSubtitlesUpdated Parms{};

	Parms.Subtitles = std::move(Subtitles);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CinematicPresenter.OnWidgetFadeInAnimationDone
// (Final, Native, Public)

void UCinematicPresenter::OnWidgetFadeInAnimationDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CinematicPresenter", "OnWidgetFadeInAnimationDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CinematicPresenter.OnWidgetFadeOutAnimationDone
// (Final, Native, Public)

void UCinematicPresenter::OnWidgetFadeOutAnimationDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CinematicPresenter", "OnWidgetFadeOutAnimationDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CreditsPresenter.Credits_ScrollToEnd
// (Final, Exec, Native, Public)

void UCreditsPresenter::Credits_ScrollToEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreditsPresenter", "Credits_ScrollToEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CreditsPresenter.Credits_ScrollToName
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreditsPresenter::Credits_ScrollToName(const class FString& Name_0, float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreditsPresenter", "Credits_ScrollToName");

	Params::CreditsPresenter_Credits_ScrollToName Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Delay = Delay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.CreditsPresenter.OnBackAction
// (Final, Native, Private)

void UCreditsPresenter::OnBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreditsPresenter", "OnBackAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.DirectionalMinigamePresenter.OnMinigameEnd
// (Final, Native, Private)
// Parameters:
// EDirectionalMinigameResult              Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDirectionalMinigamePresenter::OnMinigameEnd(EDirectionalMinigameResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DirectionalMinigamePresenter", "OnMinigameEnd");

	Params::DirectionalMinigamePresenter_OnMinigameEnd Parms{};

	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.DirectionalMinigamePresenter.OnMinigameEnterKey
// (Final, Native, Private)
// Parameters:
// EDirectionalInputKey                    enteredKey                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   enteredIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isCorrect                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   currentIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDirectionalMinigamePresenter::OnMinigameEnterKey(EDirectionalInputKey enteredKey, int32 enteredIndex, bool isCorrect, int32 currentIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DirectionalMinigamePresenter", "OnMinigameEnterKey");

	Params::DirectionalMinigamePresenter_OnMinigameEnterKey Parms{};

	Parms.enteredKey = enteredKey;
	Parms.enteredIndex = enteredIndex;
	Parms.isCorrect = isCorrect;
	Parms.currentIndex = currentIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.DirectionalMinigamePresenter.OnMinigameStart
// (Final, Native, Private)
// Parameters:
// const TArray<EDirectionalInputKey>&     Sequence                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   currentIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDirectionalMinigamePresenter::OnMinigameStart(const TArray<EDirectionalInputKey>& Sequence, int32 currentIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DirectionalMinigamePresenter", "OnMinigameStart");

	Params::DirectionalMinigamePresenter_OnMinigameStart Parms{};

	Parms.Sequence = std::move(Sequence);
	Parms.currentIndex = currentIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.DirectionalMinigamePresenter.OnMinigameInit
// (Final, Native, Private, Const)
// Parameters:
// const struct FDirectionalMiniGameDefinition&miniGameDefinition                                     (Parm, NativeAccessSpecifierPublic)

void UDirectionalMinigamePresenter::OnMinigameInit(const struct FDirectionalMiniGameDefinition& miniGameDefinition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DirectionalMinigamePresenter", "OnMinigameInit");

	Params::DirectionalMinigamePresenter_OnMinigameInit Parms{};

	Parms.miniGameDefinition = std::move(miniGameDefinition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.EventEntryRewardsSubPresenter.OnInstructionButtonClicked
// (Final, Native, Protected)

void UEventEntryRewardsSubPresenter::OnInstructionButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventEntryRewardsSubPresenter", "OnInstructionButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.EventEntryRewardsSubPresenter.OnPreviewAreaItemClicked
// (Final, Native, Protected)
// Parameters:
// const int32                             selectedIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventEntryRewardsSubPresenter::OnPreviewAreaItemClicked(const int32 selectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventEntryRewardsSubPresenter", "OnPreviewAreaItemClicked");

	Params::EventEntryRewardsSubPresenter_OnPreviewAreaItemClicked Parms{};

	Parms.selectedIndex = selectedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.EventEntryRewardsSubPresenter.OnRewardGridItemClicked
// (Final, Native, Protected)
// Parameters:
// const int32                             selectedIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventEntryRewardsSubPresenter::OnRewardGridItemClicked(const int32 selectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventEntryRewardsSubPresenter", "OnRewardGridItemClicked");

	Params::EventEntryRewardsSubPresenter_OnRewardGridItemClicked Parms{};

	Parms.selectedIndex = selectedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.EventEntryEventSubPresenter.OnChallengesButtonClicked
// (Final, Native, Protected)

void UEventEntryEventSubPresenter::OnChallengesButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventEntryEventSubPresenter", "OnChallengesButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.EventEntryPresenter.GoToStoreButtonClicked
// (Final, Native, Private)
// Parameters:
// const class FName                       selectedStoreTabItemId                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventEntryPresenter::GoToStoreButtonClicked(const class FName selectedStoreTabItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventEntryPresenter", "GoToStoreButtonClicked");

	Params::EventEntryPresenter_GoToStoreButtonClicked Parms{};

	Parms.selectedStoreTabItemId = selectedStoreTabItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.EventEntryPresenter.OnBackAction
// (Final, Native, Private)

void UEventEntryPresenter::OnBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventEntryPresenter", "OnBackAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.EventEntryPresenter.OnMilestoneTrackerItemClicked
// (Final, Native, Private)
// Parameters:
// const int32                             selectedIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventEntryPresenter::OnMilestoneTrackerItemClicked(const int32 selectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventEntryPresenter", "OnMilestoneTrackerItemClicked");

	Params::EventEntryPresenter_OnMilestoneTrackerItemClicked Parms{};

	Parms.selectedIndex = selectedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.EventEntryPresenter.OnSelectedTabChanged
// (Final, Native, Private)
// Parameters:
// const int32                             Key                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventEntryPresenter::OnSelectedTabChanged(const int32 Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventEntryPresenter", "OnSelectedTabChanged");

	Params::EventEntryPresenter_OnSelectedTabChanged Parms{};

	Parms.Key = Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ExamplePresenter.OnButtonClick
// (Final, Native, Private)

void UExamplePresenter::OnButtonClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExamplePresenter", "OnButtonClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ExternalEffectsPresenter.OnHideExternalEffect
// (Final, Native, Protected)
// Parameters:
// const class FName                       ItemId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EExternalEffectSource             ExternalEffectSource                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UExternalEffectsPresenter::OnHideExternalEffect(const class FName ItemId, const EExternalEffectSource ExternalEffectSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExternalEffectsPresenter", "OnHideExternalEffect");

	Params::ExternalEffectsPresenter_OnHideExternalEffect Parms{};

	Parms.ItemId = ItemId;
	Parms.ExternalEffectSource = ExternalEffectSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ExternalEffectsPresenter.OnShowExternalEffect
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FExternalEffectData&       Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UExternalEffectsPresenter::OnShowExternalEffect(const struct FExternalEffectData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExternalEffectsPresenter", "OnShowExternalEffect");

	Params::ExternalEffectsPresenter_OnShowExternalEffect Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.FriendSearchPopupPresenter.OnSearchBarTextChanged
// (Final, Native, Protected)
// Parameters:
// const class FString&                    enteredText                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendSearchPopupPresenter::OnSearchBarTextChanged(const class FString& enteredText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendSearchPopupPresenter", "OnSearchBarTextChanged");

	Params::FriendSearchPopupPresenter_OnSearchBarTextChanged Parms{};

	Parms.enteredText = std::move(enteredText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.GameManualSubPresenter.OnCategoryCategoryEntered
// (Final, Native, Private)
// Parameters:
// EHelpType                               categoryType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameManualSubPresenter::OnCategoryCategoryEntered(EHelpType categoryType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameManualSubPresenter", "OnCategoryCategoryEntered");

	Params::GameManualSubPresenter_OnCategoryCategoryEntered Parms{};

	Parms.categoryType = categoryType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.GammaSettingsPopupPresenter.OnGammaConfirmed
// (Final, Native, Protected)
// Parameters:
// float                                   gamma                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGammaSettingsPopupPresenter::OnGammaConfirmed(float gamma)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GammaSettingsPopupPresenter", "OnGammaConfirmed");

	Params::GammaSettingsPopupPresenter_OnGammaConfirmed Parms{};

	Parms.gamma = gamma;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.GammaSettingsPopupPresenter.OnGammaReset
// (Final, Native, Protected)

void UGammaSettingsPopupPresenter::OnGammaReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GammaSettingsPopupPresenter", "OnGammaReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.GammaSettingsPopupPresenter.OnGammaValueChanged
// (Final, Native, Protected)
// Parameters:
// float                                   gamma                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGammaSettingsPopupPresenter::OnGammaValueChanged(float gamma)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GammaSettingsPopupPresenter", "OnGammaValueChanged");

	Params::GammaSettingsPopupPresenter_OnGammaValueChanged Parms{};

	Parms.gamma = gamma;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.GridPresenterParentWidget.OnChildVisibilityChanged
// (Final, Native, Public)
// Parameters:
// ESlateVisibility                        InVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGridPresenterParentWidget::OnChildVisibilityChanged(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GridPresenterParentWidget", "OnChildVisibilityChanged");

	Params::GridPresenterParentWidget_OnChildVisibilityChanged Parms{};

	Parms.InVisibility = InVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudMatchResultPresenter.NotifyInParadiseOrEscaped
// (Final, Native, Private)

void UHudMatchResultPresenter::NotifyInParadiseOrEscaped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudMatchResultPresenter", "NotifyInParadiseOrEscaped");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudMatchResultPresenter.OnMatchResultFadeOutCompleted
// (Final, Native, Private)

void UHudMatchResultPresenter::OnMatchResultFadeOutCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudMatchResultPresenter", "OnMatchResultFadeOutCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudMatchResultPresenter.ShowEndSequence
// (Final, Native, Private)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSlasher                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   matchResult                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHudMatchResultPresenter::ShowEndSequence(float Duration, bool IsSlasher, int32 matchResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudMatchResultPresenter", "ShowEndSequence");

	Params::HudMatchResultPresenter_ShowEndSequence Parms{};

	Parms.Duration = Duration;
	Parms.IsSlasher = IsSlasher;
	Parms.matchResult = matchResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudMatchResultPresenter.StartEndGameSequence
// (Final, Native, Private)

void UHudMatchResultPresenter::StartEndGameSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudMatchResultPresenter", "StartEndGameSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudPeekingPromptsPresenter.HandleBestPlayerInteractionsChanged
// (Final, Native, Private)

void UHudPeekingPromptsPresenter::HandleBestPlayerInteractionsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudPeekingPromptsPresenter", "HandleBestPlayerInteractionsChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudPeekingPromptsPresenter.UpdatePeekingState
// (Final, Native, Private)
// Parameters:
// ELeanState                              potentialLeanState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHudPeekingPromptsPresenter::UpdatePeekingState(ELeanState potentialLeanState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudPeekingPromptsPresenter", "UpdatePeekingState");

	Params::HudPeekingPromptsPresenter_UpdatePeekingState Parms{};

	Parms.potentialLeanState = potentialLeanState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudPeekingPromptsPresenter.CanPlayerLean
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHudPeekingPromptsPresenter::CanPlayerLean() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudPeekingPromptsPresenter", "CanPlayerLean");

	Params::HudPeekingPromptsPresenter_CanPlayerLean Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.HudSpectatePresenter.OnLeaveTriggered
// (Final, Native, Private)

void UHudSpectatePresenter::OnLeaveTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudSpectatePresenter", "OnLeaveTriggered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudSpectatePresenter.OnNextPlayerTriggered
// (Final, Native, Private)

void UHudSpectatePresenter::OnNextPlayerTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudSpectatePresenter", "OnNextPlayerTriggered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudSpectatePresenter.OnPlayerGameStateChanged
// (Final, Native, Private)
// Parameters:
// class ADBDPlayerState*                  DBDPlayerState                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameState                              newGameState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHudSpectatePresenter::OnPlayerGameStateChanged(class ADBDPlayerState* DBDPlayerState, EGameState newGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudSpectatePresenter", "OnPlayerGameStateChanged");

	Params::HudSpectatePresenter_OnPlayerGameStateChanged Parms{};

	Parms.DBDPlayerState = DBDPlayerState;
	Parms.newGameState = newGameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudSpectatePresenter.OnPreviousPlayerTriggered
// (Final, Native, Private)

void UHudSpectatePresenter::OnPreviousPlayerTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudSpectatePresenter", "OnPreviousPlayerTriggered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudTutorialObjectivesPresenter.IsInTutorial
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHudTutorialObjectivesPresenter::IsInTutorial() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudTutorialObjectivesPresenter", "IsInTutorial");

	Params::HudTutorialObjectivesPresenter_IsInTutorial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.InboxPresenter.OnBackButtonClicked
// (Final, Native, Private)

void UInboxPresenter::OnBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InboxPresenter", "OnBackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.InboxPresenter.OnClaimClicked
// (Final, Native, Private)

void UInboxPresenter::OnClaimClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InboxPresenter", "OnClaimClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.InboxPresenter.OnItemClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FName&                      ItemId                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInboxPresenter::OnItemClicked(const class FName& ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InboxPresenter", "OnItemClicked");

	Params::InboxPresenter_OnItemClicked Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.InboxPresenter.OnMessagesGeneralButtonClicked
// (Final, Native, Private)

void UInboxPresenter::OnMessagesGeneralButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InboxPresenter", "OnMessagesGeneralButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.InboxPresenter.OnNewsGeneralButtonClicked
// (Final, Native, Private)

void UInboxPresenter::OnNewsGeneralButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InboxPresenter", "OnNewsGeneralButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.InboxPresenter.OnRedirectClicked
// (Final, Native, Private)

void UInboxPresenter::OnRedirectClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InboxPresenter", "OnRedirectClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.InboxPresenter.OnTabSelected
// (Final, Native, Private)
// Parameters:
// const EInboxTab                         Tab                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInboxPresenter::OnTabSelected(const EInboxTab Tab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InboxPresenter", "OnTabSelected");

	Params::InboxPresenter_OnTabSelected Parms{};

	Parms.Tab = Tab;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LightSensitivityPresenter.OnCompletedFadeOut
// (Final, Native, Private)

void ULightSensitivityPresenter::OnCompletedFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LightSensitivityPresenter", "OnCompletedFadeOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LightSensitivityPresenter.OnContinue
// (Final, Native, Private)

void ULightSensitivityPresenter::OnContinue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LightSensitivityPresenter", "OnContinue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LoadingScreenSubPresenter.OnLoadingHintsFadeSequenceCompleted
// (Native, Public)

void ULoadingScreenSubPresenter::OnLoadingHintsFadeSequenceCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenSubPresenter", "OnLoadingHintsFadeSequenceCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubTabSubPresenter.OnWalletUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<struct FShopWalletUpdate>& walletUpdates                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyCharactersSubTabSubPresenter::OnWalletUpdated(const TArray<struct FShopWalletUpdate>& walletUpdates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubTabSubPresenter", "OnWalletUpdated");

	Params::LobbyCharactersSubTabSubPresenter_OnWalletUpdated Parms{};

	Parms.walletUpdates = std::move(walletUpdates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersCustomizationsSubPresenter.OnCategorySelected
// (Final, Native, Private)
// Parameters:
// const ECustomizationCategory            category                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersCustomizationsSubPresenter::OnCategorySelected(const ECustomizationCategory category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersCustomizationsSubPresenter", "OnCategorySelected");

	Params::LobbyCharactersCustomizationsSubPresenter_OnCategorySelected Parms{};

	Parms.category = category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersCustomizationsSubPresenter.OnCategorySelectedAgain
// (Final, Native, Private)
// Parameters:
// const ECustomizationCategory            category                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersCustomizationsSubPresenter::OnCategorySelectedAgain(const ECustomizationCategory category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersCustomizationsSubPresenter", "OnCategorySelectedAgain");

	Params::LobbyCharactersCustomizationsSubPresenter_OnCategorySelectedAgain Parms{};

	Parms.category = category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersCustomizationsSubPresenter.OnCharmSlotSelected
// (Final, Native, Private)
// Parameters:
// const int32                             slotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersCustomizationsSubPresenter::OnCharmSlotSelected(const int32 slotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersCustomizationsSubPresenter", "OnCharmSlotSelected");

	Params::LobbyCharactersCustomizationsSubPresenter_OnCharmSlotSelected Parms{};

	Parms.slotIndex = slotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersCustomizationsSubPresenter.OnClearFiltersClicked
// (Final, Native, Private)

void ULobbyCharactersCustomizationsSubPresenter::OnClearFiltersClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersCustomizationsSubPresenter", "OnClearFiltersClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersCustomizationsSubPresenter.OnCustomizationSelected
// (Final, Native, Private)
// Parameters:
// const class FName                       customizationId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersCustomizationsSubPresenter::OnCustomizationSelected(const class FName customizationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersCustomizationsSubPresenter", "OnCustomizationSelected");

	Params::LobbyCharactersCustomizationsSubPresenter_OnCustomizationSelected Parms{};

	Parms.customizationId = customizationId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersCustomizationsSubPresenter.OnCustomizationSelectedAgain
// (Final, Native, Private)
// Parameters:
// const class FName                       customizationId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersCustomizationsSubPresenter::OnCustomizationSelectedAgain(const class FName customizationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersCustomizationsSubPresenter", "OnCustomizationSelectedAgain");

	Params::LobbyCharactersCustomizationsSubPresenter_OnCustomizationSelectedAgain Parms{};

	Parms.customizationId = customizationId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersCustomizationsSubPresenter.OnCustomizationTimerExpired
// (Final, Native, Private)

void ULobbyCharactersCustomizationsSubPresenter::OnCustomizationTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersCustomizationsSubPresenter", "OnCustomizationTimerExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersCustomizationsSubPresenter.OnFiltersChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FStoreCharactersFiltersData&filtersData                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyCharactersCustomizationsSubPresenter::OnFiltersChanged(const struct FStoreCharactersFiltersData& filtersData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersCustomizationsSubPresenter", "OnFiltersChanged");

	Params::LobbyCharactersCustomizationsSubPresenter_OnFiltersChanged Parms{};

	Parms.filtersData = std::move(filtersData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersCustomizationsSubPresenter.OnPresetSelected
// (Final, Native, Private)
// Parameters:
// const int32                             presetId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersCustomizationsSubPresenter::OnPresetSelected(const int32 presetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersCustomizationsSubPresenter", "OnPresetSelected");

	Params::LobbyCharactersCustomizationsSubPresenter_OnPresetSelected Parms{};

	Parms.presetId = presetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersCustomizationsSubPresenter.OnSearchBarTextChanged
// (Final, Native, Private)
// Parameters:
// const class FString&                    enteredText                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersCustomizationsSubPresenter::OnSearchBarTextChanged(const class FString& enteredText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersCustomizationsSubPresenter", "OnSearchBarTextChanged");

	Params::LobbyCharactersCustomizationsSubPresenter_OnSearchBarTextChanged Parms{};

	Parms.enteredText = std::move(enteredText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersCustomizationsSubPresenter.OnSortingChanged
// (Final, Native, Private)
// Parameters:
// const ESortingOption                    sortingType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESortingOrder                     sortingOrder                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersCustomizationsSubPresenter::OnSortingChanged(const ESortingOption sortingType, const ESortingOrder sortingOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersCustomizationsSubPresenter", "OnSortingChanged");

	Params::LobbyCharactersCustomizationsSubPresenter_OnSortingChanged Parms{};

	Parms.sortingType = sortingType;
	Parms.sortingOrder = sortingOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersListSubPresenter.OnCharacterSelected
// (Final, Native, Private)
// Parameters:
// const int32                             characterIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersListSubPresenter::OnCharacterSelected(const int32 characterIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersListSubPresenter", "OnCharacterSelected");

	Params::LobbyCharactersListSubPresenter_OnCharacterSelected Parms{};

	Parms.characterIndex = characterIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersListSubPresenter.OnClearFiltersClicked
// (Final, Native, Private)

void ULobbyCharactersListSubPresenter::OnClearFiltersClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersListSubPresenter", "OnClearFiltersClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersListSubPresenter.OnFiltersChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FStoreCharactersFiltersData&filtersData                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyCharactersListSubPresenter::OnFiltersChanged(const struct FStoreCharactersFiltersData& filtersData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersListSubPresenter", "OnFiltersChanged");

	Params::LobbyCharactersListSubPresenter_OnFiltersChanged Parms{};

	Parms.filtersData = std::move(filtersData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersListSubPresenter.OnSearchBarTextChanged
// (Final, Native, Private)
// Parameters:
// const class FString&                    enteredText                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersListSubPresenter::OnSearchBarTextChanged(const class FString& enteredText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersListSubPresenter", "OnSearchBarTextChanged");

	Params::LobbyCharactersListSubPresenter_OnSearchBarTextChanged Parms{};

	Parms.enteredText = std::move(enteredText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersListSubPresenter.OnSortingChanged
// (Final, Native, Private)
// Parameters:
// const ESortingOption                    sortingType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESortingOrder                     sortingOrder                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersListSubPresenter::OnSortingChanged(const ESortingOption sortingType, const ESortingOrder sortingOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersListSubPresenter", "OnSortingChanged");

	Params::LobbyCharactersListSubPresenter_OnSortingChanged Parms{};

	Parms.sortingType = sortingType;
	Parms.sortingOrder = sortingOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubPresenter.OnAnimationPreviewComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UAnimationPreviewSubsystem*       AnimationPreviewSubsystem                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAnimationPreviewRequest&  Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    completedSuccessfully                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersSubPresenter::OnAnimationPreviewComplete(class UAnimationPreviewSubsystem* AnimationPreviewSubsystem, const struct FAnimationPreviewRequest& Request, bool completedSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubPresenter", "OnAnimationPreviewComplete");

	Params::LobbyCharactersSubPresenter_OnAnimationPreviewComplete Parms{};

	Parms.AnimationPreviewSubsystem = AnimationPreviewSubsystem;
	Parms.Request = std::move(Request);
	Parms.completedSuccessfully = completedSuccessfully;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubPresenter.OnCustomizationEquipAllClicked
// (Final, Native, Private)

void ULobbyCharactersSubPresenter::OnCustomizationEquipAllClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubPresenter", "OnCustomizationEquipAllClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubPresenter.OnCustomizationSelectAllClicked
// (Final, Native, Private)

void ULobbyCharactersSubPresenter::OnCustomizationSelectAllClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubPresenter", "OnCustomizationSelectAllClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubPresenter.OnItemAvailabilityBannerClicked
// (Final, Native, Private)

void ULobbyCharactersSubPresenter::OnItemAvailabilityBannerClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubPresenter", "OnItemAvailabilityBannerClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubPresenter.OnItemEquipClicked
// (Final, Native, Private)

void ULobbyCharactersSubPresenter::OnItemEquipClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubPresenter", "OnItemEquipClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubPresenter.OnItemUnlockClicked
// (Final, Native, Private)
// Parameters:
// ECurrencyType                           currencyType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersSubPresenter::OnItemUnlockClicked(ECurrencyType currencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubPresenter", "OnItemUnlockClicked");

	Params::LobbyCharactersSubPresenter_OnItemUnlockClicked Parms{};

	Parms.currencyType = currencyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubPresenter.OnNotEnoughCurrencyModalButtonClicked
// (Final, Native, Private)
// Parameters:
// const ECurrencyType                     currencyType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersSubPresenter::OnNotEnoughCurrencyModalButtonClicked(const ECurrencyType currencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubPresenter", "OnNotEnoughCurrencyModalButtonClicked");

	Params::LobbyCharactersSubPresenter_OnNotEnoughCurrencyModalButtonClicked Parms{};

	Parms.currencyType = currencyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubPresenter.OnPlayMoriClicked
// (Final, Native, Private)

void ULobbyCharactersSubPresenter::OnPlayMoriClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubPresenter", "OnPlayMoriClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubPresenter.OnPlaySecondMoriClicked
// (Final, Native, Private)

void ULobbyCharactersSubPresenter::OnPlaySecondMoriClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubPresenter", "OnPlaySecondMoriClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubPresenter.OnSubTabSelected
// (Final, Native, Private)
// Parameters:
// ELobbyCharactersMenuState               selectedTabId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersSubPresenter::OnSubTabSelected(ELobbyCharactersMenuState selectedTabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubPresenter", "OnSubTabSelected");

	Params::LobbyCharactersSubPresenter_OnSubTabSelected Parms{};

	Parms.selectedTabId = selectedTabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubPresenter.OnZoomCharmClicked
// (Final, Native, Private)

void ULobbyCharactersSubPresenter::OnZoomCharmClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubPresenter", "OnZoomCharmClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyCharactersSubPresenter.PlayMoriAnimation
// (Final, Native, Private)
// Parameters:
// const EMoriPreviewVariant               moriPreviewVariant                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyCharactersSubPresenter::PlayMoriAnimation(const EMoriPreviewVariant moriPreviewVariant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCharactersSubPresenter", "PlayMoriAnimation");

	Params::LobbyCharactersSubPresenter_PlayMoriAnimation Parms{};

	Parms.moriPreviewVariant = moriPreviewVariant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyLoadoutSubPresenter.OnLoadoutInventorySlotClick
// (Final, Native, Private)
// Parameters:
// const ELoadoutSlot                      slotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       ItemId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyLoadoutSubPresenter::OnLoadoutInventorySlotClick(const ELoadoutSlot slotIndex, const class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyLoadoutSubPresenter", "OnLoadoutInventorySlotClick");

	Params::LobbyLoadoutSubPresenter_OnLoadoutInventorySlotClick Parms{};

	Parms.slotIndex = slotIndex;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyLoadoutSubPresenter.OnLoadoutSlotSelected
// (Final, Native, Private)
// Parameters:
// const ELoadoutSlot                      slotSelected                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyLoadoutSubPresenter::OnLoadoutSlotSelected(const ELoadoutSlot slotSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyLoadoutSubPresenter", "OnLoadoutSlotSelected");

	Params::LobbyLoadoutSubPresenter_OnLoadoutSlotSelected Parms{};

	Parms.slotSelected = slotSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyLoadoutSubPresenter.OnPresetSelected
// (Final, Native, Private)
// Parameters:
// const int32                             presetId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyLoadoutSubPresenter::OnPresetSelected(const int32 presetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyLoadoutSubPresenter", "OnPresetSelected");

	Params::LobbyLoadoutSubPresenter_OnPresetSelected Parms{};

	Parms.presetId = presetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyLoadoutSubPresenter.OnSearchBarTextChanged
// (Final, Native, Private, Const)
// Parameters:
// const class FString&                    String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyLoadoutSubPresenter::OnSearchBarTextChanged(const class FString& String) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyLoadoutSubPresenter", "OnSearchBarTextChanged");

	Params::LobbyLoadoutSubPresenter_OnSearchBarTextChanged Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPerkPreviewerSubPresenter.OnGameDataUpdated
// (Final, Native, Private)
// Parameters:
// class ADBDGameState*                    GameState                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyPerkPreviewerSubPresenter::OnGameDataUpdated(class ADBDGameState* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPerkPreviewerSubPresenter", "OnGameDataUpdated");

	Params::LobbyPerkPreviewerSubPresenter_OnGameDataUpdated Parms{};

	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPerkPreviewerSubPresenter.OnLocalPlayerDataUpdated
// (Final, Native, Private)
// Parameters:
// class ADBDPlayerState*                  PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyPerkPreviewerSubPresenter::OnLocalPlayerDataUpdated(class ADBDPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPerkPreviewerSubPresenter", "OnLocalPlayerDataUpdated");

	Params::LobbyPerkPreviewerSubPresenter_OnLocalPlayerDataUpdated Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPerkPreviewerSubPresenter.UpdateData
// (Final, Native, Public)

void ULobbyPerkPreviewerSubPresenter::UpdateData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPerkPreviewerSubPresenter", "UpdateData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPlayerListSubPresenter.OnInvitePlayer
// (Final, Native, Public)

void ULobbyPlayerListSubPresenter::OnInvitePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPlayerListSubPresenter", "OnInvitePlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPlayerListSubPresenter.OnPlayerSocialOptionClicked
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FPlayerSocialOptionViewData&playerSocialOptionData                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULobbyPlayerListSubPresenter::OnPlayerSocialOptionClicked(const struct FPlayerSocialOptionViewData& playerSocialOptionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPlayerListSubPresenter", "OnPlayerSocialOptionClicked");

	Params::LobbyPlayerListSubPresenter_OnPlayerSocialOptionClicked Parms{};

	Parms.playerSocialOptionData = std::move(playerSocialOptionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPlayerListSubPresenter.OnPlayerStatusClicked
// (Final, Native, Protected)
// Parameters:
// const class FString&                    PlayerId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyPlayerListSubPresenter::OnPlayerStatusClicked(const class FString& PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPlayerListSubPresenter", "OnPlayerStatusClicked");

	Params::LobbyPlayerListSubPresenter_OnPlayerStatusClicked Parms{};

	Parms.PlayerId = std::move(PlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnArchivesClicked
// (Final, Native, Private)

void ULobbyPresenter::OnArchivesClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnArchivesClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnBack
// (Final, Native, Private)

void ULobbyPresenter::OnBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnBeginnerModeUpdated
// (Final, Native, Private)
// Parameters:
// bool                                    beginnerModeActive                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyPresenter::OnBeginnerModeUpdated(bool beginnerModeActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnBeginnerModeUpdated");

	Params::LobbyPresenter_OnBeginnerModeUpdated Parms{};

	Parms.beginnerModeActive = beginnerModeActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnBloodPointBulkSpendingButtonClicked
// (Final, Native, Private)

void ULobbyPresenter::OnBloodPointBulkSpendingButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnBloodPointBulkSpendingButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnBloodWebButtonClicked
// (Final, Native, Private)

void ULobbyPresenter::OnBloodWebButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnBloodWebButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnChallengesButtonClicked
// (Final, Native, Private)

void ULobbyPresenter::OnChallengesButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnChallengesButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnCharacterButtonClicked
// (Final, Native, Private)

void ULobbyPresenter::OnCharacterButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnCharacterButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnDisplayStandRotated
// (Final, Native, Private)
// Parameters:
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyPresenter::OnDisplayStandRotated(float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnDisplayStandRotated");

	Params::LobbyPresenter_OnDisplayStandRotated Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnEventButtonClicked
// (Final, Native, Private)

void ULobbyPresenter::OnEventButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnEventButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnFinalCountdownBeforeTrialStarted
// (Final, Native, Private)

void ULobbyPresenter::OnFinalCountdownBeforeTrialStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnFinalCountdownBeforeTrialStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnFooterStateChanged
// (Final, Native, Private)

void ULobbyPresenter::OnFooterStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnFooterStateChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnFriendsClicked
// (Final, Native, Private)

void ULobbyPresenter::OnFriendsClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnFriendsClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnInboxClicked
// (Final, Native, Private)

void ULobbyPresenter::OnInboxClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnInboxClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnLevelUpAnimationDone
// (Final, Native, Private)

void ULobbyPresenter::OnLevelUpAnimationDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnLevelUpAnimationDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnLoadoutButtonClicked
// (Final, Native, Private)

void ULobbyPresenter::OnLoadoutButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnLoadoutButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnLobbyFinalCountdownTimeChanged
// (Final, Native, Private)

void ULobbyPresenter::OnLobbyFinalCountdownTimeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnLobbyFinalCountdownTimeChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnLobbySubPageChanged
// (Final, Native, Private)

void ULobbyPresenter::OnLobbySubPageChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnLobbySubPageChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnMatchManagementClicked
// (Final, Native, Private)

void ULobbyPresenter::OnMatchManagementClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnMatchManagementClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnRoleButtonClicked
// (Final, Native, Private)

void ULobbyPresenter::OnRoleButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnRoleButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnSettingsClicked
// (Final, Native, Private)

void ULobbyPresenter::OnSettingsClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnSettingsClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnShrineButtonClicked
// (Final, Native, Private)

void ULobbyPresenter::OnShrineButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnShrineButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.OnStoreButtonClicked
// (Final, Native, Private)

void ULobbyPresenter::OnStoreButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "OnStoreButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.LobbyPresenter.RedirectToLoadout
// (Final, Native, Private)
// Parameters:
// const ELoadoutSlot                      slotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULobbyPresenter::RedirectToLoadout(const ELoadoutSlot slotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyPresenter", "RedirectToLoadout");

	Params::LobbyPresenter_RedirectToLoadout Parms{};

	Parms.slotIndex = slotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnArchivesButtonClicked
// (Final, Native, Private)

void UMainMenuPresenter::OnArchivesButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnArchivesButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnChallengesButtonClicked
// (Final, Native, Private)

void UMainMenuPresenter::OnChallengesButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnChallengesButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnChangeAccountClicked
// (Final, Native, Private)

void UMainMenuPresenter::OnChangeAccountClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnChangeAccountClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnCreatePartyCompleted
// (Final, Native, Private)
// Parameters:
// bool                                    Success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             idToTransitionTo                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainMenuPresenter::OnCreatePartyCompleted(bool Success, const int32 idToTransitionTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnCreatePartyCompleted");

	Params::MainMenuPresenter_OnCreatePartyCompleted Parms{};

	Parms.Success = Success;
	Parms.idToTransitionTo = idToTransitionTo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnCreditsButtonClicked
// (Final, Native, Private)

void UMainMenuPresenter::OnCreditsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnCreditsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnEventButtonClicked
// (Final, Native, Private)

void UMainMenuPresenter::OnEventButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnEventButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnExitButtonClicked
// (Final, Native, Private)

void UMainMenuPresenter::OnExitButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnExitButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnFriendsButtonClicked
// (Final, Native, Private)

void UMainMenuPresenter::OnFriendsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnFriendsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnInboxButtonClicked
// (Final, Native, Private)

void UMainMenuPresenter::OnInboxButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnInboxButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnLTESubMenuOpeningChanged
// (Final, Native, Private)
// Parameters:
// EMenuOpened                             menuOpened                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainMenuPresenter::OnLTESubMenuOpeningChanged(EMenuOpened menuOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnLTESubMenuOpeningChanged");

	Params::MainMenuPresenter_OnLTESubMenuOpeningChanged Parms{};

	Parms.menuOpened = menuOpened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnMainMenuFadeCompleted
// (Final, Native, Private)
// Parameters:
// EDBDCameraViewType                      View                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainMenuPresenter::OnMainMenuFadeCompleted(EDBDCameraViewType View)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnMainMenuFadeCompleted");

	Params::MainMenuPresenter_OnMainMenuFadeCompleted Parms{};

	Parms.View = View;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnPlayCustomButtonClicked
// (Final, Native, Private)
// Parameters:
// EGameType                               gameType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainMenuPresenter::OnPlayCustomButtonClicked(EGameType gameType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnPlayCustomButtonClicked");

	Params::MainMenuPresenter_OnPlayCustomButtonClicked Parms{};

	Parms.gameType = gameType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnPlayKillerButtonClicked
// (Final, Native, Private)
// Parameters:
// EGameType                               gameType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainMenuPresenter::OnPlayKillerButtonClicked(EGameType gameType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnPlayKillerButtonClicked");

	Params::MainMenuPresenter_OnPlayKillerButtonClicked Parms{};

	Parms.gameType = gameType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnPlayLimitedTimeEventKillerButtonClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// EGameType                               gameType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      eventID                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainMenuPresenter::OnPlayLimitedTimeEventKillerButtonClicked(EGameType gameType, const class FName& eventID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnPlayLimitedTimeEventKillerButtonClicked");

	Params::MainMenuPresenter_OnPlayLimitedTimeEventKillerButtonClicked Parms{};

	Parms.gameType = gameType;
	Parms.eventID = eventID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnPlayLimitedTimeEventSurvivorButtonClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// EGameType                               gameType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      eventID                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainMenuPresenter::OnPlayLimitedTimeEventSurvivorButtonClicked(EGameType gameType, const class FName& eventID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnPlayLimitedTimeEventSurvivorButtonClicked");

	Params::MainMenuPresenter_OnPlayLimitedTimeEventSurvivorButtonClicked Parms{};

	Parms.gameType = gameType;
	Parms.eventID = eventID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnPlaySurvivorButtonClicked
// (Final, Native, Private)
// Parameters:
// EGameType                               gameType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMainMenuPresenter::OnPlaySurvivorButtonClicked(EGameType gameType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnPlaySurvivorButtonClicked");

	Params::MainMenuPresenter_OnPlaySurvivorButtonClicked Parms{};

	Parms.gameType = gameType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnRiftButtonClicked
// (Final, Native, Private)

void UMainMenuPresenter::OnRiftButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnRiftButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnSettingsButtonClicked
// (Final, Native, Private)

void UMainMenuPresenter::OnSettingsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnSettingsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnStoreButtonClicked
// (Final, Native, Private)

void UMainMenuPresenter::OnStoreButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnStoreButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MainMenuPresenter.OnTutorialButtonClicked
// (Final, Native, Private)

void UMainMenuPresenter::OnTutorialButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainMenuPresenter", "OnTutorialButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MarketingInvitationPopupPresenter.OnInstructionButtonClicked
// (Final, Native, Private, BlueprintCallable)

void UMarketingInvitationPopupPresenter::OnInstructionButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketingInvitationPopupPresenter", "OnInstructionButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MarketingInvitationPopupPresenter.OnOptOutToggleButtonClicked
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// const bool                              isOptOutToggleActive                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarketingInvitationPopupPresenter::OnOptOutToggleButtonClicked(const bool isOptOutToggleActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketingInvitationPopupPresenter", "OnOptOutToggleButtonClicked");

	Params::MarketingInvitationPopupPresenter_OnOptOutToggleButtonClicked Parms{};

	Parms.isOptOutToggleActive = isOptOutToggleActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MarketingInvitationPopupPresenter.OnWatchVideoClicked
// (Final, Native, Private)

void UMarketingInvitationPopupPresenter::OnWatchVideoClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarketingInvitationPopupPresenter", "OnWatchVideoClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.MatchmakingFlowPresenter.ShouldDisplayWidget
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchmakingFlowPresenter::ShouldDisplayWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingFlowPresenter", "ShouldDisplayWidget");

	Params::MatchmakingFlowPresenter_ShouldDisplayWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.NewRiftPopupPresenter.OnQuestButtonClicked
// (Final, Native, Private)

void UNewRiftPopupPresenter::OnQuestButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewRiftPopupPresenter", "OnQuestButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.NewRiftPopupPresenter.OnReplayButtonClicked
// (Final, Native, Private)

void UNewRiftPopupPresenter::OnReplayButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewRiftPopupPresenter", "OnReplayButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.NewRiftPopupPresenter.OnRiftButtonClicked
// (Final, Native, Private)

void UNewRiftPopupPresenter::OnRiftButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewRiftPopupPresenter", "OnRiftButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.NewsPresenter.OnBackButtonClicked
// (Final, Native, Private)

void UNewsPresenter::OnBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewsPresenter", "OnBackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.NewsPresenter.OnRedirectClicked
// (Final, Native, Private)

void UNewsPresenter::OnRedirectClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewsPresenter", "OnRedirectClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.NewsPresenter.OnTabSelected
// (Final, Native, Private)
// Parameters:
// const int32                             selectedTab                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNewsPresenter::OnTabSelected(const int32 selectedTab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewsPresenter", "OnTabSelected");

	Params::NewsPresenter_OnTabSelected Parms{};

	Parms.selectedTab = selectedTab;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.OnboardingMenuPresenter.OnBackAction
// (Final, Native, Private)

void UOnboardingMenuPresenter::OnBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnboardingMenuPresenter", "OnBackAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.OnboardingMenuPresenter.OnChangeAccountAction
// (Final, Native, Private)

void UOnboardingMenuPresenter::OnChangeAccountAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnboardingMenuPresenter", "OnChangeAccountAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.OnboardingMenuPresenter.OnFirstOnboardingStepsDone
// (Final, Native, Private)
// Parameters:
// bool                                    isFirstStepsDone                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnboardingMenuPresenter::OnFirstOnboardingStepsDone(bool isFirstStepsDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnboardingMenuPresenter", "OnFirstOnboardingStepsDone");

	Params::OnboardingMenuPresenter_OnFirstOnboardingStepsDone Parms{};

	Parms.isFirstStepsDone = isFirstStepsDone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.OnboardingMenuPresenter.OnMenuTabSelected
// (Final, Native, Private)
// Parameters:
// EOnboardingMenuState                    menuState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnboardingMenuPresenter::OnMenuTabSelected(EOnboardingMenuState menuState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnboardingMenuPresenter", "OnMenuTabSelected");

	Params::OnboardingMenuPresenter_OnMenuTabSelected Parms{};

	Parms.menuState = menuState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.OnboardingMenuPresenter.OnMenuTabSelectedAgain
// (Final, Native, Private)
// Parameters:
// EOnboardingMenuState                    menuState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnboardingMenuPresenter::OnMenuTabSelectedAgain(EOnboardingMenuState menuState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnboardingMenuPresenter", "OnMenuTabSelectedAgain");

	Params::OnboardingMenuPresenter_OnMenuTabSelectedAgain Parms{};

	Parms.menuState = menuState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.OnboardingMenuPresenter.OnQuitGameAction
// (Final, Native, Private)

void UOnboardingMenuPresenter::OnQuitGameAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnboardingMenuPresenter", "OnQuitGameAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.OnboardingMenuPresenter.OnSettingsAction
// (Final, Native, Private)

void UOnboardingMenuPresenter::OnSettingsAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnboardingMenuPresenter", "OnSettingsAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.OnboardingMenuPresenter.OnSetUIEnabled
// (Final, Native, Private)
// Parameters:
// bool                                    Enabled                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnboardingMenuPresenter::OnSetUIEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnboardingMenuPresenter", "OnSetUIEnabled");

	Params::OnboardingMenuPresenter_OnSetUIEnabled Parms{};

	Parms.Enabled = Enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.OnboardingTutorialSubPresenter.OnSelectTutorial
// (Final, Native, Private)
// Parameters:
// const class FString&                    stepId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    tutorialId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnboardingTutorialSubPresenter::OnSelectTutorial(const class FString& stepId, const class FString& tutorialId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnboardingTutorialSubPresenter", "OnSelectTutorial");

	Params::OnboardingTutorialSubPresenter_OnSelectTutorial Parms{};

	Parms.stepId = std::move(stepId);
	Parms.tutorialId = std::move(tutorialId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PawnObserver.OnLocallyObservedChanged
// (Final, Native, Public)

void UPawnObserver::OnLocallyObservedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PawnObserver", "OnLocallyObservedChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PawnObserver.OnPawnControllerSet
// (Final, Native, Private)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      OldController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      NewController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPawnObserver::OnPawnControllerSet(class APawn* Pawn, class AController* OldController, class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PawnObserver", "OnPawnControllerSet");

	Params::PawnObserver_OnPawnControllerSet Parms{};

	Parms.Pawn = Pawn;
	Parms.OldController = OldController;
	Parms.NewController = NewController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.FocusPlayerProfile
// (Final, Native, Private)
// Parameters:
// const uint8                             Filter                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             currencyFilter                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerProfilePresenter::FocusPlayerProfile(const uint8 Filter, const uint8 currencyFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "FocusPlayerProfile");

	Params::PlayerProfilePresenter_FocusPlayerProfile Parms{};

	Parms.Filter = Filter;
	Parms.currencyFilter = currencyFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.HidePlayerProfile
// (Final, Native, Private)

void UPlayerProfilePresenter::HidePlayerProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "HidePlayerProfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.OnPlayerProfileClicked
// (Final, Native, Private)

void UPlayerProfilePresenter::OnPlayerProfileClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "OnPlayerProfileClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.OnPlayerProfileCurrencyClicked
// (Final, Native, Private)
// Parameters:
// const ECurrencyType                     currencyType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerProfilePresenter::OnPlayerProfileCurrencyClicked(const ECurrencyType currencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "OnPlayerProfileCurrencyClicked");

	Params::PlayerProfilePresenter_OnPlayerProfileCurrencyClicked Parms{};

	Parms.currencyType = currencyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.OnResetPlayerProfileCurrencyFilter
// (Final, Native, Private)

void UPlayerProfilePresenter::OnResetPlayerProfileCurrencyFilter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "OnResetPlayerProfileCurrencyFilter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.OnResetPlayerProfileFilter
// (Final, Native, Private)

void UPlayerProfilePresenter::OnResetPlayerProfileFilter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "OnResetPlayerProfileFilter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.OnSpecialEventStatusChanged
// (Final, Native, Private)
// Parameters:
// class FName                             SpecialEventId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESpecialEventStatus                     specialEventStatus                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerProfilePresenter::OnSpecialEventStatusChanged(class FName SpecialEventId, ESpecialEventStatus specialEventStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "OnSpecialEventStatusChanged");

	Params::PlayerProfilePresenter_OnSpecialEventStatusChanged Parms{};

	Parms.SpecialEventId = SpecialEventId;
	Parms.specialEventStatus = specialEventStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.OnUpdatePlayerProfileCurrencyFilter
// (Final, Native, Private)
// Parameters:
// const uint8                             currencyFilter                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerProfilePresenter::OnUpdatePlayerProfileCurrencyFilter(const uint8 currencyFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "OnUpdatePlayerProfileCurrencyFilter");

	Params::PlayerProfilePresenter_OnUpdatePlayerProfileCurrencyFilter Parms{};

	Parms.currencyFilter = currencyFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.OnUpdatePlayerProfileFilter
// (Final, Native, Private)
// Parameters:
// const uint8                             Filter                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerProfilePresenter::OnUpdatePlayerProfileFilter(const uint8 Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "OnUpdatePlayerProfileFilter");

	Params::PlayerProfilePresenter_OnUpdatePlayerProfileFilter Parms{};

	Parms.Filter = Filter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.OnWalletUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<struct FShopWalletUpdate>& walletUpdates                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayerProfilePresenter::OnWalletUpdated(const TArray<struct FShopWalletUpdate>& walletUpdates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "OnWalletUpdated");

	Params::PlayerProfilePresenter_OnWalletUpdated Parms{};

	Parms.walletUpdates = std::move(walletUpdates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.RefreshPlayerCard
// (Final, Native, Private)

void UPlayerProfilePresenter::RefreshPlayerCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "RefreshPlayerCard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.RefreshWallet
// (Final, Native, Private)

void UPlayerProfilePresenter::RefreshWallet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "RefreshWallet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.SetSpecialEventCurrency
// (Final, Native, Private)
// Parameters:
// const ECurrencyType                     specialEventCurrencyType                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerProfilePresenter::SetSpecialEventCurrency(const ECurrencyType specialEventCurrencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "SetSpecialEventCurrency");

	Params::PlayerProfilePresenter_SetSpecialEventCurrency Parms{};

	Parms.specialEventCurrencyType = specialEventCurrencyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.UnfocusPlayerProfile
// (Final, Native, Private)

void UPlayerProfilePresenter::UnfocusPlayerProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "UnfocusPlayerProfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PlayerProfilePresenter.GetPlayerName
// (Final, Native, Private, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlayerProfilePresenter::GetPlayerName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "GetPlayerName");

	Params::PlayerProfilePresenter_GetPlayerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.PlayerProfilePresenter.OnUpdatePlayerCardAnimationMode
// (Final, Native, Private, Const)

void UPlayerProfilePresenter::OnUpdatePlayerCardAnimationMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerProfilePresenter", "OnUpdatePlayerCardAnimationMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PresenterManager.OnLoadingTransition
// (Final, Native, Private)
// Parameters:
// const ELoadingTransitionType            transitionType                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPresenterManager::OnLoadingTransition(const ELoadingTransitionType transitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PresenterManager", "OnLoadingTransition");

	Params::PresenterManager_OnLoadingTransition Parms{};

	Parms.transitionType = transitionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PresenterManager.OnPlayerStateChanged
// (Final, Native, Private)
// Parameters:
// const class APlayerState*               PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPresenterManager::OnPlayerStateChanged(const class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PresenterManager", "OnPlayerStateChanged");

	Params::PresenterManager_OnPlayerStateChanged Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.PresenterManager.OnViewportCreated
// (Final, Native, Private)

void UPresenterManager::OnViewportCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PresenterManager", "OnViewportCreated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ProfileMenuCustomizationSubPresenter.OnCustomizationSortingChanged
// (Final, Native, Private)
// Parameters:
// const ESortingOption                    itemSorting                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESortingOrder                     sortingOrder                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileMenuCustomizationSubPresenter::OnCustomizationSortingChanged(const ESortingOption itemSorting, const ESortingOrder sortingOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileMenuCustomizationSubPresenter", "OnCustomizationSortingChanged");

	Params::ProfileMenuCustomizationSubPresenter_OnCustomizationSortingChanged Parms{};

	Parms.itemSorting = itemSorting;
	Parms.sortingOrder = sortingOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ProfileMenuCustomizationSubPresenter.OnEquipButtonClicked
// (Final, Native, Private)

void UProfileMenuCustomizationSubPresenter::OnEquipButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileMenuCustomizationSubPresenter", "OnEquipButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ProfileMenuCustomizationSubPresenter.OnRewardGridItemClicked
// (Final, Native, Private)
// Parameters:
// const int32                             selectedIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileMenuCustomizationSubPresenter::OnRewardGridItemClicked(const int32 selectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileMenuCustomizationSubPresenter", "OnRewardGridItemClicked");

	Params::ProfileMenuCustomizationSubPresenter_OnRewardGridItemClicked Parms{};

	Parms.selectedIndex = selectedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ProfileMenuCustomizationSubPresenter.OnSearchBarTextChanged
// (Final, Native, Private)
// Parameters:
// const class FString&                    enteredText                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileMenuCustomizationSubPresenter::OnSearchBarTextChanged(const class FString& enteredText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileMenuCustomizationSubPresenter", "OnSearchBarTextChanged");

	Params::ProfileMenuCustomizationSubPresenter_OnSearchBarTextChanged Parms{};

	Parms.enteredText = std::move(enteredText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ProfileMenuPresenter.OnBackButtonClicked
// (Final, Native, Private)

void UProfileMenuPresenter::OnBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileMenuPresenter", "OnBackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ProfileMenuPresenter.OnSettingsButtonClicked
// (Final, Native, Private)

void UProfileMenuPresenter::OnSettingsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileMenuPresenter", "OnSettingsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ProfileMenuPresenter.SetMenuState
// (Final, Native, Private)
// Parameters:
// EProfileMenuState                       menuState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileMenuPresenter::SetMenuState(EProfileMenuState menuState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileMenuPresenter", "SetMenuState");

	Params::ProfileMenuPresenter_SetMenuState Parms{};

	Parms.menuState = menuState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnBackButtonClicked
// (Final, Native, Private)

void URiftPresenter::OnBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnBackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnClickPurchaseInfiniteTiers
// (Final, Native, Private)

void URiftPresenter::OnClickPurchaseInfiniteTiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnClickPurchaseInfiniteTiers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnClickPurchasePremiumPass
// (Final, Native, Private)

void URiftPresenter::OnClickPurchasePremiumPass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnClickPurchasePremiumPass");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnClickPurchaseTiers
// (Final, Native, Private)

void URiftPresenter::OnClickPurchaseTiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnClickPurchaseTiers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnDisplayStandRotationDelegate
// (Final, Native, Private)
// Parameters:
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URiftPresenter::OnDisplayStandRotationDelegate(float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnDisplayStandRotationDelegate");

	Params::RiftPresenter_OnDisplayStandRotationDelegate Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnGoToQuestsButtonClicked
// (Final, Native, Private)

void URiftPresenter::OnGoToQuestsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnGoToQuestsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnInfoButtonClicked
// (Final, Native, Private)

void URiftPresenter::OnInfoButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnInfoButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnPlayMoriClicked
// (Final, Native, Private)

void URiftPresenter::OnPlayMoriClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnPlayMoriClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnPlaySecondMoriClicked
// (Final, Native, Private)

void URiftPresenter::OnPlaySecondMoriClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnPlaySecondMoriClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnPremiumPassPurchased
// (Final, Native, Private)

void URiftPresenter::OnPremiumPassPurchased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnPremiumPassPurchased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnRewardCurrencyClicked
// (Final, Native, Private)
// Parameters:
// const ECurrencyType                     currencyType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URiftPresenter::OnRewardCurrencyClicked(const ECurrencyType currencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnRewardCurrencyClicked");

	Params::RiftPresenter_OnRewardCurrencyClicked Parms{};

	Parms.currencyType = currencyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnRewardItemClicked
// (Final, Native, Private)
// Parameters:
// const class FName                       ItemId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URiftPresenter::OnRewardItemClicked(const class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnRewardItemClicked");

	Params::RiftPresenter_OnRewardItemClicked Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnRiftPackButtonClicked
// (Final, Native, Private)

void URiftPresenter::OnRiftPackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnRiftPackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnSettingsButtonClicked
// (Final, Native, Private)

void URiftPresenter::OnSettingsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnSettingsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RiftPresenter.OnToggleOutfitDisplay
// (Final, Native, Private)

void URiftPresenter::OnToggleOutfitDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiftPresenter", "OnToggleOutfitDisplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RootWidget.GetRootCanvasPanel
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UCanvasPanel*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCanvasPanel* URootWidget::GetRootCanvasPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RootWidget", "GetRootCanvasPanel");

	Params::RootWidget_GetRootCanvasPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.RootWidget.OnFocused
// (Native, Event, Public, BlueprintEvent)

void URootWidget::OnFocused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RootWidget", "OnFocused");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.RootWidget.OnUnfocused
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const float                             Opacity                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URootWidget::OnUnfocused(const float Opacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RootWidget", "OnUnfocused");

	Params::RootWidget_OnUnfocused Parms{};

	Parms.Opacity = Opacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.SettingsMatchDetailsSubPresenter.OnPlayerInfoClicked
// (Final, Native, Protected)
// Parameters:
// const class FString&                    PlayerId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USettingsMatchDetailsSubPresenter::OnPlayerInfoClicked(const class FString& PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsMatchDetailsSubPresenter", "OnPlayerInfoClicked");

	Params::SettingsMatchDetailsSubPresenter_OnPlayerInfoClicked Parms{};

	Parms.PlayerId = std::move(PlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.SettingsPresenter.OnBackInputSwitcherTriggered
// (Final, Native, Protected)

void USettingsPresenter::OnBackInputSwitcherTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsPresenter", "OnBackInputSwitcherTriggered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.SettingsPresenter.OnQuitInputSwitcherTriggered
// (Final, Native, Protected)

void USettingsPresenter::OnQuitInputSwitcherTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsPresenter", "OnQuitInputSwitcherTriggered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.SettingsPresenter.OnResetDefaultsInputSwitcherTriggered
// (Final, Native, Protected)

void USettingsPresenter::OnResetDefaultsInputSwitcherTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsPresenter", "OnResetDefaultsInputSwitcherTriggered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.SettingsPresenter.OnSetScrollPromptVisibility
// (Final, Native, Protected)
// Parameters:
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USettingsPresenter::OnSetScrollPromptVisibility(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsPresenter", "OnSetScrollPromptVisibility");

	Params::SettingsPresenter_OnSetScrollPromptVisibility Parms{};

	Parms.IsVisible = IsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.SettingsPresenter.OnTabEntered
// (Final, Native, Protected)
// Parameters:
// const EOverlayTabs                      Tab                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESettingsCategory                 category                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USettingsPresenter::OnTabEntered(const EOverlayTabs Tab, const ESettingsCategory category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsPresenter", "OnTabEntered");

	Params::SettingsPresenter_OnTabEntered Parms{};

	Parms.Tab = Tab;
	Parms.category = category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ShrineOfSecretsPresenter.OnBackButtonClicked
// (Final, Native, Private)

void UShrineOfSecretsPresenter::OnBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShrineOfSecretsPresenter", "OnBackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ShrineOfSecretsPresenter.OnItemBuyCompleted
// (Final, Native, Private)
// Parameters:
// const bool                              Success                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UShrineOfSecretsPresenter::OnItemBuyCompleted(const bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShrineOfSecretsPresenter", "OnItemBuyCompleted");

	Params::ShrineOfSecretsPresenter_OnItemBuyCompleted Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ShrineOfSecretsPresenter.OnPurchaseButtonClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FShrineOfSecretsItemViewData&ShrineOfSecretsItemViewData                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UShrineOfSecretsPresenter::OnPurchaseButtonClicked(const struct FShrineOfSecretsItemViewData& ShrineOfSecretsItemViewData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShrineOfSecretsPresenter", "OnPurchaseButtonClicked");

	Params::ShrineOfSecretsPresenter_OnPurchaseButtonClicked Parms{};

	Parms.ShrineOfSecretsItemViewData = std::move(ShrineOfSecretsItemViewData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.SplashPresenter.OnSaveGameFadeOutCompleted
// (Final, Native, Protected)

void USplashPresenter::OnSaveGameFadeOutCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplashPresenter", "OnSaveGameFadeOutCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSubPresenter.OnSubTabSelected
// (Native, Protected)
// Parameters:
// int32                                   subTabId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreSubPresenter::OnSubTabSelected(int32 subTabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSubPresenter", "OnSubTabSelected");

	Params::StoreSubPresenter_OnSubTabSelected Parms{};

	Parms.subTabId = subTabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSubPresenter.OnWalletUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TArray<struct FShopWalletUpdate>& walletUpdates                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreSubPresenter::OnWalletUpdated(const TArray<struct FShopWalletUpdate>& walletUpdates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSubPresenter", "OnWalletUpdated");

	Params::StoreSubPresenter_OnWalletUpdated Parms{};

	Parms.walletUpdates = std::move(walletUpdates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSubPresenter.SetItemSeen
// (Final, Native, Protected)
// Parameters:
// const class FString&                    ItemId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreSubPresenter::SetItemSeen(const class FString& ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSubPresenter", "SetItemSeen");

	Params::StoreSubPresenter_SetItemSeen Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnAnimationPreviewComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UAnimationPreviewSubsystem*       AnimationPreviewSubsystem                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAnimationPreviewRequest&  Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    completedSuccessfully                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnAnimationPreviewComplete(class UAnimationPreviewSubsystem* AnimationPreviewSubsystem, const struct FAnimationPreviewRequest& Request, bool completedSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnAnimationPreviewComplete");

	Params::StoreCharactersSubPresenter_OnAnimationPreviewComplete Parms{};

	Parms.AnimationPreviewSubsystem = AnimationPreviewSubsystem;
	Parms.Request = std::move(Request);
	Parms.completedSuccessfully = completedSuccessfully;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCategorySelected
// (Final, Native, Private)
// Parameters:
// const ECustomizationCategory            category                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCategorySelected(const ECustomizationCategory category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCategorySelected");

	Params::StoreCharactersSubPresenter_OnCategorySelected Parms{};

	Parms.category = category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCategorySelectedAgain
// (Final, Native, Private)
// Parameters:
// const ECustomizationCategory            category                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCategorySelectedAgain(const ECustomizationCategory category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCategorySelectedAgain");

	Params::StoreCharactersSubPresenter_OnCategorySelectedAgain Parms{};

	Parms.category = category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCharactersClearFiltersClicked
// (Final, Native, Private)

void UStoreCharactersSubPresenter::OnCharactersClearFiltersClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCharactersClearFiltersClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCharacterSelected
// (Final, Native, Private)
// Parameters:
// const int32                             characterIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCharacterSelected(const int32 characterIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCharacterSelected");

	Params::StoreCharactersSubPresenter_OnCharacterSelected Parms{};

	Parms.characterIndex = characterIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCharactersFiltersChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FStoreCharactersFiltersData&charactersFilterData                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCharactersFiltersChanged(const struct FStoreCharactersFiltersData& charactersFilterData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCharactersFiltersChanged");

	Params::StoreCharactersSubPresenter_OnCharactersFiltersChanged Parms{};

	Parms.charactersFilterData = std::move(charactersFilterData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCharactersSearchBarTextChanged
// (Final, Native, Private)
// Parameters:
// const class FString&                    enteredText                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCharactersSearchBarTextChanged(const class FString& enteredText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCharactersSearchBarTextChanged");

	Params::StoreCharactersSubPresenter_OnCharactersSearchBarTextChanged Parms{};

	Parms.enteredText = std::move(enteredText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCharactersSortingChanged
// (Final, Native, Private)
// Parameters:
// const ESortingOption                    SortingOption                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESortingOrder                     sortingOrder                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCharactersSortingChanged(const ESortingOption SortingOption, const ESortingOrder sortingOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCharactersSortingChanged");

	Params::StoreCharactersSubPresenter_OnCharactersSortingChanged Parms{};

	Parms.SortingOption = SortingOption;
	Parms.sortingOrder = sortingOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCharacterUnlockCompleted
// (Final, Native, Private)
// Parameters:
// const bool                              Success                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCharacterUnlockCompleted(const bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCharacterUnlockCompleted");

	Params::StoreCharactersSubPresenter_OnCharacterUnlockCompleted Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCharmSlotSelected
// (Final, Native, Private)
// Parameters:
// const int32                             slotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCharmSlotSelected(const int32 slotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCharmSlotSelected");

	Params::StoreCharactersSubPresenter_OnCharmSlotSelected Parms{};

	Parms.slotIndex = slotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCustomizationEquipAllClicked
// (Final, Native, Private)

void UStoreCharactersSubPresenter::OnCustomizationEquipAllClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCustomizationEquipAllClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCustomizationsClearFiltersClicked
// (Final, Native, Private)

void UStoreCharactersSubPresenter::OnCustomizationsClearFiltersClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCustomizationsClearFiltersClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCustomizationSearchBarTextChanged
// (Final, Native, Private)
// Parameters:
// const class FString&                    enteredText                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCustomizationSearchBarTextChanged(const class FString& enteredText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCustomizationSearchBarTextChanged");

	Params::StoreCharactersSubPresenter_OnCustomizationSearchBarTextChanged Parms{};

	Parms.enteredText = std::move(enteredText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCustomizationSelectAllClicked
// (Final, Native, Private)

void UStoreCharactersSubPresenter::OnCustomizationSelectAllClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCustomizationSelectAllClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCustomizationSelected
// (Final, Native, Private)
// Parameters:
// const class FName                       customizationId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCustomizationSelected(const class FName customizationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCustomizationSelected");

	Params::StoreCharactersSubPresenter_OnCustomizationSelected Parms{};

	Parms.customizationId = customizationId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCustomizationSelectedAgain
// (Final, Native, Private)
// Parameters:
// const class FName                       customizationId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCustomizationSelectedAgain(const class FName customizationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCustomizationSelectedAgain");

	Params::StoreCharactersSubPresenter_OnCustomizationSelectedAgain Parms{};

	Parms.customizationId = customizationId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCustomizationsFiltersChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FStoreCharactersFiltersData&customizationsFilterData                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCustomizationsFiltersChanged(const struct FStoreCharactersFiltersData& customizationsFilterData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCustomizationsFiltersChanged");

	Params::StoreCharactersSubPresenter_OnCustomizationsFiltersChanged Parms{};

	Parms.customizationsFilterData = std::move(customizationsFilterData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCustomizationsSortingChanged
// (Final, Native, Private)
// Parameters:
// const ESortingOption                    SortingOption                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESortingOrder                     sortingOrder                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnCustomizationsSortingChanged(const ESortingOption SortingOption, const ESortingOrder sortingOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCustomizationsSortingChanged");

	Params::StoreCharactersSubPresenter_OnCustomizationsSortingChanged Parms{};

	Parms.SortingOption = SortingOption;
	Parms.sortingOrder = sortingOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnCustomizationTimerExpired
// (Final, Native, Private)

void UStoreCharactersSubPresenter::OnCustomizationTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnCustomizationTimerExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnItemAvailabilityBannerClicked
// (Final, Native, Private)

void UStoreCharactersSubPresenter::OnItemAvailabilityBannerClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnItemAvailabilityBannerClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnItemEquipClicked
// (Final, Native, Private)

void UStoreCharactersSubPresenter::OnItemEquipClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnItemEquipClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnItemUnlockClicked
// (Final, Native, Private)
// Parameters:
// ECurrencyType                           currencyType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnItemUnlockClicked(ECurrencyType currencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnItemUnlockClicked");

	Params::StoreCharactersSubPresenter_OnItemUnlockClicked Parms{};

	Parms.currencyType = currencyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnPlayMoriClicked
// (Final, Native, Private)

void UStoreCharactersSubPresenter::OnPlayMoriClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnPlayMoriClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnPlaySecondMoriClicked
// (Final, Native, Private)

void UStoreCharactersSubPresenter::OnPlaySecondMoriClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnPlaySecondMoriClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnPresetSelected
// (Final, Native, Private)
// Parameters:
// const int32                             presetId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::OnPresetSelected(const int32 presetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnPresetSelected");

	Params::StoreCharactersSubPresenter_OnPresetSelected Parms{};

	Parms.presetId = presetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.OnZoomCharmClicked
// (Final, Native, Private)

void UStoreCharactersSubPresenter::OnZoomCharmClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "OnZoomCharmClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCharactersSubPresenter.PlayMoriAnimation
// (Final, Native, Private)
// Parameters:
// const EMoriPreviewVariant               moriPreviewVariant                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCharactersSubPresenter::PlayMoriAnimation(const EMoriPreviewVariant moriPreviewVariant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCharactersSubPresenter", "PlayMoriAnimation");

	Params::StoreCharactersSubPresenter_PlayMoriAnimation Parms{};

	Parms.moriPreviewVariant = moriPreviewVariant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.OnAnimationPreviewComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UAnimationPreviewSubsystem*       AnimationPreviewSubsystem                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAnimationPreviewRequest&  Request                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    completedSuccessfully                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCollectionsCustomizationsSubPresenter::OnAnimationPreviewComplete(class UAnimationPreviewSubsystem* AnimationPreviewSubsystem, const struct FAnimationPreviewRequest& Request, bool completedSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "OnAnimationPreviewComplete");

	Params::StoreCollectionsCustomizationsSubPresenter_OnAnimationPreviewComplete Parms{};

	Parms.AnimationPreviewSubsystem = AnimationPreviewSubsystem;
	Parms.Request = std::move(Request);
	Parms.completedSuccessfully = completedSuccessfully;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.OnAvailabilityBannerClicked
// (Final, Native, Private)

void UStoreCollectionsCustomizationsSubPresenter::OnAvailabilityBannerClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "OnAvailabilityBannerClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.OnClearFiltersClicked
// (Final, Native, Private)

void UStoreCollectionsCustomizationsSubPresenter::OnClearFiltersClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "OnClearFiltersClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.OnCustomizationEquipClicked
// (Final, Native, Private)

void UStoreCollectionsCustomizationsSubPresenter::OnCustomizationEquipClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "OnCustomizationEquipClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.OnCustomizationSelected
// (Final, Native, Private)
// Parameters:
// const class FName                       customizationId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCollectionsCustomizationsSubPresenter::OnCustomizationSelected(const class FName customizationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "OnCustomizationSelected");

	Params::StoreCollectionsCustomizationsSubPresenter_OnCustomizationSelected Parms{};

	Parms.customizationId = customizationId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.OnCustomizationUnlockClicked
// (Final, Native, Private)
// Parameters:
// ECurrencyType                           currencyType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCollectionsCustomizationsSubPresenter::OnCustomizationUnlockClicked(ECurrencyType currencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "OnCustomizationUnlockClicked");

	Params::StoreCollectionsCustomizationsSubPresenter_OnCustomizationUnlockClicked Parms{};

	Parms.currencyType = currencyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.OnFiltersChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FStoreCharactersFiltersData&storeFiltersData                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreCollectionsCustomizationsSubPresenter::OnFiltersChanged(const struct FStoreCharactersFiltersData& storeFiltersData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "OnFiltersChanged");

	Params::StoreCollectionsCustomizationsSubPresenter_OnFiltersChanged Parms{};

	Parms.storeFiltersData = std::move(storeFiltersData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.OnPlayMoriClicked
// (Final, Native, Private)

void UStoreCollectionsCustomizationsSubPresenter::OnPlayMoriClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "OnPlayMoriClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.OnPlaySecondMoriClicked
// (Final, Native, Private)

void UStoreCollectionsCustomizationsSubPresenter::OnPlaySecondMoriClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "OnPlaySecondMoriClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.OnSearchBarTextChanged
// (Final, Native, Private)
// Parameters:
// const class FString&                    enteredText                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCollectionsCustomizationsSubPresenter::OnSearchBarTextChanged(const class FString& enteredText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "OnSearchBarTextChanged");

	Params::StoreCollectionsCustomizationsSubPresenter_OnSearchBarTextChanged Parms{};

	Parms.enteredText = std::move(enteredText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.OnSortingChanged
// (Final, Native, Private)
// Parameters:
// const ESortingOption                    SortingOption                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESortingOrder                     sortingOrder                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCollectionsCustomizationsSubPresenter::OnSortingChanged(const ESortingOption SortingOption, const ESortingOrder sortingOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "OnSortingChanged");

	Params::StoreCollectionsCustomizationsSubPresenter_OnSortingChanged Parms{};

	Parms.SortingOption = SortingOption;
	Parms.sortingOrder = sortingOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.PlayMoriAnimation
// (Final, Native, Private)
// Parameters:
// const EMoriPreviewVariant               moriPreviewVariant                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCollectionsCustomizationsSubPresenter::PlayMoriAnimation(const EMoriPreviewVariant moriPreviewVariant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "PlayMoriAnimation");

	Params::StoreCollectionsCustomizationsSubPresenter_PlayMoriAnimation Parms{};

	Parms.moriPreviewVariant = moriPreviewVariant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsCustomizationsSubPresenter.UpdateDisplayingCustomizations
// (Final, Native, Private)
// Parameters:
// bool                                    ScrollToSelectedItem                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCollectionsCustomizationsSubPresenter::UpdateDisplayingCustomizations(bool ScrollToSelectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsCustomizationsSubPresenter", "UpdateDisplayingCustomizations");

	Params::StoreCollectionsCustomizationsSubPresenter_UpdateDisplayingCustomizations Parms{};

	Parms.ScrollToSelectedItem = ScrollToSelectedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsListSubPresenter.OnCollectionClicked
// (Final, Native, Private)
// Parameters:
// const class UStoreCollectionViewData*   Collection                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCollectionsListSubPresenter::OnCollectionClicked(const class UStoreCollectionViewData* Collection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsListSubPresenter", "OnCollectionClicked");

	Params::StoreCollectionsListSubPresenter_OnCollectionClicked Parms{};

	Parms.Collection = Collection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsListSubPresenter.UpdateCollectionsBySearch
// (Final, Native, Private)
// Parameters:
// const class FString&                    SearchString                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCollectionsListSubPresenter::UpdateCollectionsBySearch(const class FString& SearchString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsListSubPresenter", "UpdateCollectionsBySearch");

	Params::StoreCollectionsListSubPresenter_UpdateCollectionsBySearch Parms{};

	Parms.SearchString = std::move(SearchString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsSubPresenter.HandleSubPresenterError
// (Final, Native, Private)

void UStoreCollectionsSubPresenter::HandleSubPresenterError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsSubPresenter", "HandleSubPresenterError");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsSubPresenter.OnBackActionLabelChangeRequested
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreCollectionsSubPresenter::OnBackActionLabelChangeRequested(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsSubPresenter", "OnBackActionLabelChangeRequested");

	Params::StoreCollectionsSubPresenter_OnBackActionLabelChangeRequested Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsSubPresenter.OnCollectionClicked
// (Final, Native, Private)
// Parameters:
// const class UStoreCollectionViewData*   Collection                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCollectionsSubPresenter::OnCollectionClicked(const class UStoreCollectionViewData* Collection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsSubPresenter", "OnCollectionClicked");

	Params::StoreCollectionsSubPresenter_OnCollectionClicked Parms{};

	Parms.Collection = Collection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsSubPresenter.OnPageStateUpdated
// (Final, Native, Private)

void UStoreCollectionsSubPresenter::OnPageStateUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsSubPresenter", "OnPageStateUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsSubPresenter.OnStartSubPresenterAsyncOperation
// (Final, Native, Private)
// Parameters:
// class USubPresenter*                    SubPresenter                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCollectionsSubPresenter::OnStartSubPresenterAsyncOperation(class USubPresenter* SubPresenter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsSubPresenter", "OnStartSubPresenterAsyncOperation");

	Params::StoreCollectionsSubPresenter_OnStartSubPresenterAsyncOperation Parms{};

	Parms.SubPresenter = SubPresenter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsSubPresenter.OnStopSubPresenterAsyncOperation
// (Final, Native, Private)
// Parameters:
// class USubPresenter*                    SubPresenter                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreCollectionsSubPresenter::OnStopSubPresenterAsyncOperation(class USubPresenter* SubPresenter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsSubPresenter", "OnStopSubPresenterAsyncOperation");

	Params::StoreCollectionsSubPresenter_OnStopSubPresenterAsyncOperation Parms{};

	Parms.SubPresenter = SubPresenter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreCollectionsSubPresenter.UpdateCollectionData
// (Final, Native, Private)

void UStoreCollectionsSubPresenter::UpdateCollectionData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreCollectionsSubPresenter", "UpdateCollectionData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreFeaturedSubPresenter.OnBackendStoreDataReceived
// (Native, Public)
// Parameters:
// bool                                    Success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreFeaturedSubPresenter::OnBackendStoreDataReceived(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreFeaturedSubPresenter", "OnBackendStoreDataReceived");

	Params::StoreFeaturedSubPresenter_OnBackendStoreDataReceived Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreFeaturedSubPresenter.OnFeaturedContentClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FStoreContentViewData&     StoreContentViewData                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreFeaturedSubPresenter::OnFeaturedContentClicked(const struct FStoreContentViewData& StoreContentViewData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreFeaturedSubPresenter", "OnFeaturedContentClicked");

	Params::StoreFeaturedSubPresenter_OnFeaturedContentClicked Parms{};

	Parms.StoreContentViewData = std::move(StoreContentViewData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreFeaturedSubPresenter.OnMysteryBoxClaimableStatusChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FString&                    Campaign                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMysteryBoxStatus&         status                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreFeaturedSubPresenter::OnMysteryBoxClaimableStatusChanged(const class FString& Campaign, const struct FMysteryBoxStatus& status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreFeaturedSubPresenter", "OnMysteryBoxClaimableStatusChanged");

	Params::StoreFeaturedSubPresenter_OnMysteryBoxClaimableStatusChanged Parms{};

	Parms.Campaign = std::move(Campaign);
	Parms.status = std::move(status);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreFeaturedSubPresenter.OnMysteryBoxClaimClicked
// (Final, Native, Private)

void UStoreFeaturedSubPresenter::OnMysteryBoxClaimClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreFeaturedSubPresenter", "OnMysteryBoxClaimClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreFeaturedSubPresenter.OnMysteryBoxClaimComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    Succeeded                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Campaign                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMysteryBoxStatus&         status                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreFeaturedSubPresenter::OnMysteryBoxClaimComplete(bool Succeeded, const class FString& Campaign, const struct FMysteryBoxStatus& status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreFeaturedSubPresenter", "OnMysteryBoxClaimComplete");

	Params::StoreFeaturedSubPresenter_OnMysteryBoxClaimComplete Parms{};

	Parms.Succeeded = Succeeded;
	Parms.Campaign = std::move(Campaign);
	Parms.status = std::move(status);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreFeaturedSubPresenter.OnMysteryBoxStatusLoaded
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    Succeeded                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Campaign                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMysteryBoxStatus&         status                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreFeaturedSubPresenter::OnMysteryBoxStatusLoaded(bool Succeeded, const class FString& Campaign, const struct FMysteryBoxStatus& status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreFeaturedSubPresenter", "OnMysteryBoxStatusLoaded");

	Params::StoreFeaturedSubPresenter_OnMysteryBoxStatusLoaded Parms{};

	Parms.Succeeded = Succeeded;
	Parms.Campaign = std::move(Campaign);
	Parms.status = std::move(status);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreFeaturedSubPresenter.RequestCrossPromoPopup
// (Final, Native, Private)
// Parameters:
// const class FString&                    CrossPromoId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreFeaturedSubPresenter::RequestCrossPromoPopup(const class FString& CrossPromoId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreFeaturedSubPresenter", "RequestCrossPromoPopup");

	Params::StoreFeaturedSubPresenter_RequestCrossPromoPopup Parms{};

	Parms.CrossPromoId = std::move(CrossPromoId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreFeaturedSubPresenter.RequestMoveFromFeaturedCustomizationItems
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FStoreRedirectionData&     StoreRedirectionData                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreFeaturedSubPresenter::RequestMoveFromFeaturedCustomizationItems(const struct FStoreRedirectionData& StoreRedirectionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreFeaturedSubPresenter", "RequestMoveFromFeaturedCustomizationItems");

	Params::StoreFeaturedSubPresenter_RequestMoveFromFeaturedCustomizationItems Parms{};

	Parms.StoreRedirectionData = std::move(StoreRedirectionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreFeaturedSubPresenter.RequestMoveToCharactersPage
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FStoreRedirectionData&     StoreRedirectionData                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreFeaturedSubPresenter::RequestMoveToCharactersPage(const struct FStoreRedirectionData& StoreRedirectionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreFeaturedSubPresenter", "RequestMoveToCharactersPage");

	Params::StoreFeaturedSubPresenter_RequestMoveToCharactersPage Parms{};

	Parms.StoreRedirectionData = std::move(StoreRedirectionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreFeaturedSubPresenter.RequestMoveToPage
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FStoreRedirectionData&     StoreRedirectionData                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const uint32                            contextUid                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreFeaturedSubPresenter::RequestMoveToPage(const struct FStoreRedirectionData& StoreRedirectionData, const uint32 contextUid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreFeaturedSubPresenter", "RequestMoveToPage");

	Params::StoreFeaturedSubPresenter_RequestMoveToPage Parms{};

	Parms.StoreRedirectionData = std::move(StoreRedirectionData);
	Parms.contextUid = contextUid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.OnAsyncLoadComplete
// (Final, Native, Private)

void UStoreMenuPresenter::OnAsyncLoadComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "OnAsyncLoadComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.OnBackAction
// (Final, Native, Private)

void UStoreMenuPresenter::OnBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "OnBackAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.OnDisplayStandRotation
// (Final, Native, Private)
// Parameters:
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreMenuPresenter::OnDisplayStandRotation(float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "OnDisplayStandRotation");

	Params::StoreMenuPresenter_OnDisplayStandRotation Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.OnMenuTabSelected
// (Final, Native, Private)
// Parameters:
// EStoreMenuState                         menuState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreMenuPresenter::OnMenuTabSelected(EStoreMenuState menuState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "OnMenuTabSelected");

	Params::StoreMenuPresenter_OnMenuTabSelected Parms{};

	Parms.menuState = menuState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.OnMenuTabSelectedAgain
// (Final, Native, Private)
// Parameters:
// EStoreMenuState                         menuState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreMenuPresenter::OnMenuTabSelectedAgain(EStoreMenuState menuState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "OnMenuTabSelectedAgain");

	Params::StoreMenuPresenter_OnMenuTabSelectedAgain Parms{};

	Parms.menuState = menuState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.OnNotEnoughCurrencyModalButtonClicked
// (Final, Native, Private)
// Parameters:
// const ECurrencyType                     currencyType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreMenuPresenter::OnNotEnoughCurrencyModalButtonClicked(const ECurrencyType currencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "OnNotEnoughCurrencyModalButtonClicked");

	Params::StoreMenuPresenter_OnNotEnoughCurrencyModalButtonClicked Parms{};

	Parms.currencyType = currencyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.OnPageStateUpdated
// (Final, Native, Private)

void UStoreMenuPresenter::OnPageStateUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "OnPageStateUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.OnStartSubPresenterAsyncOperation
// (Final, Native, Private)
// Parameters:
// class USubPresenter*                    SubPresenter                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreMenuPresenter::OnStartSubPresenterAsyncOperation(class USubPresenter* SubPresenter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "OnStartSubPresenterAsyncOperation");

	Params::StoreMenuPresenter_OnStartSubPresenterAsyncOperation Parms{};

	Parms.SubPresenter = SubPresenter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.OnStopSubPresenterAsyncOperation
// (Final, Native, Private)
// Parameters:
// class USubPresenter*                    SubPresenter                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreMenuPresenter::OnStopSubPresenterAsyncOperation(class USubPresenter* SubPresenter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "OnStopSubPresenterAsyncOperation");

	Params::StoreMenuPresenter_OnStopSubPresenterAsyncOperation Parms{};

	Parms.SubPresenter = SubPresenter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.OpenAuricCellsOverlay
// (Final, Native, Private)

void UStoreMenuPresenter::OpenAuricCellsOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "OpenAuricCellsOverlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.OpenRedeemCodePopup
// (Final, Native, Private)

void UStoreMenuPresenter::OpenRedeemCodePopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "OpenRedeemCodePopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.OnBackActionLabelChangeRequested
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// const class FText&                      newLabel                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreMenuPresenter::OnBackActionLabelChangeRequested(const class FText& newLabel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "OnBackActionLabelChangeRequested");

	Params::StoreMenuPresenter_OnBackActionLabelChangeRequested Parms{};

	Parms.newLabel = std::move(newLabel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreMenuPresenter.ResetBackActionLabel
// (Final, Native, Private, Const)

void UStoreMenuPresenter::ResetBackActionLabel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreMenuPresenter", "ResetBackActionLabel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreRootWidget.ShouldPresentBackgroundOnUnfocus
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreRootWidget::ShouldPresentBackgroundOnUnfocus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreRootWidget", "ShouldPresentBackgroundOnUnfocus");

	Params::StoreRootWidget_ShouldPresentBackgroundOnUnfocus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.StoreSpecialPacksSubPresenter.BuyHeritagePack
// (Final, Native, Private)
// Parameters:
// const class FString&                    packId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreSpecialPacksSubPresenter::BuyHeritagePack(const class FString& packId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialPacksSubPresenter", "BuyHeritagePack");

	Params::StoreSpecialPacksSubPresenter_BuyHeritagePack Parms{};

	Parms.packId = std::move(packId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSpecialPacksSubPresenter.OnArchivePassClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FString&                    packId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      archiveId                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreSpecialPacksSubPresenter::OnArchivePassClicked(const class FString& packId, const class FName& archiveId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialPacksSubPresenter", "OnArchivePassClicked");

	Params::StoreSpecialPacksSubPresenter_OnArchivePassClicked Parms{};

	Parms.packId = std::move(packId);
	Parms.archiveId = archiveId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSpecialPacksSubPresenter.OnChapterPackClicked
// (Final, Native, Private)
// Parameters:
// const class FString&                    packId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreSpecialPacksSubPresenter::OnChapterPackClicked(const class FString& packId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialPacksSubPresenter", "OnChapterPackClicked");

	Params::StoreSpecialPacksSubPresenter_OnChapterPackClicked Parms{};

	Parms.packId = std::move(packId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSpecialPacksSubPresenter.OnCharacterClicked
// (Final, Native, Private)
// Parameters:
// const class FString&                    packId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             characterIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreSpecialPacksSubPresenter::OnCharacterClicked(const class FString& packId, const int32 characterIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialPacksSubPresenter", "OnCharacterClicked");

	Params::StoreSpecialPacksSubPresenter_OnCharacterClicked Parms{};

	Parms.packId = std::move(packId);
	Parms.characterIndex = characterIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSpecialPacksSubPresenter.OnCustomizationClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FString&                    packId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      customizationId                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreSpecialPacksSubPresenter::OnCustomizationClicked(const class FString& packId, const class FName& customizationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialPacksSubPresenter", "OnCustomizationClicked");

	Params::StoreSpecialPacksSubPresenter_OnCustomizationClicked Parms{};

	Parms.packId = std::move(packId);
	Parms.customizationId = customizationId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSpecialPacksSubPresenter.OnHeritagePackClicked
// (Final, Native, Private)
// Parameters:
// const class FString&                    packId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreSpecialPacksSubPresenter::OnHeritagePackClicked(const class FString& packId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialPacksSubPresenter", "OnHeritagePackClicked");

	Params::StoreSpecialPacksSubPresenter_OnHeritagePackClicked Parms{};

	Parms.packId = std::move(packId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSpecialPacksSubPresenter.OnPackBuyClicked
// (Final, Native, Private)
// Parameters:
// const class FString&                    packId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreSpecialPacksSubPresenter::OnPackBuyClicked(const class FString& packId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialPacksSubPresenter", "OnPackBuyClicked");

	Params::StoreSpecialPacksSubPresenter_OnPackBuyClicked Parms{};

	Parms.packId = std::move(packId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSpecialPacksSubPresenter.OnSpecialPackClicked
// (Final, Native, Private)
// Parameters:
// const class FString&                    packId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreSpecialPacksSubPresenter::OnSpecialPackClicked(const class FString& packId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialPacksSubPresenter", "OnSpecialPackClicked");

	Params::StoreSpecialPacksSubPresenter_OnSpecialPackClicked Parms{};

	Parms.packId = std::move(packId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSpecialsSubPresenter.OnArchivePassBannerClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FName&                      archiveId                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreSpecialsSubPresenter::OnArchivePassBannerClicked(const class FName& archiveId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialsSubPresenter", "OnArchivePassBannerClicked");

	Params::StoreSpecialsSubPresenter_OnArchivePassBannerClicked Parms{};

	Parms.archiveId = archiveId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSpecialsSubPresenter.OnAuricCellSpecialBuyAction
// (Final, Native, Private)
// Parameters:
// class FName                             bundleId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreSpecialsSubPresenter::OnAuricCellSpecialBuyAction(class FName bundleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialsSubPresenter", "OnAuricCellSpecialBuyAction");

	Params::StoreSpecialsSubPresenter_OnAuricCellSpecialBuyAction Parms{};

	Parms.bundleId = bundleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSpecialsSubPresenter.OnPremiumTransactionCompleted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    Success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPremiumPurchaseCompleteData&purchaseCompleteData                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreSpecialsSubPresenter::OnPremiumTransactionCompleted(bool Success, class FName ItemId, const struct FPremiumPurchaseCompleteData& purchaseCompleteData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialsSubPresenter", "OnPremiumTransactionCompleted");

	Params::StoreSpecialsSubPresenter_OnPremiumTransactionCompleted Parms{};

	Parms.Success = Success;
	Parms.ItemId = ItemId;
	Parms.purchaseCompleteData = std::move(purchaseCompleteData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSpecialsSubPresenter.OnSpecialPacksUpdated
// (Final, Native, Private)

void UStoreSpecialsSubPresenter::OnSpecialPacksUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialsSubPresenter", "OnSpecialPacksUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.StoreSpecialsSubPresenter.RequestMoveToCharactersPage
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FStoreRedirectionData&     StoreRedirectionData                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStoreSpecialsSubPresenter::RequestMoveToCharactersPage(const struct FStoreRedirectionData& StoreRedirectionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreSpecialsSubPresenter", "RequestMoveToCharactersPage");

	Params::StoreSpecialsSubPresenter_RequestMoveToCharactersPage Parms{};

	Parms.StoreRedirectionData = std::move(StoreRedirectionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.SubtitlesPresenter.OnEntryTimedOut
// (Final, Native, Private)

void USubtitlesPresenter::OnEntryTimedOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubtitlesPresenter", "OnEntryTimedOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.SubtitlesPresenter.IsSubtitlesEnabled
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USubtitlesPresenter::IsSubtitlesEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubtitlesPresenter", "IsSubtitlesEnabled");

	Params::SubtitlesPresenter_IsSubtitlesEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.TallyMenuPresenter.SetTallyScoreboardVisibility
// (Final, Native, Private, Const)
// Parameters:
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTallyMenuPresenter::SetTallyScoreboardVisibility(bool IsVisible) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TallyMenuPresenter", "SetTallyScoreboardVisibility");

	Params::TallyMenuPresenter_SetTallyScoreboardVisibility Parms{};

	Parms.IsVisible = IsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.TallyScoreboardSubPresenter.OnPlayerSocialOptionClicked
// (Final, Native, Protected)
// Parameters:
// const struct FPlayerSocialOptionViewData&playerSocialOptionData                                 (ConstParm, Parm, NativeAccessSpecifierPublic)

void UTallyScoreboardSubPresenter::OnPlayerSocialOptionClicked(const struct FPlayerSocialOptionViewData& playerSocialOptionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TallyScoreboardSubPresenter", "OnPlayerSocialOptionClicked");

	Params::TallyScoreboardSubPresenter_OnPlayerSocialOptionClicked Parms{};

	Parms.playerSocialOptionData = std::move(playerSocialOptionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.TallyScoreboardSubPresenter.OnPlayerStatusClicked
// (Final, Native, Protected)
// Parameters:
// const class FString&                    PlayerId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTallyScoreboardSubPresenter::OnPlayerStatusClicked(const class FString& PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TallyScoreboardSubPresenter", "OnPlayerStatusClicked");

	Params::TallyScoreboardSubPresenter_OnPlayerStatusClicked Parms{};

	Parms.PlayerId = std::move(PlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.TallyScoreboardSubPresenter.OnReportButtonClicked
// (Final, Native, Protected)
// Parameters:
// const class FString&                    PlayerId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTallyScoreboardSubPresenter::OnReportButtonClicked(const class FString& PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TallyScoreboardSubPresenter", "OnReportButtonClicked");

	Params::TallyScoreboardSubPresenter_OnReportButtonClicked Parms{};

	Parms.PlayerId = std::move(PlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ToastNotificationPresenter.DisplayPopup
// (Final, Native, Private)
// Parameters:
// const uint32                            notificationId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UToastNotificationPresenter::DisplayPopup(const uint32 notificationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ToastNotificationPresenter", "DisplayPopup");

	Params::ToastNotificationPresenter_DisplayPopup Parms{};

	Parms.notificationId = notificationId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ToastNotificationPresenter.OnButtonSelected
// (Final, Native, Private)
// Parameters:
// const int32                             buttonId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint32                            notificationId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UToastNotificationPresenter::OnButtonSelected(const int32 buttonId, const uint32 notificationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ToastNotificationPresenter", "OnButtonSelected");

	Params::ToastNotificationPresenter_OnButtonSelected Parms{};

	Parms.buttonId = buttonId;
	Parms.notificationId = notificationId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.ToastNotificationPresenter.OnNotificationRemoved
// (Final, Native, Private)
// Parameters:
// const uint32                            notificationId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UToastNotificationPresenter::OnNotificationRemoved(const uint32 notificationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ToastNotificationPresenter", "OnNotificationRemoved");

	Params::ToastNotificationPresenter_OnNotificationRemoved Parms{};

	Parms.notificationId = notificationId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudTutorialBlockingNotificationsPresenter.OnTutorialHudFadeInTriggered
// (Final, Native, Private)

void UHudTutorialBlockingNotificationsPresenter::OnTutorialHudFadeInTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudTutorialBlockingNotificationsPresenter", "OnTutorialHudFadeInTriggered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudTutorialBlockingNotificationsPresenter.OnTutorialHudFadeOutTriggered
// (Final, Native, Private)

void UHudTutorialBlockingNotificationsPresenter::OnTutorialHudFadeOutTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudTutorialBlockingNotificationsPresenter", "OnTutorialHudFadeOutTriggered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.HudTutorialBlockingNotificationsPresenter.OnTutorialNotificationClosedByUserInput
// (Final, Native, Private)

void UHudTutorialBlockingNotificationsPresenter::OnTutorialNotificationClosedByUserInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudTutorialBlockingNotificationsPresenter", "OnTutorialNotificationClosedByUserInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDUIPresenters.WatermarkPresenter.IsNonShippingBuild
// (Final, Native, Protected)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWatermarkPresenter::IsNonShippingBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WatermarkPresenter", "IsNonShippingBuild");

	Params::WatermarkPresenter_IsNonShippingBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.WatermarkPresenter.IsSteamBuild
// (Final, Native, Protected)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWatermarkPresenter::IsSteamBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WatermarkPresenter", "IsSteamBuild");

	Params::WatermarkPresenter_IsSteamBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDUIPresenters.WatermarkPresenter.IsUsingCommandLineArgument
// (Final, Native, Protected)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWatermarkPresenter::IsUsingCommandLineArgument()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WatermarkPresenter", "IsUsingCommandLineArgument");

	Params::WatermarkPresenter_IsUsingCommandLineArgument Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

