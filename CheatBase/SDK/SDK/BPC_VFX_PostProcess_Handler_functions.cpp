#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_VFX_PostProcess_Handler

#include "Basic.hpp"

#include "BPC_VFX_PostProcess_Handler_classes.hpp"
#include "BPC_VFX_PostProcess_Handler_parameters.hpp"


namespace SDK
{

// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.ExecuteUbergraph_BPC_VFX_PostProcess_Handler
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_VFX_PostProcess_Handler_C::ExecuteUbergraph_BPC_VFX_PostProcess_Handler(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_VFX_PostProcess_Handler_C", "ExecuteUbergraph_BPC_VFX_PostProcess_Handler");

	Params::BPC_VFX_PostProcess_Handler_C_ExecuteUbergraph_BPC_VFX_PostProcess_Handler Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP Initialize Material Instance
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              SystemToSpawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               Spawn_Material                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_VFX_PostProcess_Handler_C::PP_Initialize_Material_Instance(const struct FGameplayTag& SystemToSpawn, class UMaterialInterface* Spawn_Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_VFX_PostProcess_Handler_C", "PP Initialize Material Instance");

	Params::BPC_VFX_PostProcess_Handler_C_PP_Initialize_Material_Instance Parms{};

	Parms.SystemToSpawn = std::move(SystemToSpawn);
	Parms.Spawn_Material = Spawn_Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP Layer_Parameters_Update_Float
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              MaterialInstanceTag                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_VFX_PostProcess_Handler_C::PP_Layer_Parameters_Update_Float(const struct FGameplayTag& MaterialInstanceTag, class FName ParameterName, double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_VFX_PostProcess_Handler_C", "PP Layer_Parameters_Update_Float");

	Params::BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Float Parms{};

	Parms.MaterialInstanceTag = std::move(MaterialInstanceTag);
	Parms.ParameterName = ParameterName;
	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Blend_Weight_Add
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_VFX_PostProcess_Handler_C::PP_Blend_Weight_Add()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_VFX_PostProcess_Handler_C", "PP_Blend_Weight_Add");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Blend_Weight_Remove
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_VFX_PostProcess_Handler_C::PP_Blend_Weight_Remove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_VFX_PostProcess_Handler_C", "PP_Blend_Weight_Remove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Layer_Parameters_Update_Linear_Color
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              MaterialInstanceTag                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              LinearColor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_VFX_PostProcess_Handler_C::PP_Layer_Parameters_Update_Linear_Color(const struct FGameplayTag& MaterialInstanceTag, class FName ParameterName, const struct FLinearColor& LinearColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_VFX_PostProcess_Handler_C", "PP_Layer_Parameters_Update_Linear_Color");

	Params::BPC_VFX_PostProcess_Handler_C_PP_Layer_Parameters_Update_Linear_Color Parms{};

	Parms.MaterialInstanceTag = std::move(MaterialInstanceTag);
	Parms.ParameterName = ParameterName;
	Parms.LinearColor = std::move(LinearColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Master_Parameters_Update_Linear_Color
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              MaterialInstanceTag                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              LinearColor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_VFX_PostProcess_Handler_C::PP_Master_Parameters_Update_Linear_Color(const struct FGameplayTag& MaterialInstanceTag, class FName ParameterName, const struct FLinearColor& LinearColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_VFX_PostProcess_Handler_C", "PP_Master_Parameters_Update_Linear_Color");

	Params::BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Linear_Color Parms{};

	Parms.MaterialInstanceTag = std::move(MaterialInstanceTag);
	Parms.ParameterName = ParameterName;
	Parms.LinearColor = std::move(LinearColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Master_Parameters_Update_Scalar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              MaterialInstanceTag                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_VFX_PostProcess_Handler_C::PP_Master_Parameters_Update_Scalar(const struct FGameplayTag& MaterialInstanceTag, class FName ParameterName, double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_VFX_PostProcess_Handler_C", "PP_Master_Parameters_Update_Scalar");

	Params::BPC_VFX_PostProcess_Handler_C_PP_Master_Parameters_Update_Scalar Parms{};

	Parms.MaterialInstanceTag = std::move(MaterialInstanceTag);
	Parms.ParameterName = ParameterName;
	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Material_Add
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              MaterialInstanceTag                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               Spawn_Parameters                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_VFX_PostProcess_Handler_C::PP_Material_Add(const struct FGameplayTag& MaterialInstanceTag, class UMaterialInterface* Spawn_Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_VFX_PostProcess_Handler_C", "PP_Material_Add");

	Params::BPC_VFX_PostProcess_Handler_C_PP_Material_Add Parms{};

	Parms.MaterialInstanceTag = std::move(MaterialInstanceTag);
	Parms.Spawn_Parameters = Spawn_Parameters;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Material_Create_Instance
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_VFX_PostProcess_Handler_C::PP_Material_Create_Instance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_VFX_PostProcess_Handler_C", "PP_Material_Create_Instance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.PP_Material_Remove
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              MaterialInstanceTag                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBPC_VFX_PostProcess_Handler_C::PP_Material_Remove(const struct FGameplayTag& MaterialInstanceTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_VFX_PostProcess_Handler_C", "PP_Material_Remove");

	Params::BPC_VFX_PostProcess_Handler_C_PP_Material_Remove Parms{};

	Parms.MaterialInstanceTag = std::move(MaterialInstanceTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_VFX_PostProcess_Handler.BPC_VFX_PostProcess_Handler_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBPC_VFX_PostProcess_Handler_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_VFX_PostProcess_Handler_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

