#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreTabContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "Slate_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreTabContainer.WBP_CoreTabContainer_C
// 0x00D8 (0x04B0 - 0x03D8)
class UWBP_CoreTabContainer_C final : public UCoreTabContainerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               Left;                                              // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               NextInputSwitcherContainer;                        // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               PreviousInputSwitcherContainer;                    // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Right;                                             // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FKey                                   PreviousTabControllerKey;                          // 0x0400(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FKey                                   NextTabControllerKey;                              // 0x0420(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TMap<EControlMode, class UDataTable*>         ControlModeDataMap;                                // 0x0440(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 InputSwitcherClass;                                // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InputSwitcherNudge;                                // 0x0498(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            TabAlignment;                                      // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void CreateInputSwitcher(class UClass* InputSwitcherClass_0, class UCoreInputSwitcherWidget*& OutInputSwitcher, class UPanelWidget* InputSwitcherContainer, ETextJustify Alignment);
	void ExecuteUbergraph_WBP_CoreTabContainer(int32 EntryPoint);
	void InitInputSwitchers();
	void OnControlModeChangedBP(EControlMode controlMode);
	void OnNextInputSwitcherTriggered();
	void OnPreviousInputSwitcherTriggered();
	void PreConstruct(bool IsDesignTime);
	void SetInputSwitcherAlignment();
	void UpdateAlignments();
	void UpdateInputSwitchers();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreTabContainer_C">();
	}
	static class UWBP_CoreTabContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreTabContainer_C>();
	}
};
static_assert(alignof(UWBP_CoreTabContainer_C) == 0x000008, "Wrong alignment on UWBP_CoreTabContainer_C");
static_assert(sizeof(UWBP_CoreTabContainer_C) == 0x0004B0, "Wrong size on UWBP_CoreTabContainer_C");
static_assert(offsetof(UWBP_CoreTabContainer_C, UberGraphFrame) == 0x0003D8, "Member 'UWBP_CoreTabContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreTabContainer_C, Left) == 0x0003E0, "Member 'UWBP_CoreTabContainer_C::Left' has a wrong offset!");
static_assert(offsetof(UWBP_CoreTabContainer_C, NextInputSwitcherContainer) == 0x0003E8, "Member 'UWBP_CoreTabContainer_C::NextInputSwitcherContainer' has a wrong offset!");
static_assert(offsetof(UWBP_CoreTabContainer_C, PreviousInputSwitcherContainer) == 0x0003F0, "Member 'UWBP_CoreTabContainer_C::PreviousInputSwitcherContainer' has a wrong offset!");
static_assert(offsetof(UWBP_CoreTabContainer_C, Right) == 0x0003F8, "Member 'UWBP_CoreTabContainer_C::Right' has a wrong offset!");
static_assert(offsetof(UWBP_CoreTabContainer_C, PreviousTabControllerKey) == 0x000400, "Member 'UWBP_CoreTabContainer_C::PreviousTabControllerKey' has a wrong offset!");
static_assert(offsetof(UWBP_CoreTabContainer_C, NextTabControllerKey) == 0x000420, "Member 'UWBP_CoreTabContainer_C::NextTabControllerKey' has a wrong offset!");
static_assert(offsetof(UWBP_CoreTabContainer_C, ControlModeDataMap) == 0x000440, "Member 'UWBP_CoreTabContainer_C::ControlModeDataMap' has a wrong offset!");
static_assert(offsetof(UWBP_CoreTabContainer_C, InputSwitcherClass) == 0x000490, "Member 'UWBP_CoreTabContainer_C::InputSwitcherClass' has a wrong offset!");
static_assert(offsetof(UWBP_CoreTabContainer_C, InputSwitcherNudge) == 0x000498, "Member 'UWBP_CoreTabContainer_C::InputSwitcherNudge' has a wrong offset!");
static_assert(offsetof(UWBP_CoreTabContainer_C, TabAlignment) == 0x0004A8, "Member 'UWBP_CoreTabContainer_C::TabAlignment' has a wrong offset!");

}

